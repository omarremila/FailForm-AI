function pL(n,t){for(var e=0;e<t.length;e++){const s=t[e];if(typeof s!="string"&&!Array.isArray(s)){for(const a in s)if(a!=="default"&&!(a in n)){const r=Object.getOwnPropertyDescriptor(s,a);r&&Object.defineProperty(n,a,r.get?r:{enumerable:!0,get:()=>s[a]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function e(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=e(a);fetch(a.href,r)}})();function Ok(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function mL(n){if(n.__esModule)return n;var t=n.default;if(typeof t=="function"){var e=function s(){return this instanceof s?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var a=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,a.get?a:{enumerable:!0,get:function(){return n[s]}})}),e}var Sx={exports:{}},bh={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var b2;function gL(){if(b2)return bh;b2=1;var n=Symbol.for("react.transitional.element"),t=Symbol.for("react.fragment");function e(s,a,r){var i=null;if(r!==void 0&&(i=""+r),a.key!==void 0&&(i=""+a.key),"key"in a){r={};for(var l in a)l!=="key"&&(r[l]=a[l])}else r=a;return a=r.ref,{$$typeof:n,type:s,key:i,ref:a!==void 0?a:null,props:r}}return bh.Fragment=t,bh.jsx=e,bh.jsxs=e,bh}var x2;function yL(){return x2||(x2=1,Sx.exports=gL()),Sx.exports}var ce=yL(),Nx={exports:{}},Ht={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var v2;function bL(){if(v2)return Ht;v2=1;var n=Symbol.for("react.transitional.element"),t=Symbol.for("react.portal"),e=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),r=Symbol.for("react.consumer"),i=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;function m(B){return B===null||typeof B!="object"?null:(B=p&&B[p]||B["@@iterator"],typeof B=="function"?B:null)}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b=Object.assign,v={};function w(B,q,lt){this.props=B,this.context=q,this.refs=v,this.updater=lt||y}w.prototype.isReactComponent={},w.prototype.setState=function(B,q){if(typeof B!="object"&&typeof B!="function"&&B!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,B,q,"setState")},w.prototype.forceUpdate=function(B){this.updater.enqueueForceUpdate(this,B,"forceUpdate")};function S(){}S.prototype=w.prototype;function T(B,q,lt){this.props=B,this.context=q,this.refs=v,this.updater=lt||y}var $=T.prototype=new S;$.constructor=T,b($,w.prototype),$.isPureReactComponent=!0;var C=Array.isArray,I={H:null,A:null,T:null,S:null},R=Object.prototype.hasOwnProperty;function L(B,q,lt,ot,ut,mt){return lt=mt.ref,{$$typeof:n,type:B,key:q,ref:lt!==void 0?lt:null,props:mt}}function M(B,q){return L(B.type,q,void 0,void 0,void 0,B.props)}function O(B){return typeof B=="object"&&B!==null&&B.$$typeof===n}function _(B){var q={"=":"=0",":":"=2"};return"$"+B.replace(/[=:]/g,function(lt){return q[lt]})}var A=/\/+/g;function G(B,q){return typeof B=="object"&&B!==null&&B.key!=null?_(""+B.key):q.toString(36)}function X(){}function tt(B){switch(B.status){case"fulfilled":return B.value;case"rejected":throw B.reason;default:switch(typeof B.status=="string"?B.then(X,X):(B.status="pending",B.then(function(q){B.status==="pending"&&(B.status="fulfilled",B.value=q)},function(q){B.status==="pending"&&(B.status="rejected",B.reason=q)})),B.status){case"fulfilled":return B.value;case"rejected":throw B.reason}}throw B}function Q(B,q,lt,ot,ut){var mt=typeof B;(mt==="undefined"||mt==="boolean")&&(B=null);var bt=!1;if(B===null)bt=!0;else switch(mt){case"bigint":case"string":case"number":bt=!0;break;case"object":switch(B.$$typeof){case n:case t:bt=!0;break;case d:return bt=B._init,Q(bt(B._payload),q,lt,ot,ut)}}if(bt)return ut=ut(B),bt=ot===""?"."+G(B,0):ot,C(ut)?(lt="",bt!=null&&(lt=bt.replace(A,"$&/")+"/"),Q(ut,q,lt,"",function(Ct){return Ct})):ut!=null&&(O(ut)&&(ut=M(ut,lt+(ut.key==null||B&&B.key===ut.key?"":(""+ut.key).replace(A,"$&/")+"/")+bt)),q.push(ut)),1;bt=0;var Tt=ot===""?".":ot+":";if(C(B))for(var St=0;St<B.length;St++)ot=B[St],mt=Tt+G(ot,St),bt+=Q(ot,q,lt,mt,ut);else if(St=m(B),typeof St=="function")for(B=St.call(B),St=0;!(ot=B.next()).done;)ot=ot.value,mt=Tt+G(ot,St++),bt+=Q(ot,q,lt,mt,ut);else if(mt==="object"){if(typeof B.then=="function")return Q(tt(B),q,lt,ot,ut);throw q=String(B),Error("Objects are not valid as a React child (found: "+(q==="[object Object]"?"object with keys {"+Object.keys(B).join(", ")+"}":q)+"). If you meant to render a collection of children, use an array instead.")}return bt}function U(B,q,lt){if(B==null)return B;var ot=[],ut=0;return Q(B,ot,"","",function(mt){return q.call(lt,mt,ut++)}),ot}function et(B){if(B._status===-1){var q=B._result;q=q(),q.then(function(lt){(B._status===0||B._status===-1)&&(B._status=1,B._result=lt)},function(lt){(B._status===0||B._status===-1)&&(B._status=2,B._result=lt)}),B._status===-1&&(B._status=0,B._result=q)}if(B._status===1)return B._result.default;throw B._result}var Y=typeof reportError=="function"?reportError:function(B){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var q=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof B=="object"&&B!==null&&typeof B.message=="string"?String(B.message):String(B),error:B});if(!window.dispatchEvent(q))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",B);return}console.error(B)};function rt(){}return Ht.Children={map:U,forEach:function(B,q,lt){U(B,function(){q.apply(this,arguments)},lt)},count:function(B){var q=0;return U(B,function(){q++}),q},toArray:function(B){return U(B,function(q){return q})||[]},only:function(B){if(!O(B))throw Error("React.Children.only expected to receive a single React element child.");return B}},Ht.Component=w,Ht.Fragment=e,Ht.Profiler=a,Ht.PureComponent=T,Ht.StrictMode=s,Ht.Suspense=u,Ht.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=I,Ht.act=function(){throw Error("act(...) is not supported in production builds of React.")},Ht.cache=function(B){return function(){return B.apply(null,arguments)}},Ht.cloneElement=function(B,q,lt){if(B==null)throw Error("The argument must be a React element, but you passed "+B+".");var ot=b({},B.props),ut=B.key,mt=void 0;if(q!=null)for(bt in q.ref!==void 0&&(mt=void 0),q.key!==void 0&&(ut=""+q.key),q)!R.call(q,bt)||bt==="key"||bt==="__self"||bt==="__source"||bt==="ref"&&q.ref===void 0||(ot[bt]=q[bt]);var bt=arguments.length-2;if(bt===1)ot.children=lt;else if(1<bt){for(var Tt=Array(bt),St=0;St<bt;St++)Tt[St]=arguments[St+2];ot.children=Tt}return L(B.type,ut,void 0,void 0,mt,ot)},Ht.createContext=function(B){return B={$$typeof:i,_currentValue:B,_currentValue2:B,_threadCount:0,Provider:null,Consumer:null},B.Provider=B,B.Consumer={$$typeof:r,_context:B},B},Ht.createElement=function(B,q,lt){var ot,ut={},mt=null;if(q!=null)for(ot in q.key!==void 0&&(mt=""+q.key),q)R.call(q,ot)&&ot!=="key"&&ot!=="__self"&&ot!=="__source"&&(ut[ot]=q[ot]);var bt=arguments.length-2;if(bt===1)ut.children=lt;else if(1<bt){for(var Tt=Array(bt),St=0;St<bt;St++)Tt[St]=arguments[St+2];ut.children=Tt}if(B&&B.defaultProps)for(ot in bt=B.defaultProps,bt)ut[ot]===void 0&&(ut[ot]=bt[ot]);return L(B,mt,void 0,void 0,null,ut)},Ht.createRef=function(){return{current:null}},Ht.forwardRef=function(B){return{$$typeof:l,render:B}},Ht.isValidElement=O,Ht.lazy=function(B){return{$$typeof:d,_payload:{_status:-1,_result:B},_init:et}},Ht.memo=function(B,q){return{$$typeof:h,type:B,compare:q===void 0?null:q}},Ht.startTransition=function(B){var q=I.T,lt={};I.T=lt;try{var ot=B(),ut=I.S;ut!==null&&ut(lt,ot),typeof ot=="object"&&ot!==null&&typeof ot.then=="function"&&ot.then(rt,Y)}catch(mt){Y(mt)}finally{I.T=q}},Ht.unstable_useCacheRefresh=function(){return I.H.useCacheRefresh()},Ht.use=function(B){return I.H.use(B)},Ht.useActionState=function(B,q,lt){return I.H.useActionState(B,q,lt)},Ht.useCallback=function(B,q){return I.H.useCallback(B,q)},Ht.useContext=function(B){return I.H.useContext(B)},Ht.useDebugValue=function(){},Ht.useDeferredValue=function(B,q){return I.H.useDeferredValue(B,q)},Ht.useEffect=function(B,q){return I.H.useEffect(B,q)},Ht.useId=function(){return I.H.useId()},Ht.useImperativeHandle=function(B,q,lt){return I.H.useImperativeHandle(B,q,lt)},Ht.useInsertionEffect=function(B,q){return I.H.useInsertionEffect(B,q)},Ht.useLayoutEffect=function(B,q){return I.H.useLayoutEffect(B,q)},Ht.useMemo=function(B,q){return I.H.useMemo(B,q)},Ht.useOptimistic=function(B,q){return I.H.useOptimistic(B,q)},Ht.useReducer=function(B,q,lt){return I.H.useReducer(B,q,lt)},Ht.useRef=function(B){return I.H.useRef(B)},Ht.useState=function(B){return I.H.useState(B)},Ht.useSyncExternalStore=function(B,q,lt){return I.H.useSyncExternalStore(B,q,lt)},Ht.useTransition=function(){return I.H.useTransition()},Ht.version="19.0.0",Ht}var w2;function Jm(){return w2||(w2=1,Nx.exports=bL()),Nx.exports}var aa=Jm(),Tx={exports:{}},xh={},Cx={exports:{}},$x={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var S2;function xL(){return S2||(S2=1,function(n){function t(U,et){var Y=U.length;U.push(et);t:for(;0<Y;){var rt=Y-1>>>1,B=U[rt];if(0<a(B,et))U[rt]=et,U[Y]=B,Y=rt;else break t}}function e(U){return U.length===0?null:U[0]}function s(U){if(U.length===0)return null;var et=U[0],Y=U.pop();if(Y!==et){U[0]=Y;t:for(var rt=0,B=U.length,q=B>>>1;rt<q;){var lt=2*(rt+1)-1,ot=U[lt],ut=lt+1,mt=U[ut];if(0>a(ot,Y))ut<B&&0>a(mt,ot)?(U[rt]=mt,U[ut]=Y,rt=ut):(U[rt]=ot,U[lt]=Y,rt=lt);else if(ut<B&&0>a(mt,Y))U[rt]=mt,U[ut]=Y,rt=ut;else break t}}return et}function a(U,et){var Y=U.sortIndex-et.sortIndex;return Y!==0?Y:U.id-et.id}if(n.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var r=performance;n.unstable_now=function(){return r.now()}}else{var i=Date,l=i.now();n.unstable_now=function(){return i.now()-l}}var u=[],h=[],d=1,p=null,m=3,y=!1,b=!1,v=!1,w=typeof setTimeout=="function"?setTimeout:null,S=typeof clearTimeout=="function"?clearTimeout:null,T=typeof setImmediate<"u"?setImmediate:null;function $(U){for(var et=e(h);et!==null;){if(et.callback===null)s(h);else if(et.startTime<=U)s(h),et.sortIndex=et.expirationTime,t(u,et);else break;et=e(h)}}function C(U){if(v=!1,$(U),!b)if(e(u)!==null)b=!0,tt();else{var et=e(h);et!==null&&Q(C,et.startTime-U)}}var I=!1,R=-1,L=5,M=-1;function O(){return!(n.unstable_now()-M<L)}function _(){if(I){var U=n.unstable_now();M=U;var et=!0;try{t:{b=!1,v&&(v=!1,S(R),R=-1),y=!0;var Y=m;try{e:{for($(U),p=e(u);p!==null&&!(p.expirationTime>U&&O());){var rt=p.callback;if(typeof rt=="function"){p.callback=null,m=p.priorityLevel;var B=rt(p.expirationTime<=U);if(U=n.unstable_now(),typeof B=="function"){p.callback=B,$(U),et=!0;break e}p===e(u)&&s(u),$(U)}else s(u);p=e(u)}if(p!==null)et=!0;else{var q=e(h);q!==null&&Q(C,q.startTime-U),et=!1}}break t}finally{p=null,m=Y,y=!1}et=void 0}}finally{et?A():I=!1}}}var A;if(typeof T=="function")A=function(){T(_)};else if(typeof MessageChannel<"u"){var G=new MessageChannel,X=G.port2;G.port1.onmessage=_,A=function(){X.postMessage(null)}}else A=function(){w(_,0)};function tt(){I||(I=!0,A())}function Q(U,et){R=w(function(){U(n.unstable_now())},et)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(U){U.callback=null},n.unstable_continueExecution=function(){b||y||(b=!0,tt())},n.unstable_forceFrameRate=function(U){0>U||125<U?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):L=0<U?Math.floor(1e3/U):5},n.unstable_getCurrentPriorityLevel=function(){return m},n.unstable_getFirstCallbackNode=function(){return e(u)},n.unstable_next=function(U){switch(m){case 1:case 2:case 3:var et=3;break;default:et=m}var Y=m;m=et;try{return U()}finally{m=Y}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(U,et){switch(U){case 1:case 2:case 3:case 4:case 5:break;default:U=3}var Y=m;m=U;try{return et()}finally{m=Y}},n.unstable_scheduleCallback=function(U,et,Y){var rt=n.unstable_now();switch(typeof Y=="object"&&Y!==null?(Y=Y.delay,Y=typeof Y=="number"&&0<Y?rt+Y:rt):Y=rt,U){case 1:var B=-1;break;case 2:B=250;break;case 5:B=1073741823;break;case 4:B=1e4;break;default:B=5e3}return B=Y+B,U={id:d++,callback:et,priorityLevel:U,startTime:Y,expirationTime:B,sortIndex:-1},Y>rt?(U.sortIndex=Y,t(h,U),e(u)===null&&U===e(h)&&(v?(S(R),R=-1):v=!0,Q(C,Y-rt))):(U.sortIndex=B,t(u,U),b||y||(b=!0,tt())),U},n.unstable_shouldYield=O,n.unstable_wrapCallback=function(U){var et=m;return function(){var Y=m;m=et;try{return U.apply(this,arguments)}finally{m=Y}}}}($x)),$x}var N2;function vL(){return N2||(N2=1,Cx.exports=xL()),Cx.exports}var kx={exports:{}},Wn={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var T2;function wL(){if(T2)return Wn;T2=1;var n=Jm();function t(u){var h="https://react.dev/errors/"+u;if(1<arguments.length){h+="?args[]="+encodeURIComponent(arguments[1]);for(var d=2;d<arguments.length;d++)h+="&args[]="+encodeURIComponent(arguments[d])}return"Minified React error #"+u+"; visit "+h+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function e(){}var s={d:{f:e,r:function(){throw Error(t(522))},D:e,C:e,L:e,m:e,X:e,S:e,M:e},p:0,findDOMNode:null},a=Symbol.for("react.portal");function r(u,h,d){var p=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:a,key:p==null?null:""+p,children:u,containerInfo:h,implementation:d}}var i=n.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function l(u,h){if(u==="font")return"";if(typeof h=="string")return h==="use-credentials"?h:""}return Wn.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=s,Wn.createPortal=function(u,h){var d=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!h||h.nodeType!==1&&h.nodeType!==9&&h.nodeType!==11)throw Error(t(299));return r(u,h,null,d)},Wn.flushSync=function(u){var h=i.T,d=s.p;try{if(i.T=null,s.p=2,u)return u()}finally{i.T=h,s.p=d,s.d.f()}},Wn.preconnect=function(u,h){typeof u=="string"&&(h?(h=h.crossOrigin,h=typeof h=="string"?h==="use-credentials"?h:"":void 0):h=null,s.d.C(u,h))},Wn.prefetchDNS=function(u){typeof u=="string"&&s.d.D(u)},Wn.preinit=function(u,h){if(typeof u=="string"&&h&&typeof h.as=="string"){var d=h.as,p=l(d,h.crossOrigin),m=typeof h.integrity=="string"?h.integrity:void 0,y=typeof h.fetchPriority=="string"?h.fetchPriority:void 0;d==="style"?s.d.S(u,typeof h.precedence=="string"?h.precedence:void 0,{crossOrigin:p,integrity:m,fetchPriority:y}):d==="script"&&s.d.X(u,{crossOrigin:p,integrity:m,fetchPriority:y,nonce:typeof h.nonce=="string"?h.nonce:void 0})}},Wn.preinitModule=function(u,h){if(typeof u=="string")if(typeof h=="object"&&h!==null){if(h.as==null||h.as==="script"){var d=l(h.as,h.crossOrigin);s.d.M(u,{crossOrigin:d,integrity:typeof h.integrity=="string"?h.integrity:void 0,nonce:typeof h.nonce=="string"?h.nonce:void 0})}}else h==null&&s.d.M(u)},Wn.preload=function(u,h){if(typeof u=="string"&&typeof h=="object"&&h!==null&&typeof h.as=="string"){var d=h.as,p=l(d,h.crossOrigin);s.d.L(u,d,{crossOrigin:p,integrity:typeof h.integrity=="string"?h.integrity:void 0,nonce:typeof h.nonce=="string"?h.nonce:void 0,type:typeof h.type=="string"?h.type:void 0,fetchPriority:typeof h.fetchPriority=="string"?h.fetchPriority:void 0,referrerPolicy:typeof h.referrerPolicy=="string"?h.referrerPolicy:void 0,imageSrcSet:typeof h.imageSrcSet=="string"?h.imageSrcSet:void 0,imageSizes:typeof h.imageSizes=="string"?h.imageSizes:void 0,media:typeof h.media=="string"?h.media:void 0})}},Wn.preloadModule=function(u,h){if(typeof u=="string")if(h){var d=l(h.as,h.crossOrigin);s.d.m(u,{as:typeof h.as=="string"&&h.as!=="script"?h.as:void 0,crossOrigin:d,integrity:typeof h.integrity=="string"?h.integrity:void 0})}else s.d.m(u)},Wn.requestFormReset=function(u){s.d.r(u)},Wn.unstable_batchedUpdates=function(u,h){return u(h)},Wn.useFormState=function(u,h,d){return i.H.useFormState(u,h,d)},Wn.useFormStatus=function(){return i.H.useHostTransitionStatus()},Wn.version="19.0.0",Wn}var C2;function SL(){if(C2)return kx.exports;C2=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(t){console.error(t)}}return n(),kx.exports=wL(),kx.exports}/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var $2;function NL(){if($2)return xh;$2=1;var n=vL(),t=Jm(),e=SL();function s(o){var c="https://react.dev/errors/"+o;if(1<arguments.length){c+="?args[]="+encodeURIComponent(arguments[1]);for(var f=2;f<arguments.length;f++)c+="&args[]="+encodeURIComponent(arguments[f])}return"Minified React error #"+o+"; visit "+c+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function a(o){return!(!o||o.nodeType!==1&&o.nodeType!==9&&o.nodeType!==11)}var r=Symbol.for("react.element"),i=Symbol.for("react.transitional.element"),l=Symbol.for("react.portal"),u=Symbol.for("react.fragment"),h=Symbol.for("react.strict_mode"),d=Symbol.for("react.profiler"),p=Symbol.for("react.provider"),m=Symbol.for("react.consumer"),y=Symbol.for("react.context"),b=Symbol.for("react.forward_ref"),v=Symbol.for("react.suspense"),w=Symbol.for("react.suspense_list"),S=Symbol.for("react.memo"),T=Symbol.for("react.lazy"),$=Symbol.for("react.offscreen"),C=Symbol.for("react.memo_cache_sentinel"),I=Symbol.iterator;function R(o){return o===null||typeof o!="object"?null:(o=I&&o[I]||o["@@iterator"],typeof o=="function"?o:null)}var L=Symbol.for("react.client.reference");function M(o){if(o==null)return null;if(typeof o=="function")return o.$$typeof===L?null:o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case u:return"Fragment";case l:return"Portal";case d:return"Profiler";case h:return"StrictMode";case v:return"Suspense";case w:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Provider";case m:return(o._context.displayName||"Context")+".Consumer";case b:var c=o.render;return o=o.displayName,o||(o=c.displayName||c.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case S:return c=o.displayName||null,c!==null?c:M(o.type)||"Memo";case T:c=o._payload,o=o._init;try{return M(o(c))}catch{}}return null}var O=t.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,_=Object.assign,A,G;function X(o){if(A===void 0)try{throw Error()}catch(f){var c=f.stack.trim().match(/\n( *(at )?)/);A=c&&c[1]||"",G=-1<f.stack.indexOf(`
    at`)?" (<anonymous>)":-1<f.stack.indexOf("@")?"@unknown:0:0":""}return`
`+A+o+G}var tt=!1;function Q(o,c){if(!o||tt)return"";tt=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var g={DetermineComponentFrameRoot:function(){try{if(c){var vt=function(){throw Error()};if(Object.defineProperty(vt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(vt,[])}catch(ft){var ct=ft}Reflect.construct(o,[],vt)}else{try{vt.call()}catch(ft){ct=ft}o.call(vt.prototype)}}else{try{throw Error()}catch(ft){ct=ft}(vt=o())&&typeof vt.catch=="function"&&vt.catch(function(){})}}catch(ft){if(ft&&ct&&typeof ft.stack=="string")return[ft.stack,ct.stack]}return[null,null]}};g.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var x=Object.getOwnPropertyDescriptor(g.DetermineComponentFrameRoot,"name");x&&x.configurable&&Object.defineProperty(g.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var N=g.DetermineComponentFrameRoot(),E=N[0],z=N[1];if(E&&z){var V=E.split(`
`),J=z.split(`
`);for(x=g=0;g<V.length&&!V[g].includes("DetermineComponentFrameRoot");)g++;for(;x<J.length&&!J[x].includes("DetermineComponentFrameRoot");)x++;if(g===V.length||x===J.length)for(g=V.length-1,x=J.length-1;1<=g&&0<=x&&V[g]!==J[x];)x--;for(;1<=g&&0<=x;g--,x--)if(V[g]!==J[x]){if(g!==1||x!==1)do if(g--,x--,0>x||V[g]!==J[x]){var pt=`
`+V[g].replace(" at new "," at ");return o.displayName&&pt.includes("<anonymous>")&&(pt=pt.replace("<anonymous>",o.displayName)),pt}while(1<=g&&0<=x);break}}}finally{tt=!1,Error.prepareStackTrace=f}return(f=o?o.displayName||o.name:"")?X(f):""}function U(o){switch(o.tag){case 26:case 27:case 5:return X(o.type);case 16:return X("Lazy");case 13:return X("Suspense");case 19:return X("SuspenseList");case 0:case 15:return o=Q(o.type,!1),o;case 11:return o=Q(o.type.render,!1),o;case 1:return o=Q(o.type,!0),o;default:return""}}function et(o){try{var c="";do c+=U(o),o=o.return;while(o);return c}catch(f){return`
Error generating stack: `+f.message+`
`+f.stack}}function Y(o){var c=o,f=o;if(o.alternate)for(;c.return;)c=c.return;else{o=c;do c=o,(c.flags&4098)!==0&&(f=c.return),o=c.return;while(o)}return c.tag===3?f:null}function rt(o){if(o.tag===13){var c=o.memoizedState;if(c===null&&(o=o.alternate,o!==null&&(c=o.memoizedState)),c!==null)return c.dehydrated}return null}function B(o){if(Y(o)!==o)throw Error(s(188))}function q(o){var c=o.alternate;if(!c){if(c=Y(o),c===null)throw Error(s(188));return c!==o?null:o}for(var f=o,g=c;;){var x=f.return;if(x===null)break;var N=x.alternate;if(N===null){if(g=x.return,g!==null){f=g;continue}break}if(x.child===N.child){for(N=x.child;N;){if(N===f)return B(x),o;if(N===g)return B(x),c;N=N.sibling}throw Error(s(188))}if(f.return!==g.return)f=x,g=N;else{for(var E=!1,z=x.child;z;){if(z===f){E=!0,f=x,g=N;break}if(z===g){E=!0,g=x,f=N;break}z=z.sibling}if(!E){for(z=N.child;z;){if(z===f){E=!0,f=N,g=x;break}if(z===g){E=!0,g=N,f=x;break}z=z.sibling}if(!E)throw Error(s(189))}}if(f.alternate!==g)throw Error(s(190))}if(f.tag!==3)throw Error(s(188));return f.stateNode.current===f?o:c}function lt(o){var c=o.tag;if(c===5||c===26||c===27||c===6)return o;for(o=o.child;o!==null;){if(c=lt(o),c!==null)return c;o=o.sibling}return null}var ot=Array.isArray,ut=e.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,mt={pending:!1,data:null,method:null,action:null},bt=[],Tt=-1;function St(o){return{current:o}}function Ct(o){0>Tt||(o.current=bt[Tt],bt[Tt]=null,Tt--)}function It(o,c){Tt++,bt[Tt]=o.current,o.current=c}var Mt=St(null),se=St(null),ae=St(null),ve=St(null);function de(o,c){switch(It(ae,c),It(se,o),It(Mt,null),o=c.nodeType,o){case 9:case 11:c=(c=c.documentElement)&&(c=c.namespaceURI)?qC(c):0;break;default:if(o=o===8?c.parentNode:c,c=o.tagName,o=o.namespaceURI)o=qC(o),c=KC(o,c);else switch(c){case"svg":c=1;break;case"math":c=2;break;default:c=0}}Ct(Mt),It(Mt,c)}function re(){Ct(Mt),Ct(se),Ct(ae)}function we(o){o.memoizedState!==null&&It(ve,o);var c=Mt.current,f=KC(c,o.type);c!==f&&(It(se,o),It(Mt,f))}function me(o){se.current===o&&(Ct(Mt),Ct(se)),ve.current===o&&(Ct(ve),fh._currentValue=mt)}var Ts=Object.prototype.hasOwnProperty,Ue=n.unstable_scheduleCallback,Ps=n.unstable_cancelCallback,Qn=n.unstable_shouldYield,rr=n.unstable_requestPaint,We=n.unstable_now,pa=n.unstable_getCurrentPriorityLevel,ma=n.unstable_ImmediatePriority,ga=n.unstable_UserBlockingPriority,Cs=n.unstable_NormalPriority,Hi=n.unstable_LowPriority,ol=n.unstable_IdlePriority,Sc=n.log,mb=n.unstable_setDisableYieldValue,Fa=null,Jn=null;function gb(o){if(Jn&&typeof Jn.onCommitFiberRoot=="function")try{Jn.onCommitFiberRoot(Fa,o,void 0,(o.current.flags&128)===128)}catch{}}function Gr(o){if(typeof Sc=="function"&&mb(o),Jn&&typeof Jn.setStrictMode=="function")try{Jn.setStrictMode(Fa,o)}catch{}}var $s=Math.clz32?Math.clz32:eF,J_=Math.log,tF=Math.LN2;function eF(o){return o>>>=0,o===0?32:31-(J_(o)/tF|0)|0}var Bf=128,Vf=4194304;function ji(o){var c=o&42;if(c!==0)return c;switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return o&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return o}}function Pf(o,c){var f=o.pendingLanes;if(f===0)return 0;var g=0,x=o.suspendedLanes,N=o.pingedLanes,E=o.warmLanes;o=o.finishedLanes!==0;var z=f&134217727;return z!==0?(f=z&~x,f!==0?g=ji(f):(N&=z,N!==0?g=ji(N):o||(E=z&~E,E!==0&&(g=ji(E))))):(z=f&~x,z!==0?g=ji(z):N!==0?g=ji(N):o||(E=f&~E,E!==0&&(g=ji(E)))),g===0?0:c!==0&&c!==g&&(c&x)===0&&(x=g&-g,E=c&-c,x>=E||x===32&&(E&4194176)!==0)?c:g}function Nc(o,c){return(o.pendingLanes&~(o.suspendedLanes&~o.pingedLanes)&c)===0}function nF(o,c){switch(o){case 1:case 2:case 4:case 8:return c+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return c+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function BS(){var o=Bf;return Bf<<=1,(Bf&4194176)===0&&(Bf=128),o}function VS(){var o=Vf;return Vf<<=1,(Vf&62914560)===0&&(Vf=4194304),o}function yb(o){for(var c=[],f=0;31>f;f++)c.push(o);return c}function Tc(o,c){o.pendingLanes|=c,c!==268435456&&(o.suspendedLanes=0,o.pingedLanes=0,o.warmLanes=0)}function sF(o,c,f,g,x,N){var E=o.pendingLanes;o.pendingLanes=f,o.suspendedLanes=0,o.pingedLanes=0,o.warmLanes=0,o.expiredLanes&=f,o.entangledLanes&=f,o.errorRecoveryDisabledLanes&=f,o.shellSuspendCounter=0;var z=o.entanglements,V=o.expirationTimes,J=o.hiddenUpdates;for(f=E&~f;0<f;){var pt=31-$s(f),vt=1<<pt;z[pt]=0,V[pt]=-1;var ct=J[pt];if(ct!==null)for(J[pt]=null,pt=0;pt<ct.length;pt++){var ft=ct[pt];ft!==null&&(ft.lane&=-536870913)}f&=~vt}g!==0&&PS(o,g,0),N!==0&&x===0&&o.tag!==0&&(o.suspendedLanes|=N&~(E&~c))}function PS(o,c,f){o.pendingLanes|=c,o.suspendedLanes&=~c;var g=31-$s(c);o.entangledLanes|=c,o.entanglements[g]=o.entanglements[g]|1073741824|f&4194218}function US(o,c){var f=o.entangledLanes|=c;for(o=o.entanglements;f;){var g=31-$s(f),x=1<<g;x&c|o[g]&c&&(o[g]|=c),f&=~x}}function WS(o){return o&=-o,2<o?8<o?(o&134217727)!==0?32:268435456:8:2}function GS(){var o=ut.p;return o!==0?o:(o=window.event,o===void 0?32:d2(o.type))}function aF(o,c){var f=ut.p;try{return ut.p=o,c()}finally{ut.p=f}}var Hr=Math.random().toString(36).slice(2),Pn="__reactFiber$"+Hr,ds="__reactProps$"+Hr,ll="__reactContainer$"+Hr,bb="__reactEvents$"+Hr,rF="__reactListeners$"+Hr,iF="__reactHandles$"+Hr,HS="__reactResources$"+Hr,Cc="__reactMarker$"+Hr;function xb(o){delete o[Pn],delete o[ds],delete o[bb],delete o[rF],delete o[iF]}function qi(o){var c=o[Pn];if(c)return c;for(var f=o.parentNode;f;){if(c=f[ll]||f[Pn]){if(f=c.alternate,c.child!==null||f!==null&&f.child!==null)for(o=ZC(o);o!==null;){if(f=o[Pn])return f;o=ZC(o)}return c}o=f,f=o.parentNode}return null}function ul(o){if(o=o[Pn]||o[ll]){var c=o.tag;if(c===5||c===6||c===13||c===26||c===27||c===3)return o}return null}function $c(o){var c=o.tag;if(c===5||c===26||c===27||c===6)return o.stateNode;throw Error(s(33))}function cl(o){var c=o[HS];return c||(c=o[HS]={hoistableStyles:new Map,hoistableScripts:new Map}),c}function Sn(o){o[Cc]=!0}var jS=new Set,qS={};function Ki(o,c){hl(o,c),hl(o+"Capture",c)}function hl(o,c){for(qS[o]=c,o=0;o<c.length;o++)jS.add(c[o])}var ir=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),oF=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),KS={},XS={};function lF(o){return Ts.call(XS,o)?!0:Ts.call(KS,o)?!1:oF.test(o)?XS[o]=!0:(KS[o]=!0,!1)}function Uf(o,c,f){if(lF(c))if(f===null)o.removeAttribute(c);else{switch(typeof f){case"undefined":case"function":case"symbol":o.removeAttribute(c);return;case"boolean":var g=c.toLowerCase().slice(0,5);if(g!=="data-"&&g!=="aria-"){o.removeAttribute(c);return}}o.setAttribute(c,""+f)}}function Wf(o,c,f){if(f===null)o.removeAttribute(c);else{switch(typeof f){case"undefined":case"function":case"symbol":case"boolean":o.removeAttribute(c);return}o.setAttribute(c,""+f)}}function or(o,c,f,g){if(g===null)o.removeAttribute(f);else{switch(typeof g){case"undefined":case"function":case"symbol":case"boolean":o.removeAttribute(f);return}o.setAttributeNS(c,f,""+g)}}function Us(o){switch(typeof o){case"bigint":case"boolean":case"number":case"string":case"undefined":return o;case"object":return o;default:return""}}function YS(o){var c=o.type;return(o=o.nodeName)&&o.toLowerCase()==="input"&&(c==="checkbox"||c==="radio")}function uF(o){var c=YS(o)?"checked":"value",f=Object.getOwnPropertyDescriptor(o.constructor.prototype,c),g=""+o[c];if(!o.hasOwnProperty(c)&&typeof f<"u"&&typeof f.get=="function"&&typeof f.set=="function"){var x=f.get,N=f.set;return Object.defineProperty(o,c,{configurable:!0,get:function(){return x.call(this)},set:function(E){g=""+E,N.call(this,E)}}),Object.defineProperty(o,c,{enumerable:f.enumerable}),{getValue:function(){return g},setValue:function(E){g=""+E},stopTracking:function(){o._valueTracker=null,delete o[c]}}}}function Gf(o){o._valueTracker||(o._valueTracker=uF(o))}function ZS(o){if(!o)return!1;var c=o._valueTracker;if(!c)return!0;var f=c.getValue(),g="";return o&&(g=YS(o)?o.checked?"true":"false":o.value),o=g,o!==f?(c.setValue(o),!0):!1}function Hf(o){if(o=o||(typeof document<"u"?document:void 0),typeof o>"u")return null;try{return o.activeElement||o.body}catch{return o.body}}var cF=/[\n"\\]/g;function Ws(o){return o.replace(cF,function(c){return"\\"+c.charCodeAt(0).toString(16)+" "})}function vb(o,c,f,g,x,N,E,z){o.name="",E!=null&&typeof E!="function"&&typeof E!="symbol"&&typeof E!="boolean"?o.type=E:o.removeAttribute("type"),c!=null?E==="number"?(c===0&&o.value===""||o.value!=c)&&(o.value=""+Us(c)):o.value!==""+Us(c)&&(o.value=""+Us(c)):E!=="submit"&&E!=="reset"||o.removeAttribute("value"),c!=null?wb(o,E,Us(c)):f!=null?wb(o,E,Us(f)):g!=null&&o.removeAttribute("value"),x==null&&N!=null&&(o.defaultChecked=!!N),x!=null&&(o.checked=x&&typeof x!="function"&&typeof x!="symbol"),z!=null&&typeof z!="function"&&typeof z!="symbol"&&typeof z!="boolean"?o.name=""+Us(z):o.removeAttribute("name")}function QS(o,c,f,g,x,N,E,z){if(N!=null&&typeof N!="function"&&typeof N!="symbol"&&typeof N!="boolean"&&(o.type=N),c!=null||f!=null){if(!(N!=="submit"&&N!=="reset"||c!=null))return;f=f!=null?""+Us(f):"",c=c!=null?""+Us(c):f,z||c===o.value||(o.value=c),o.defaultValue=c}g=g??x,g=typeof g!="function"&&typeof g!="symbol"&&!!g,o.checked=z?o.checked:!!g,o.defaultChecked=!!g,E!=null&&typeof E!="function"&&typeof E!="symbol"&&typeof E!="boolean"&&(o.name=E)}function wb(o,c,f){c==="number"&&Hf(o.ownerDocument)===o||o.defaultValue===""+f||(o.defaultValue=""+f)}function dl(o,c,f,g){if(o=o.options,c){c={};for(var x=0;x<f.length;x++)c["$"+f[x]]=!0;for(f=0;f<o.length;f++)x=c.hasOwnProperty("$"+o[f].value),o[f].selected!==x&&(o[f].selected=x),x&&g&&(o[f].defaultSelected=!0)}else{for(f=""+Us(f),c=null,x=0;x<o.length;x++){if(o[x].value===f){o[x].selected=!0,g&&(o[x].defaultSelected=!0);return}c!==null||o[x].disabled||(c=o[x])}c!==null&&(c.selected=!0)}}function JS(o,c,f){if(c!=null&&(c=""+Us(c),c!==o.value&&(o.value=c),f==null)){o.defaultValue!==c&&(o.defaultValue=c);return}o.defaultValue=f!=null?""+Us(f):""}function tN(o,c,f,g){if(c==null){if(g!=null){if(f!=null)throw Error(s(92));if(ot(g)){if(1<g.length)throw Error(s(93));g=g[0]}f=g}f==null&&(f=""),c=f}f=Us(c),o.defaultValue=f,g=o.textContent,g===f&&g!==""&&g!==null&&(o.value=g)}function fl(o,c){if(c){var f=o.firstChild;if(f&&f===o.lastChild&&f.nodeType===3){f.nodeValue=c;return}}o.textContent=c}var hF=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function eN(o,c,f){var g=c.indexOf("--")===0;f==null||typeof f=="boolean"||f===""?g?o.setProperty(c,""):c==="float"?o.cssFloat="":o[c]="":g?o.setProperty(c,f):typeof f!="number"||f===0||hF.has(c)?c==="float"?o.cssFloat=f:o[c]=(""+f).trim():o[c]=f+"px"}function nN(o,c,f){if(c!=null&&typeof c!="object")throw Error(s(62));if(o=o.style,f!=null){for(var g in f)!f.hasOwnProperty(g)||c!=null&&c.hasOwnProperty(g)||(g.indexOf("--")===0?o.setProperty(g,""):g==="float"?o.cssFloat="":o[g]="");for(var x in c)g=c[x],c.hasOwnProperty(x)&&f[x]!==g&&eN(o,x,g)}else for(var N in c)c.hasOwnProperty(N)&&eN(o,N,c[N])}function Sb(o){if(o.indexOf("-")===-1)return!1;switch(o){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var dF=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),fF=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function jf(o){return fF.test(""+o)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":o}var Nb=null;function Tb(o){return o=o.target||o.srcElement||window,o.correspondingUseElement&&(o=o.correspondingUseElement),o.nodeType===3?o.parentNode:o}var pl=null,ml=null;function sN(o){var c=ul(o);if(c&&(o=c.stateNode)){var f=o[ds]||null;t:switch(o=c.stateNode,c.type){case"input":if(vb(o,f.value,f.defaultValue,f.defaultValue,f.checked,f.defaultChecked,f.type,f.name),c=f.name,f.type==="radio"&&c!=null){for(f=o;f.parentNode;)f=f.parentNode;for(f=f.querySelectorAll('input[name="'+Ws(""+c)+'"][type="radio"]'),c=0;c<f.length;c++){var g=f[c];if(g!==o&&g.form===o.form){var x=g[ds]||null;if(!x)throw Error(s(90));vb(g,x.value,x.defaultValue,x.defaultValue,x.checked,x.defaultChecked,x.type,x.name)}}for(c=0;c<f.length;c++)g=f[c],g.form===o.form&&ZS(g)}break t;case"textarea":JS(o,f.value,f.defaultValue);break t;case"select":c=f.value,c!=null&&dl(o,!!f.multiple,c,!1)}}}var Cb=!1;function aN(o,c,f){if(Cb)return o(c,f);Cb=!0;try{var g=o(c);return g}finally{if(Cb=!1,(pl!==null||ml!==null)&&(Ep(),pl&&(c=pl,o=ml,ml=pl=null,sN(c),o)))for(c=0;c<o.length;c++)sN(o[c])}}function kc(o,c){var f=o.stateNode;if(f===null)return null;var g=f[ds]||null;if(g===null)return null;f=g[c];t:switch(c){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(g=!g.disabled)||(o=o.type,g=!(o==="button"||o==="input"||o==="select"||o==="textarea")),o=!g;break t;default:o=!1}if(o)return null;if(f&&typeof f!="function")throw Error(s(231,c,typeof f));return f}var $b=!1;if(ir)try{var Ic={};Object.defineProperty(Ic,"passive",{get:function(){$b=!0}}),window.addEventListener("test",Ic,Ic),window.removeEventListener("test",Ic,Ic)}catch{$b=!1}var jr=null,kb=null,qf=null;function rN(){if(qf)return qf;var o,c=kb,f=c.length,g,x="value"in jr?jr.value:jr.textContent,N=x.length;for(o=0;o<f&&c[o]===x[o];o++);var E=f-o;for(g=1;g<=E&&c[f-g]===x[N-g];g++);return qf=x.slice(o,1<g?1-g:void 0)}function Kf(o){var c=o.keyCode;return"charCode"in o?(o=o.charCode,o===0&&c===13&&(o=13)):o=c,o===10&&(o=13),32<=o||o===13?o:0}function Xf(){return!0}function iN(){return!1}function fs(o){function c(f,g,x,N,E){this._reactName=f,this._targetInst=x,this.type=g,this.nativeEvent=N,this.target=E,this.currentTarget=null;for(var z in o)o.hasOwnProperty(z)&&(f=o[z],this[z]=f?f(N):N[z]);return this.isDefaultPrevented=(N.defaultPrevented!=null?N.defaultPrevented:N.returnValue===!1)?Xf:iN,this.isPropagationStopped=iN,this}return _(c.prototype,{preventDefault:function(){this.defaultPrevented=!0;var f=this.nativeEvent;f&&(f.preventDefault?f.preventDefault():typeof f.returnValue!="unknown"&&(f.returnValue=!1),this.isDefaultPrevented=Xf)},stopPropagation:function(){var f=this.nativeEvent;f&&(f.stopPropagation?f.stopPropagation():typeof f.cancelBubble!="unknown"&&(f.cancelBubble=!0),this.isPropagationStopped=Xf)},persist:function(){},isPersistent:Xf}),c}var Xi={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(o){return o.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Yf=fs(Xi),Ec=_({},Xi,{view:0,detail:0}),pF=fs(Ec),Ib,Eb,Ac,Zf=_({},Ec,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Rb,button:0,buttons:0,relatedTarget:function(o){return o.relatedTarget===void 0?o.fromElement===o.srcElement?o.toElement:o.fromElement:o.relatedTarget},movementX:function(o){return"movementX"in o?o.movementX:(o!==Ac&&(Ac&&o.type==="mousemove"?(Ib=o.screenX-Ac.screenX,Eb=o.screenY-Ac.screenY):Eb=Ib=0,Ac=o),Ib)},movementY:function(o){return"movementY"in o?o.movementY:Eb}}),oN=fs(Zf),mF=_({},Zf,{dataTransfer:0}),gF=fs(mF),yF=_({},Ec,{relatedTarget:0}),Ab=fs(yF),bF=_({},Xi,{animationName:0,elapsedTime:0,pseudoElement:0}),xF=fs(bF),vF=_({},Xi,{clipboardData:function(o){return"clipboardData"in o?o.clipboardData:window.clipboardData}}),wF=fs(vF),SF=_({},Xi,{data:0}),lN=fs(SF),NF={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},TF={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},CF={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function $F(o){var c=this.nativeEvent;return c.getModifierState?c.getModifierState(o):(o=CF[o])?!!c[o]:!1}function Rb(){return $F}var kF=_({},Ec,{key:function(o){if(o.key){var c=NF[o.key]||o.key;if(c!=="Unidentified")return c}return o.type==="keypress"?(o=Kf(o),o===13?"Enter":String.fromCharCode(o)):o.type==="keydown"||o.type==="keyup"?TF[o.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Rb,charCode:function(o){return o.type==="keypress"?Kf(o):0},keyCode:function(o){return o.type==="keydown"||o.type==="keyup"?o.keyCode:0},which:function(o){return o.type==="keypress"?Kf(o):o.type==="keydown"||o.type==="keyup"?o.keyCode:0}}),IF=fs(kF),EF=_({},Zf,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),uN=fs(EF),AF=_({},Ec,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Rb}),RF=fs(AF),DF=_({},Xi,{propertyName:0,elapsedTime:0,pseudoElement:0}),OF=fs(DF),_F=_({},Zf,{deltaX:function(o){return"deltaX"in o?o.deltaX:"wheelDeltaX"in o?-o.wheelDeltaX:0},deltaY:function(o){return"deltaY"in o?o.deltaY:"wheelDeltaY"in o?-o.wheelDeltaY:"wheelDelta"in o?-o.wheelDelta:0},deltaZ:0,deltaMode:0}),FF=fs(_F),LF=_({},Xi,{newState:0,oldState:0}),zF=fs(LF),MF=[9,13,27,32],Db=ir&&"CompositionEvent"in window,Rc=null;ir&&"documentMode"in document&&(Rc=document.documentMode);var BF=ir&&"TextEvent"in window&&!Rc,cN=ir&&(!Db||Rc&&8<Rc&&11>=Rc),hN=" ",dN=!1;function fN(o,c){switch(o){case"keyup":return MF.indexOf(c.keyCode)!==-1;case"keydown":return c.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function pN(o){return o=o.detail,typeof o=="object"&&"data"in o?o.data:null}var gl=!1;function VF(o,c){switch(o){case"compositionend":return pN(c);case"keypress":return c.which!==32?null:(dN=!0,hN);case"textInput":return o=c.data,o===hN&&dN?null:o;default:return null}}function PF(o,c){if(gl)return o==="compositionend"||!Db&&fN(o,c)?(o=rN(),qf=kb=jr=null,gl=!1,o):null;switch(o){case"paste":return null;case"keypress":if(!(c.ctrlKey||c.altKey||c.metaKey)||c.ctrlKey&&c.altKey){if(c.char&&1<c.char.length)return c.char;if(c.which)return String.fromCharCode(c.which)}return null;case"compositionend":return cN&&c.locale!=="ko"?null:c.data;default:return null}}var UF={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function mN(o){var c=o&&o.nodeName&&o.nodeName.toLowerCase();return c==="input"?!!UF[o.type]:c==="textarea"}function gN(o,c,f,g){pl?ml?ml.push(g):ml=[g]:pl=g,c=_p(c,"onChange"),0<c.length&&(f=new Yf("onChange","change",null,f,g),o.push({event:f,listeners:c}))}var Dc=null,Oc=null;function WF(o){UC(o,0)}function Qf(o){var c=$c(o);if(ZS(c))return o}function yN(o,c){if(o==="change")return c}var bN=!1;if(ir){var Ob;if(ir){var _b="oninput"in document;if(!_b){var xN=document.createElement("div");xN.setAttribute("oninput","return;"),_b=typeof xN.oninput=="function"}Ob=_b}else Ob=!1;bN=Ob&&(!document.documentMode||9<document.documentMode)}function vN(){Dc&&(Dc.detachEvent("onpropertychange",wN),Oc=Dc=null)}function wN(o){if(o.propertyName==="value"&&Qf(Oc)){var c=[];gN(c,Oc,o,Tb(o)),aN(WF,c)}}function GF(o,c,f){o==="focusin"?(vN(),Dc=c,Oc=f,Dc.attachEvent("onpropertychange",wN)):o==="focusout"&&vN()}function HF(o){if(o==="selectionchange"||o==="keyup"||o==="keydown")return Qf(Oc)}function jF(o,c){if(o==="click")return Qf(c)}function qF(o,c){if(o==="input"||o==="change")return Qf(c)}function KF(o,c){return o===c&&(o!==0||1/o===1/c)||o!==o&&c!==c}var ks=typeof Object.is=="function"?Object.is:KF;function _c(o,c){if(ks(o,c))return!0;if(typeof o!="object"||o===null||typeof c!="object"||c===null)return!1;var f=Object.keys(o),g=Object.keys(c);if(f.length!==g.length)return!1;for(g=0;g<f.length;g++){var x=f[g];if(!Ts.call(c,x)||!ks(o[x],c[x]))return!1}return!0}function SN(o){for(;o&&o.firstChild;)o=o.firstChild;return o}function NN(o,c){var f=SN(o);o=0;for(var g;f;){if(f.nodeType===3){if(g=o+f.textContent.length,o<=c&&g>=c)return{node:f,offset:c-o};o=g}t:{for(;f;){if(f.nextSibling){f=f.nextSibling;break t}f=f.parentNode}f=void 0}f=SN(f)}}function TN(o,c){return o&&c?o===c?!0:o&&o.nodeType===3?!1:c&&c.nodeType===3?TN(o,c.parentNode):"contains"in o?o.contains(c):o.compareDocumentPosition?!!(o.compareDocumentPosition(c)&16):!1:!1}function CN(o){o=o!=null&&o.ownerDocument!=null&&o.ownerDocument.defaultView!=null?o.ownerDocument.defaultView:window;for(var c=Hf(o.document);c instanceof o.HTMLIFrameElement;){try{var f=typeof c.contentWindow.location.href=="string"}catch{f=!1}if(f)o=c.contentWindow;else break;c=Hf(o.document)}return c}function Fb(o){var c=o&&o.nodeName&&o.nodeName.toLowerCase();return c&&(c==="input"&&(o.type==="text"||o.type==="search"||o.type==="tel"||o.type==="url"||o.type==="password")||c==="textarea"||o.contentEditable==="true")}function XF(o,c){var f=CN(c);c=o.focusedElem;var g=o.selectionRange;if(f!==c&&c&&c.ownerDocument&&TN(c.ownerDocument.documentElement,c)){if(g!==null&&Fb(c)){if(o=g.start,f=g.end,f===void 0&&(f=o),"selectionStart"in c)c.selectionStart=o,c.selectionEnd=Math.min(f,c.value.length);else if(f=(o=c.ownerDocument||document)&&o.defaultView||window,f.getSelection){f=f.getSelection();var x=c.textContent.length,N=Math.min(g.start,x);g=g.end===void 0?N:Math.min(g.end,x),!f.extend&&N>g&&(x=g,g=N,N=x),x=NN(c,N);var E=NN(c,g);x&&E&&(f.rangeCount!==1||f.anchorNode!==x.node||f.anchorOffset!==x.offset||f.focusNode!==E.node||f.focusOffset!==E.offset)&&(o=o.createRange(),o.setStart(x.node,x.offset),f.removeAllRanges(),N>g?(f.addRange(o),f.extend(E.node,E.offset)):(o.setEnd(E.node,E.offset),f.addRange(o)))}}for(o=[],f=c;f=f.parentNode;)f.nodeType===1&&o.push({element:f,left:f.scrollLeft,top:f.scrollTop});for(typeof c.focus=="function"&&c.focus(),c=0;c<o.length;c++)f=o[c],f.element.scrollLeft=f.left,f.element.scrollTop=f.top}}var YF=ir&&"documentMode"in document&&11>=document.documentMode,yl=null,Lb=null,Fc=null,zb=!1;function $N(o,c,f){var g=f.window===f?f.document:f.nodeType===9?f:f.ownerDocument;zb||yl==null||yl!==Hf(g)||(g=yl,"selectionStart"in g&&Fb(g)?g={start:g.selectionStart,end:g.selectionEnd}:(g=(g.ownerDocument&&g.ownerDocument.defaultView||window).getSelection(),g={anchorNode:g.anchorNode,anchorOffset:g.anchorOffset,focusNode:g.focusNode,focusOffset:g.focusOffset}),Fc&&_c(Fc,g)||(Fc=g,g=_p(Lb,"onSelect"),0<g.length&&(c=new Yf("onSelect","select",null,c,f),o.push({event:c,listeners:g}),c.target=yl)))}function Yi(o,c){var f={};return f[o.toLowerCase()]=c.toLowerCase(),f["Webkit"+o]="webkit"+c,f["Moz"+o]="moz"+c,f}var bl={animationend:Yi("Animation","AnimationEnd"),animationiteration:Yi("Animation","AnimationIteration"),animationstart:Yi("Animation","AnimationStart"),transitionrun:Yi("Transition","TransitionRun"),transitionstart:Yi("Transition","TransitionStart"),transitioncancel:Yi("Transition","TransitionCancel"),transitionend:Yi("Transition","TransitionEnd")},Mb={},kN={};ir&&(kN=document.createElement("div").style,"AnimationEvent"in window||(delete bl.animationend.animation,delete bl.animationiteration.animation,delete bl.animationstart.animation),"TransitionEvent"in window||delete bl.transitionend.transition);function Zi(o){if(Mb[o])return Mb[o];if(!bl[o])return o;var c=bl[o],f;for(f in c)if(c.hasOwnProperty(f)&&f in kN)return Mb[o]=c[f];return o}var IN=Zi("animationend"),EN=Zi("animationiteration"),AN=Zi("animationstart"),ZF=Zi("transitionrun"),QF=Zi("transitionstart"),JF=Zi("transitioncancel"),RN=Zi("transitionend"),DN=new Map,ON="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(" ");function ya(o,c){DN.set(o,c),Ki(c,[o])}var Gs=[],xl=0,Bb=0;function Jf(){for(var o=xl,c=Bb=xl=0;c<o;){var f=Gs[c];Gs[c++]=null;var g=Gs[c];Gs[c++]=null;var x=Gs[c];Gs[c++]=null;var N=Gs[c];if(Gs[c++]=null,g!==null&&x!==null){var E=g.pending;E===null?x.next=x:(x.next=E.next,E.next=x),g.pending=x}N!==0&&_N(f,x,N)}}function tp(o,c,f,g){Gs[xl++]=o,Gs[xl++]=c,Gs[xl++]=f,Gs[xl++]=g,Bb|=g,o.lanes|=g,o=o.alternate,o!==null&&(o.lanes|=g)}function Vb(o,c,f,g){return tp(o,c,f,g),ep(o)}function qr(o,c){return tp(o,null,null,c),ep(o)}function _N(o,c,f){o.lanes|=f;var g=o.alternate;g!==null&&(g.lanes|=f);for(var x=!1,N=o.return;N!==null;)N.childLanes|=f,g=N.alternate,g!==null&&(g.childLanes|=f),N.tag===22&&(o=N.stateNode,o===null||o._visibility&1||(x=!0)),o=N,N=N.return;x&&c!==null&&o.tag===3&&(N=o.stateNode,x=31-$s(f),N=N.hiddenUpdates,o=N[x],o===null?N[x]=[c]:o.push(c),c.lane=f|536870912)}function ep(o){if(50<ih)throw ih=0,j0=null,Error(s(185));for(var c=o.return;c!==null;)o=c,c=o.return;return o.tag===3?o.stateNode:null}var vl={},FN=new WeakMap;function Hs(o,c){if(typeof o=="object"&&o!==null){var f=FN.get(o);return f!==void 0?f:(c={value:o,source:c,stack:et(c)},FN.set(o,c),c)}return{value:o,source:c,stack:et(c)}}var wl=[],Sl=0,np=null,sp=0,js=[],qs=0,Qi=null,lr=1,ur="";function Ji(o,c){wl[Sl++]=sp,wl[Sl++]=np,np=o,sp=c}function LN(o,c,f){js[qs++]=lr,js[qs++]=ur,js[qs++]=Qi,Qi=o;var g=lr;o=ur;var x=32-$s(g)-1;g&=~(1<<x),f+=1;var N=32-$s(c)+x;if(30<N){var E=x-x%5;N=(g&(1<<E)-1).toString(32),g>>=E,x-=E,lr=1<<32-$s(c)+x|f<<x|g,ur=N+o}else lr=1<<N|f<<x|g,ur=o}function Pb(o){o.return!==null&&(Ji(o,1),LN(o,1,0))}function Ub(o){for(;o===np;)np=wl[--Sl],wl[Sl]=null,sp=wl[--Sl],wl[Sl]=null;for(;o===Qi;)Qi=js[--qs],js[qs]=null,ur=js[--qs],js[qs]=null,lr=js[--qs],js[qs]=null}var ts=null,Fn=null,fe=!1,ba=null,La=!1,Wb=Error(s(519));function to(o){var c=Error(s(418,""));throw Mc(Hs(c,o)),Wb}function zN(o){var c=o.stateNode,f=o.type,g=o.memoizedProps;switch(c[Pn]=o,c[ds]=g,f){case"dialog":ie("cancel",c),ie("close",c);break;case"iframe":case"object":case"embed":ie("load",c);break;case"video":case"audio":for(f=0;f<lh.length;f++)ie(lh[f],c);break;case"source":ie("error",c);break;case"img":case"image":case"link":ie("error",c),ie("load",c);break;case"details":ie("toggle",c);break;case"input":ie("invalid",c),QS(c,g.value,g.defaultValue,g.checked,g.defaultChecked,g.type,g.name,!0),Gf(c);break;case"select":ie("invalid",c);break;case"textarea":ie("invalid",c),tN(c,g.value,g.defaultValue,g.children),Gf(c)}f=g.children,typeof f!="string"&&typeof f!="number"&&typeof f!="bigint"||c.textContent===""+f||g.suppressHydrationWarning===!0||jC(c.textContent,f)?(g.popover!=null&&(ie("beforetoggle",c),ie("toggle",c)),g.onScroll!=null&&ie("scroll",c),g.onScrollEnd!=null&&ie("scrollend",c),g.onClick!=null&&(c.onclick=Fp),c=!0):c=!1,c||to(o)}function MN(o){for(ts=o.return;ts;)switch(ts.tag){case 3:case 27:La=!0;return;case 5:case 13:La=!1;return;default:ts=ts.return}}function Lc(o){if(o!==ts)return!1;if(!fe)return MN(o),fe=!0,!1;var c=!1,f;if((f=o.tag!==3&&o.tag!==27)&&((f=o.tag===5)&&(f=o.type,f=!(f!=="form"&&f!=="button")||ux(o.type,o.memoizedProps)),f=!f),f&&(c=!0),c&&Fn&&to(o),MN(o),o.tag===13){if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(s(317));t:{for(o=o.nextSibling,c=0;o;){if(o.nodeType===8)if(f=o.data,f==="/$"){if(c===0){Fn=va(o.nextSibling);break t}c--}else f!=="$"&&f!=="$!"&&f!=="$?"||c++;o=o.nextSibling}Fn=null}}else Fn=ts?va(o.stateNode.nextSibling):null;return!0}function zc(){Fn=ts=null,fe=!1}function Mc(o){ba===null?ba=[o]:ba.push(o)}var Bc=Error(s(460)),BN=Error(s(474)),Gb={then:function(){}};function VN(o){return o=o.status,o==="fulfilled"||o==="rejected"}function ap(){}function PN(o,c,f){switch(f=o[f],f===void 0?o.push(c):f!==c&&(c.then(ap,ap),c=f),c.status){case"fulfilled":return c.value;case"rejected":throw o=c.reason,o===Bc?Error(s(483)):o;default:if(typeof c.status=="string")c.then(ap,ap);else{if(o=Ee,o!==null&&100<o.shellSuspendCounter)throw Error(s(482));o=c,o.status="pending",o.then(function(g){if(c.status==="pending"){var x=c;x.status="fulfilled",x.value=g}},function(g){if(c.status==="pending"){var x=c;x.status="rejected",x.reason=g}})}switch(c.status){case"fulfilled":return c.value;case"rejected":throw o=c.reason,o===Bc?Error(s(483)):o}throw Vc=c,Bc}}var Vc=null;function UN(){if(Vc===null)throw Error(s(459));var o=Vc;return Vc=null,o}var Nl=null,Pc=0;function rp(o){var c=Pc;return Pc+=1,Nl===null&&(Nl=[]),PN(Nl,o,c)}function Uc(o,c){c=c.props.ref,o.ref=c!==void 0?c:null}function ip(o,c){throw c.$$typeof===r?Error(s(525)):(o=Object.prototype.toString.call(c),Error(s(31,o==="[object Object]"?"object with keys {"+Object.keys(c).join(", ")+"}":o)))}function WN(o){var c=o._init;return c(o._payload)}function GN(o){function c(st,Z){if(o){var it=st.deletions;it===null?(st.deletions=[Z],st.flags|=16):it.push(Z)}}function f(st,Z){if(!o)return null;for(;Z!==null;)c(st,Z),Z=Z.sibling;return null}function g(st){for(var Z=new Map;st!==null;)st.key!==null?Z.set(st.key,st):Z.set(st.index,st),st=st.sibling;return Z}function x(st,Z){return st=ri(st,Z),st.index=0,st.sibling=null,st}function N(st,Z,it){return st.index=it,o?(it=st.alternate,it!==null?(it=it.index,it<Z?(st.flags|=33554434,Z):it):(st.flags|=33554434,Z)):(st.flags|=1048576,Z)}function E(st){return o&&st.alternate===null&&(st.flags|=33554434),st}function z(st,Z,it,gt){return Z===null||Z.tag!==6?(Z=M0(it,st.mode,gt),Z.return=st,Z):(Z=x(Z,it),Z.return=st,Z)}function V(st,Z,it,gt){var Dt=it.type;return Dt===u?pt(st,Z,it.props.children,gt,it.key):Z!==null&&(Z.elementType===Dt||typeof Dt=="object"&&Dt!==null&&Dt.$$typeof===T&&WN(Dt)===Z.type)?(Z=x(Z,it.props),Uc(Z,it),Z.return=st,Z):(Z=Tp(it.type,it.key,it.props,null,st.mode,gt),Uc(Z,it),Z.return=st,Z)}function J(st,Z,it,gt){return Z===null||Z.tag!==4||Z.stateNode.containerInfo!==it.containerInfo||Z.stateNode.implementation!==it.implementation?(Z=B0(it,st.mode,gt),Z.return=st,Z):(Z=x(Z,it.children||[]),Z.return=st,Z)}function pt(st,Z,it,gt,Dt){return Z===null||Z.tag!==7?(Z=co(it,st.mode,gt,Dt),Z.return=st,Z):(Z=x(Z,it),Z.return=st,Z)}function vt(st,Z,it){if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return Z=M0(""+Z,st.mode,it),Z.return=st,Z;if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case i:return it=Tp(Z.type,Z.key,Z.props,null,st.mode,it),Uc(it,Z),it.return=st,it;case l:return Z=B0(Z,st.mode,it),Z.return=st,Z;case T:var gt=Z._init;return Z=gt(Z._payload),vt(st,Z,it)}if(ot(Z)||R(Z))return Z=co(Z,st.mode,it,null),Z.return=st,Z;if(typeof Z.then=="function")return vt(st,rp(Z),it);if(Z.$$typeof===y)return vt(st,wp(st,Z),it);ip(st,Z)}return null}function ct(st,Z,it,gt){var Dt=Z!==null?Z.key:null;if(typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint")return Dt!==null?null:z(st,Z,""+it,gt);if(typeof it=="object"&&it!==null){switch(it.$$typeof){case i:return it.key===Dt?V(st,Z,it,gt):null;case l:return it.key===Dt?J(st,Z,it,gt):null;case T:return Dt=it._init,it=Dt(it._payload),ct(st,Z,it,gt)}if(ot(it)||R(it))return Dt!==null?null:pt(st,Z,it,gt,null);if(typeof it.then=="function")return ct(st,Z,rp(it),gt);if(it.$$typeof===y)return ct(st,Z,wp(st,it),gt);ip(st,it)}return null}function ft(st,Z,it,gt,Dt){if(typeof gt=="string"&&gt!==""||typeof gt=="number"||typeof gt=="bigint")return st=st.get(it)||null,z(Z,st,""+gt,Dt);if(typeof gt=="object"&&gt!==null){switch(gt.$$typeof){case i:return st=st.get(gt.key===null?it:gt.key)||null,V(Z,st,gt,Dt);case l:return st=st.get(gt.key===null?it:gt.key)||null,J(Z,st,gt,Dt);case T:var Qt=gt._init;return gt=Qt(gt._payload),ft(st,Z,it,gt,Dt)}if(ot(gt)||R(gt))return st=st.get(it)||null,pt(Z,st,gt,Dt,null);if(typeof gt.then=="function")return ft(st,Z,it,rp(gt),Dt);if(gt.$$typeof===y)return ft(st,Z,it,wp(Z,gt),Dt);ip(Z,gt)}return null}function Ft(st,Z,it,gt){for(var Dt=null,Qt=null,zt=Z,Bt=Z=0,Cn=null;zt!==null&&Bt<it.length;Bt++){zt.index>Bt?(Cn=zt,zt=null):Cn=zt.sibling;var pe=ct(st,zt,it[Bt],gt);if(pe===null){zt===null&&(zt=Cn);break}o&&zt&&pe.alternate===null&&c(st,zt),Z=N(pe,Z,Bt),Qt===null?Dt=pe:Qt.sibling=pe,Qt=pe,zt=Cn}if(Bt===it.length)return f(st,zt),fe&&Ji(st,Bt),Dt;if(zt===null){for(;Bt<it.length;Bt++)zt=vt(st,it[Bt],gt),zt!==null&&(Z=N(zt,Z,Bt),Qt===null?Dt=zt:Qt.sibling=zt,Qt=zt);return fe&&Ji(st,Bt),Dt}for(zt=g(zt);Bt<it.length;Bt++)Cn=ft(zt,st,Bt,it[Bt],gt),Cn!==null&&(o&&Cn.alternate!==null&&zt.delete(Cn.key===null?Bt:Cn.key),Z=N(Cn,Z,Bt),Qt===null?Dt=Cn:Qt.sibling=Cn,Qt=Cn);return o&&zt.forEach(function(di){return c(st,di)}),fe&&Ji(st,Bt),Dt}function Ut(st,Z,it,gt){if(it==null)throw Error(s(151));for(var Dt=null,Qt=null,zt=Z,Bt=Z=0,Cn=null,pe=it.next();zt!==null&&!pe.done;Bt++,pe=it.next()){zt.index>Bt?(Cn=zt,zt=null):Cn=zt.sibling;var di=ct(st,zt,pe.value,gt);if(di===null){zt===null&&(zt=Cn);break}o&&zt&&di.alternate===null&&c(st,zt),Z=N(di,Z,Bt),Qt===null?Dt=di:Qt.sibling=di,Qt=di,zt=Cn}if(pe.done)return f(st,zt),fe&&Ji(st,Bt),Dt;if(zt===null){for(;!pe.done;Bt++,pe=it.next())pe=vt(st,pe.value,gt),pe!==null&&(Z=N(pe,Z,Bt),Qt===null?Dt=pe:Qt.sibling=pe,Qt=pe);return fe&&Ji(st,Bt),Dt}for(zt=g(zt);!pe.done;Bt++,pe=it.next())pe=ft(zt,st,Bt,pe.value,gt),pe!==null&&(o&&pe.alternate!==null&&zt.delete(pe.key===null?Bt:pe.key),Z=N(pe,Z,Bt),Qt===null?Dt=pe:Qt.sibling=pe,Qt=pe);return o&&zt.forEach(function(fL){return c(st,fL)}),fe&&Ji(st,Bt),Dt}function je(st,Z,it,gt){if(typeof it=="object"&&it!==null&&it.type===u&&it.key===null&&(it=it.props.children),typeof it=="object"&&it!==null){switch(it.$$typeof){case i:t:{for(var Dt=it.key;Z!==null;){if(Z.key===Dt){if(Dt=it.type,Dt===u){if(Z.tag===7){f(st,Z.sibling),gt=x(Z,it.props.children),gt.return=st,st=gt;break t}}else if(Z.elementType===Dt||typeof Dt=="object"&&Dt!==null&&Dt.$$typeof===T&&WN(Dt)===Z.type){f(st,Z.sibling),gt=x(Z,it.props),Uc(gt,it),gt.return=st,st=gt;break t}f(st,Z);break}else c(st,Z);Z=Z.sibling}it.type===u?(gt=co(it.props.children,st.mode,gt,it.key),gt.return=st,st=gt):(gt=Tp(it.type,it.key,it.props,null,st.mode,gt),Uc(gt,it),gt.return=st,st=gt)}return E(st);case l:t:{for(Dt=it.key;Z!==null;){if(Z.key===Dt)if(Z.tag===4&&Z.stateNode.containerInfo===it.containerInfo&&Z.stateNode.implementation===it.implementation){f(st,Z.sibling),gt=x(Z,it.children||[]),gt.return=st,st=gt;break t}else{f(st,Z);break}else c(st,Z);Z=Z.sibling}gt=B0(it,st.mode,gt),gt.return=st,st=gt}return E(st);case T:return Dt=it._init,it=Dt(it._payload),je(st,Z,it,gt)}if(ot(it))return Ft(st,Z,it,gt);if(R(it)){if(Dt=R(it),typeof Dt!="function")throw Error(s(150));return it=Dt.call(it),Ut(st,Z,it,gt)}if(typeof it.then=="function")return je(st,Z,rp(it),gt);if(it.$$typeof===y)return je(st,Z,wp(st,it),gt);ip(st,it)}return typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint"?(it=""+it,Z!==null&&Z.tag===6?(f(st,Z.sibling),gt=x(Z,it),gt.return=st,st=gt):(f(st,Z),gt=M0(it,st.mode,gt),gt.return=st,st=gt),E(st)):f(st,Z)}return function(st,Z,it,gt){try{Pc=0;var Dt=je(st,Z,it,gt);return Nl=null,Dt}catch(zt){if(zt===Bc)throw zt;var Qt=Zs(29,zt,null,st.mode);return Qt.lanes=gt,Qt.return=st,Qt}finally{}}}var eo=GN(!0),HN=GN(!1),Tl=St(null),op=St(0);function jN(o,c){o=vr,It(op,o),It(Tl,c),vr=o|c.baseLanes}function Hb(){It(op,vr),It(Tl,Tl.current)}function jb(){vr=op.current,Ct(Tl),Ct(op)}var Ks=St(null),za=null;function Kr(o){var c=o.alternate;It(fn,fn.current&1),It(Ks,o),za===null&&(c===null||Tl.current!==null||c.memoizedState!==null)&&(za=o)}function qN(o){if(o.tag===22){if(It(fn,fn.current),It(Ks,o),za===null){var c=o.alternate;c!==null&&c.memoizedState!==null&&(za=o)}}else Xr()}function Xr(){It(fn,fn.current),It(Ks,Ks.current)}function cr(o){Ct(Ks),za===o&&(za=null),Ct(fn)}var fn=St(0);function lp(o){for(var c=o;c!==null;){if(c.tag===13){var f=c.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||f.data==="$?"||f.data==="$!"))return c}else if(c.tag===19&&c.memoizedProps.revealOrder!==void 0){if((c.flags&128)!==0)return c}else if(c.child!==null){c.child.return=c,c=c.child;continue}if(c===o)break;for(;c.sibling===null;){if(c.return===null||c.return===o)return null;c=c.return}c.sibling.return=c.return,c=c.sibling}return null}var t3=typeof AbortController<"u"?AbortController:function(){var o=[],c=this.signal={aborted:!1,addEventListener:function(f,g){o.push(g)}};this.abort=function(){c.aborted=!0,o.forEach(function(f){return f()})}},e3=n.unstable_scheduleCallback,n3=n.unstable_NormalPriority,pn={$$typeof:y,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function qb(){return{controller:new t3,data:new Map,refCount:0}}function Wc(o){o.refCount--,o.refCount===0&&e3(n3,function(){o.controller.abort()})}var Gc=null,Kb=0,Cl=0,$l=null;function s3(o,c){if(Gc===null){var f=Gc=[];Kb=0,Cl=tx(),$l={status:"pending",value:void 0,then:function(g){f.push(g)}}}return Kb++,c.then(KN,KN),c}function KN(){if(--Kb===0&&Gc!==null){$l!==null&&($l.status="fulfilled");var o=Gc;Gc=null,Cl=0,$l=null;for(var c=0;c<o.length;c++)(0,o[c])()}}function a3(o,c){var f=[],g={status:"pending",value:null,reason:null,then:function(x){f.push(x)}};return o.then(function(){g.status="fulfilled",g.value=c;for(var x=0;x<f.length;x++)(0,f[x])(c)},function(x){for(g.status="rejected",g.reason=x,x=0;x<f.length;x++)(0,f[x])(void 0)}),g}var XN=O.S;O.S=function(o,c){typeof c=="object"&&c!==null&&typeof c.then=="function"&&s3(o,c),XN!==null&&XN(o,c)};var no=St(null);function Xb(){var o=no.current;return o!==null?o:Ee.pooledCache}function up(o,c){c===null?It(no,no.current):It(no,c.pool)}function YN(){var o=Xb();return o===null?null:{parent:pn._currentValue,pool:o}}var Yr=0,Yt=null,Se=null,nn=null,cp=!1,kl=!1,so=!1,hp=0,Hc=0,Il=null,r3=0;function Ze(){throw Error(s(321))}function Yb(o,c){if(c===null)return!1;for(var f=0;f<c.length&&f<o.length;f++)if(!ks(o[f],c[f]))return!1;return!0}function Zb(o,c,f,g,x,N){return Yr=N,Yt=c,c.memoizedState=null,c.updateQueue=null,c.lanes=0,O.H=o===null||o.memoizedState===null?ao:Zr,so=!1,N=f(g,x),so=!1,kl&&(N=QN(c,f,g,x)),ZN(o),N}function ZN(o){O.H=Ma;var c=Se!==null&&Se.next!==null;if(Yr=0,nn=Se=Yt=null,cp=!1,Hc=0,Il=null,c)throw Error(s(300));o===null||Nn||(o=o.dependencies,o!==null&&vp(o)&&(Nn=!0))}function QN(o,c,f,g){Yt=o;var x=0;do{if(kl&&(Il=null),Hc=0,kl=!1,25<=x)throw Error(s(301));if(x+=1,nn=Se=null,o.updateQueue!=null){var N=o.updateQueue;N.lastEffect=null,N.events=null,N.stores=null,N.memoCache!=null&&(N.memoCache.index=0)}O.H=ro,N=c(f,g)}while(kl);return N}function i3(){var o=O.H,c=o.useState()[0];return c=typeof c.then=="function"?jc(c):c,o=o.useState()[0],(Se!==null?Se.memoizedState:null)!==o&&(Yt.flags|=1024),c}function Qb(){var o=hp!==0;return hp=0,o}function Jb(o,c,f){c.updateQueue=o.updateQueue,c.flags&=-2053,o.lanes&=~f}function t0(o){if(cp){for(o=o.memoizedState;o!==null;){var c=o.queue;c!==null&&(c.pending=null),o=o.next}cp=!1}Yr=0,nn=Se=Yt=null,kl=!1,Hc=hp=0,Il=null}function ps(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return nn===null?Yt.memoizedState=nn=o:nn=nn.next=o,nn}function sn(){if(Se===null){var o=Yt.alternate;o=o!==null?o.memoizedState:null}else o=Se.next;var c=nn===null?Yt.memoizedState:nn.next;if(c!==null)nn=c,Se=o;else{if(o===null)throw Yt.alternate===null?Error(s(467)):Error(s(310));Se=o,o={memoizedState:Se.memoizedState,baseState:Se.baseState,baseQueue:Se.baseQueue,queue:Se.queue,next:null},nn===null?Yt.memoizedState=nn=o:nn=nn.next=o}return nn}var dp;dp=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}};function jc(o){var c=Hc;return Hc+=1,Il===null&&(Il=[]),o=PN(Il,o,c),c=Yt,(nn===null?c.memoizedState:nn.next)===null&&(c=c.alternate,O.H=c===null||c.memoizedState===null?ao:Zr),o}function fp(o){if(o!==null&&typeof o=="object"){if(typeof o.then=="function")return jc(o);if(o.$$typeof===y)return Un(o)}throw Error(s(438,String(o)))}function e0(o){var c=null,f=Yt.updateQueue;if(f!==null&&(c=f.memoCache),c==null){var g=Yt.alternate;g!==null&&(g=g.updateQueue,g!==null&&(g=g.memoCache,g!=null&&(c={data:g.data.map(function(x){return x.slice()}),index:0})))}if(c==null&&(c={data:[],index:0}),f===null&&(f=dp(),Yt.updateQueue=f),f.memoCache=c,f=c.data[c.index],f===void 0)for(f=c.data[c.index]=Array(o),g=0;g<o;g++)f[g]=C;return c.index++,f}function hr(o,c){return typeof c=="function"?c(o):c}function pp(o){var c=sn();return n0(c,Se,o)}function n0(o,c,f){var g=o.queue;if(g===null)throw Error(s(311));g.lastRenderedReducer=f;var x=o.baseQueue,N=g.pending;if(N!==null){if(x!==null){var E=x.next;x.next=N.next,N.next=E}c.baseQueue=x=N,g.pending=null}if(N=o.baseState,x===null)o.memoizedState=N;else{c=x.next;var z=E=null,V=null,J=c,pt=!1;do{var vt=J.lane&-536870913;if(vt!==J.lane?(le&vt)===vt:(Yr&vt)===vt){var ct=J.revertLane;if(ct===0)V!==null&&(V=V.next={lane:0,revertLane:0,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null}),vt===Cl&&(pt=!0);else if((Yr&ct)===ct){J=J.next,ct===Cl&&(pt=!0);continue}else vt={lane:0,revertLane:J.revertLane,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null},V===null?(z=V=vt,E=N):V=V.next=vt,Yt.lanes|=ct,ii|=ct;vt=J.action,so&&f(N,vt),N=J.hasEagerState?J.eagerState:f(N,vt)}else ct={lane:vt,revertLane:J.revertLane,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null},V===null?(z=V=ct,E=N):V=V.next=ct,Yt.lanes|=vt,ii|=vt;J=J.next}while(J!==null&&J!==c);if(V===null?E=N:V.next=z,!ks(N,o.memoizedState)&&(Nn=!0,pt&&(f=$l,f!==null)))throw f;o.memoizedState=N,o.baseState=E,o.baseQueue=V,g.lastRenderedState=N}return x===null&&(g.lanes=0),[o.memoizedState,g.dispatch]}function s0(o){var c=sn(),f=c.queue;if(f===null)throw Error(s(311));f.lastRenderedReducer=o;var g=f.dispatch,x=f.pending,N=c.memoizedState;if(x!==null){f.pending=null;var E=x=x.next;do N=o(N,E.action),E=E.next;while(E!==x);ks(N,c.memoizedState)||(Nn=!0),c.memoizedState=N,c.baseQueue===null&&(c.baseState=N),f.lastRenderedState=N}return[N,g]}function JN(o,c,f){var g=Yt,x=sn(),N=fe;if(N){if(f===void 0)throw Error(s(407));f=f()}else f=c();var E=!ks((Se||x).memoizedState,f);if(E&&(x.memoizedState=f,Nn=!0),x=x.queue,i0(nT.bind(null,g,x,o),[o]),x.getSnapshot!==c||E||nn!==null&&nn.memoizedState.tag&1){if(g.flags|=2048,El(9,eT.bind(null,g,x,f,c),{destroy:void 0},null),Ee===null)throw Error(s(349));N||(Yr&60)!==0||tT(g,c,f)}return f}function tT(o,c,f){o.flags|=16384,o={getSnapshot:c,value:f},c=Yt.updateQueue,c===null?(c=dp(),Yt.updateQueue=c,c.stores=[o]):(f=c.stores,f===null?c.stores=[o]:f.push(o))}function eT(o,c,f,g){c.value=f,c.getSnapshot=g,sT(c)&&aT(o)}function nT(o,c,f){return f(function(){sT(c)&&aT(o)})}function sT(o){var c=o.getSnapshot;o=o.value;try{var f=c();return!ks(o,f)}catch{return!0}}function aT(o){var c=qr(o,2);c!==null&&es(c,o,2)}function a0(o){var c=ps();if(typeof o=="function"){var f=o;if(o=f(),so){Gr(!0);try{f()}finally{Gr(!1)}}}return c.memoizedState=c.baseState=o,c.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:hr,lastRenderedState:o},c}function rT(o,c,f,g){return o.baseState=f,n0(o,Se,typeof g=="function"?g:hr)}function o3(o,c,f,g,x){if(yp(o))throw Error(s(485));if(o=c.action,o!==null){var N={payload:x,action:o,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(E){N.listeners.push(E)}};O.T!==null?f(!0):N.isTransition=!1,g(N),f=c.pending,f===null?(N.next=c.pending=N,iT(c,N)):(N.next=f.next,c.pending=f.next=N)}}function iT(o,c){var f=c.action,g=c.payload,x=o.state;if(c.isTransition){var N=O.T,E={};O.T=E;try{var z=f(x,g),V=O.S;V!==null&&V(E,z),oT(o,c,z)}catch(J){r0(o,c,J)}finally{O.T=N}}else try{N=f(x,g),oT(o,c,N)}catch(J){r0(o,c,J)}}function oT(o,c,f){f!==null&&typeof f=="object"&&typeof f.then=="function"?f.then(function(g){lT(o,c,g)},function(g){return r0(o,c,g)}):lT(o,c,f)}function lT(o,c,f){c.status="fulfilled",c.value=f,uT(c),o.state=f,c=o.pending,c!==null&&(f=c.next,f===c?o.pending=null:(f=f.next,c.next=f,iT(o,f)))}function r0(o,c,f){var g=o.pending;if(o.pending=null,g!==null){g=g.next;do c.status="rejected",c.reason=f,uT(c),c=c.next;while(c!==g)}o.action=null}function uT(o){o=o.listeners;for(var c=0;c<o.length;c++)(0,o[c])()}function cT(o,c){return c}function hT(o,c){if(fe){var f=Ee.formState;if(f!==null){t:{var g=Yt;if(fe){if(Fn){e:{for(var x=Fn,N=La;x.nodeType!==8;){if(!N){x=null;break e}if(x=va(x.nextSibling),x===null){x=null;break e}}N=x.data,x=N==="F!"||N==="F"?x:null}if(x){Fn=va(x.nextSibling),g=x.data==="F!";break t}}to(g)}g=!1}g&&(c=f[0])}}return f=ps(),f.memoizedState=f.baseState=c,g={pending:null,lanes:0,dispatch:null,lastRenderedReducer:cT,lastRenderedState:c},f.queue=g,f=ET.bind(null,Yt,g),g.dispatch=f,g=a0(!1),N=h0.bind(null,Yt,!1,g.queue),g=ps(),x={state:c,dispatch:null,action:o,pending:null},g.queue=x,f=o3.bind(null,Yt,x,N,f),x.dispatch=f,g.memoizedState=o,[c,f,!1]}function dT(o){var c=sn();return fT(c,Se,o)}function fT(o,c,f){c=n0(o,c,cT)[0],o=pp(hr)[0],c=typeof c=="object"&&c!==null&&typeof c.then=="function"?jc(c):c;var g=sn(),x=g.queue,N=x.dispatch;return f!==g.memoizedState&&(Yt.flags|=2048,El(9,l3.bind(null,x,f),{destroy:void 0},null)),[c,N,o]}function l3(o,c){o.action=c}function pT(o){var c=sn(),f=Se;if(f!==null)return fT(c,f,o);sn(),c=c.memoizedState,f=sn();var g=f.queue.dispatch;return f.memoizedState=o,[c,g,!1]}function El(o,c,f,g){return o={tag:o,create:c,inst:f,deps:g,next:null},c=Yt.updateQueue,c===null&&(c=dp(),Yt.updateQueue=c),f=c.lastEffect,f===null?c.lastEffect=o.next=o:(g=f.next,f.next=o,o.next=g,c.lastEffect=o),o}function mT(){return sn().memoizedState}function mp(o,c,f,g){var x=ps();Yt.flags|=o,x.memoizedState=El(1|c,f,{destroy:void 0},g===void 0?null:g)}function gp(o,c,f,g){var x=sn();g=g===void 0?null:g;var N=x.memoizedState.inst;Se!==null&&g!==null&&Yb(g,Se.memoizedState.deps)?x.memoizedState=El(c,f,N,g):(Yt.flags|=o,x.memoizedState=El(1|c,f,N,g))}function gT(o,c){mp(8390656,8,o,c)}function i0(o,c){gp(2048,8,o,c)}function yT(o,c){return gp(4,2,o,c)}function bT(o,c){return gp(4,4,o,c)}function xT(o,c){if(typeof c=="function"){o=o();var f=c(o);return function(){typeof f=="function"?f():c(null)}}if(c!=null)return o=o(),c.current=o,function(){c.current=null}}function vT(o,c,f){f=f!=null?f.concat([o]):null,gp(4,4,xT.bind(null,c,o),f)}function o0(){}function wT(o,c){var f=sn();c=c===void 0?null:c;var g=f.memoizedState;return c!==null&&Yb(c,g[1])?g[0]:(f.memoizedState=[o,c],o)}function ST(o,c){var f=sn();c=c===void 0?null:c;var g=f.memoizedState;if(c!==null&&Yb(c,g[1]))return g[0];if(g=o(),so){Gr(!0);try{o()}finally{Gr(!1)}}return f.memoizedState=[g,c],g}function l0(o,c,f){return f===void 0||(Yr&1073741824)!==0?o.memoizedState=c:(o.memoizedState=f,o=TC(),Yt.lanes|=o,ii|=o,f)}function NT(o,c,f,g){return ks(f,c)?f:Tl.current!==null?(o=l0(o,f,g),ks(o,c)||(Nn=!0),o):(Yr&42)===0?(Nn=!0,o.memoizedState=f):(o=TC(),Yt.lanes|=o,ii|=o,c)}function TT(o,c,f,g,x){var N=ut.p;ut.p=N!==0&&8>N?N:8;var E=O.T,z={};O.T=z,h0(o,!1,c,f);try{var V=x(),J=O.S;if(J!==null&&J(z,V),V!==null&&typeof V=="object"&&typeof V.then=="function"){var pt=a3(V,g);qc(o,c,pt,Rs(o))}else qc(o,c,g,Rs(o))}catch(vt){qc(o,c,{then:function(){},status:"rejected",reason:vt},Rs())}finally{ut.p=N,O.T=E}}function u3(){}function u0(o,c,f,g){if(o.tag!==5)throw Error(s(476));var x=CT(o).queue;TT(o,x,c,mt,f===null?u3:function(){return $T(o),f(g)})}function CT(o){var c=o.memoizedState;if(c!==null)return c;c={memoizedState:mt,baseState:mt,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:hr,lastRenderedState:mt},next:null};var f={};return c.next={memoizedState:f,baseState:f,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:hr,lastRenderedState:f},next:null},o.memoizedState=c,o=o.alternate,o!==null&&(o.memoizedState=c),c}function $T(o){var c=CT(o).next.queue;qc(o,c,{},Rs())}function c0(){return Un(fh)}function kT(){return sn().memoizedState}function IT(){return sn().memoizedState}function c3(o){for(var c=o.return;c!==null;){switch(c.tag){case 24:case 3:var f=Rs();o=ti(f);var g=ei(c,o,f);g!==null&&(es(g,c,f),Yc(g,c,f)),c={cache:qb()},o.payload=c;return}c=c.return}}function h3(o,c,f){var g=Rs();f={lane:g,revertLane:0,action:f,hasEagerState:!1,eagerState:null,next:null},yp(o)?AT(c,f):(f=Vb(o,c,f,g),f!==null&&(es(f,o,g),RT(f,c,g)))}function ET(o,c,f){var g=Rs();qc(o,c,f,g)}function qc(o,c,f,g){var x={lane:g,revertLane:0,action:f,hasEagerState:!1,eagerState:null,next:null};if(yp(o))AT(c,x);else{var N=o.alternate;if(o.lanes===0&&(N===null||N.lanes===0)&&(N=c.lastRenderedReducer,N!==null))try{var E=c.lastRenderedState,z=N(E,f);if(x.hasEagerState=!0,x.eagerState=z,ks(z,E))return tp(o,c,x,0),Ee===null&&Jf(),!1}catch{}finally{}if(f=Vb(o,c,x,g),f!==null)return es(f,o,g),RT(f,c,g),!0}return!1}function h0(o,c,f,g){if(g={lane:2,revertLane:tx(),action:g,hasEagerState:!1,eagerState:null,next:null},yp(o)){if(c)throw Error(s(479))}else c=Vb(o,f,g,2),c!==null&&es(c,o,2)}function yp(o){var c=o.alternate;return o===Yt||c!==null&&c===Yt}function AT(o,c){kl=cp=!0;var f=o.pending;f===null?c.next=c:(c.next=f.next,f.next=c),o.pending=c}function RT(o,c,f){if((f&4194176)!==0){var g=c.lanes;g&=o.pendingLanes,f|=g,c.lanes=f,US(o,f)}}var Ma={readContext:Un,use:fp,useCallback:Ze,useContext:Ze,useEffect:Ze,useImperativeHandle:Ze,useLayoutEffect:Ze,useInsertionEffect:Ze,useMemo:Ze,useReducer:Ze,useRef:Ze,useState:Ze,useDebugValue:Ze,useDeferredValue:Ze,useTransition:Ze,useSyncExternalStore:Ze,useId:Ze};Ma.useCacheRefresh=Ze,Ma.useMemoCache=Ze,Ma.useHostTransitionStatus=Ze,Ma.useFormState=Ze,Ma.useActionState=Ze,Ma.useOptimistic=Ze;var ao={readContext:Un,use:fp,useCallback:function(o,c){return ps().memoizedState=[o,c===void 0?null:c],o},useContext:Un,useEffect:gT,useImperativeHandle:function(o,c,f){f=f!=null?f.concat([o]):null,mp(4194308,4,xT.bind(null,c,o),f)},useLayoutEffect:function(o,c){return mp(4194308,4,o,c)},useInsertionEffect:function(o,c){mp(4,2,o,c)},useMemo:function(o,c){var f=ps();c=c===void 0?null:c;var g=o();if(so){Gr(!0);try{o()}finally{Gr(!1)}}return f.memoizedState=[g,c],g},useReducer:function(o,c,f){var g=ps();if(f!==void 0){var x=f(c);if(so){Gr(!0);try{f(c)}finally{Gr(!1)}}}else x=c;return g.memoizedState=g.baseState=x,o={pending:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:x},g.queue=o,o=o.dispatch=h3.bind(null,Yt,o),[g.memoizedState,o]},useRef:function(o){var c=ps();return o={current:o},c.memoizedState=o},useState:function(o){o=a0(o);var c=o.queue,f=ET.bind(null,Yt,c);return c.dispatch=f,[o.memoizedState,f]},useDebugValue:o0,useDeferredValue:function(o,c){var f=ps();return l0(f,o,c)},useTransition:function(){var o=a0(!1);return o=TT.bind(null,Yt,o.queue,!0,!1),ps().memoizedState=o,[!1,o]},useSyncExternalStore:function(o,c,f){var g=Yt,x=ps();if(fe){if(f===void 0)throw Error(s(407));f=f()}else{if(f=c(),Ee===null)throw Error(s(349));(le&60)!==0||tT(g,c,f)}x.memoizedState=f;var N={value:f,getSnapshot:c};return x.queue=N,gT(nT.bind(null,g,N,o),[o]),g.flags|=2048,El(9,eT.bind(null,g,N,f,c),{destroy:void 0},null),f},useId:function(){var o=ps(),c=Ee.identifierPrefix;if(fe){var f=ur,g=lr;f=(g&~(1<<32-$s(g)-1)).toString(32)+f,c=":"+c+"R"+f,f=hp++,0<f&&(c+="H"+f.toString(32)),c+=":"}else f=r3++,c=":"+c+"r"+f.toString(32)+":";return o.memoizedState=c},useCacheRefresh:function(){return ps().memoizedState=c3.bind(null,Yt)}};ao.useMemoCache=e0,ao.useHostTransitionStatus=c0,ao.useFormState=hT,ao.useActionState=hT,ao.useOptimistic=function(o){var c=ps();c.memoizedState=c.baseState=o;var f={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return c.queue=f,c=h0.bind(null,Yt,!0,f),f.dispatch=c,[o,c]};var Zr={readContext:Un,use:fp,useCallback:wT,useContext:Un,useEffect:i0,useImperativeHandle:vT,useInsertionEffect:yT,useLayoutEffect:bT,useMemo:ST,useReducer:pp,useRef:mT,useState:function(){return pp(hr)},useDebugValue:o0,useDeferredValue:function(o,c){var f=sn();return NT(f,Se.memoizedState,o,c)},useTransition:function(){var o=pp(hr)[0],c=sn().memoizedState;return[typeof o=="boolean"?o:jc(o),c]},useSyncExternalStore:JN,useId:kT};Zr.useCacheRefresh=IT,Zr.useMemoCache=e0,Zr.useHostTransitionStatus=c0,Zr.useFormState=dT,Zr.useActionState=dT,Zr.useOptimistic=function(o,c){var f=sn();return rT(f,Se,o,c)};var ro={readContext:Un,use:fp,useCallback:wT,useContext:Un,useEffect:i0,useImperativeHandle:vT,useInsertionEffect:yT,useLayoutEffect:bT,useMemo:ST,useReducer:s0,useRef:mT,useState:function(){return s0(hr)},useDebugValue:o0,useDeferredValue:function(o,c){var f=sn();return Se===null?l0(f,o,c):NT(f,Se.memoizedState,o,c)},useTransition:function(){var o=s0(hr)[0],c=sn().memoizedState;return[typeof o=="boolean"?o:jc(o),c]},useSyncExternalStore:JN,useId:kT};ro.useCacheRefresh=IT,ro.useMemoCache=e0,ro.useHostTransitionStatus=c0,ro.useFormState=pT,ro.useActionState=pT,ro.useOptimistic=function(o,c){var f=sn();return Se!==null?rT(f,Se,o,c):(f.baseState=o,[o,f.queue.dispatch])};function d0(o,c,f,g){c=o.memoizedState,f=f(g,c),f=f==null?c:_({},c,f),o.memoizedState=f,o.lanes===0&&(o.updateQueue.baseState=f)}var f0={isMounted:function(o){return(o=o._reactInternals)?Y(o)===o:!1},enqueueSetState:function(o,c,f){o=o._reactInternals;var g=Rs(),x=ti(g);x.payload=c,f!=null&&(x.callback=f),c=ei(o,x,g),c!==null&&(es(c,o,g),Yc(c,o,g))},enqueueReplaceState:function(o,c,f){o=o._reactInternals;var g=Rs(),x=ti(g);x.tag=1,x.payload=c,f!=null&&(x.callback=f),c=ei(o,x,g),c!==null&&(es(c,o,g),Yc(c,o,g))},enqueueForceUpdate:function(o,c){o=o._reactInternals;var f=Rs(),g=ti(f);g.tag=2,c!=null&&(g.callback=c),c=ei(o,g,f),c!==null&&(es(c,o,f),Yc(c,o,f))}};function DT(o,c,f,g,x,N,E){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,N,E):c.prototype&&c.prototype.isPureReactComponent?!_c(f,g)||!_c(x,N):!0}function OT(o,c,f,g){o=c.state,typeof c.componentWillReceiveProps=="function"&&c.componentWillReceiveProps(f,g),typeof c.UNSAFE_componentWillReceiveProps=="function"&&c.UNSAFE_componentWillReceiveProps(f,g),c.state!==o&&f0.enqueueReplaceState(c,c.state,null)}function io(o,c){var f=c;if("ref"in c){f={};for(var g in c)g!=="ref"&&(f[g]=c[g])}if(o=o.defaultProps){f===c&&(f=_({},f));for(var x in o)f[x]===void 0&&(f[x]=o[x])}return f}var bp=typeof reportError=="function"?reportError:function(o){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var c=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof o=="object"&&o!==null&&typeof o.message=="string"?String(o.message):String(o),error:o});if(!window.dispatchEvent(c))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",o);return}console.error(o)};function _T(o){bp(o)}function FT(o){console.error(o)}function LT(o){bp(o)}function xp(o,c){try{var f=o.onUncaughtError;f(c.value,{componentStack:c.stack})}catch(g){setTimeout(function(){throw g})}}function zT(o,c,f){try{var g=o.onCaughtError;g(f.value,{componentStack:f.stack,errorBoundary:c.tag===1?c.stateNode:null})}catch(x){setTimeout(function(){throw x})}}function p0(o,c,f){return f=ti(f),f.tag=3,f.payload={element:null},f.callback=function(){xp(o,c)},f}function MT(o){return o=ti(o),o.tag=3,o}function BT(o,c,f,g){var x=f.type.getDerivedStateFromError;if(typeof x=="function"){var N=g.value;o.payload=function(){return x(N)},o.callback=function(){zT(c,f,g)}}var E=f.stateNode;E!==null&&typeof E.componentDidCatch=="function"&&(o.callback=function(){zT(c,f,g),typeof x!="function"&&(oi===null?oi=new Set([this]):oi.add(this));var z=g.stack;this.componentDidCatch(g.value,{componentStack:z!==null?z:""})})}function d3(o,c,f,g,x){if(f.flags|=32768,g!==null&&typeof g=="object"&&typeof g.then=="function"){if(c=f.alternate,c!==null&&Xc(c,f,x,!0),f=Ks.current,f!==null){switch(f.tag){case 13:return za===null?X0():f.alternate===null&&He===0&&(He=3),f.flags&=-257,f.flags|=65536,f.lanes=x,g===Gb?f.flags|=16384:(c=f.updateQueue,c===null?f.updateQueue=new Set([g]):c.add(g),Z0(o,g,x)),!1;case 22:return f.flags|=65536,g===Gb?f.flags|=16384:(c=f.updateQueue,c===null?(c={transitions:null,markerInstances:null,retryQueue:new Set([g])},f.updateQueue=c):(f=c.retryQueue,f===null?c.retryQueue=new Set([g]):f.add(g)),Z0(o,g,x)),!1}throw Error(s(435,f.tag))}return Z0(o,g,x),X0(),!1}if(fe)return c=Ks.current,c!==null?((c.flags&65536)===0&&(c.flags|=256),c.flags|=65536,c.lanes=x,g!==Wb&&(o=Error(s(422),{cause:g}),Mc(Hs(o,f)))):(g!==Wb&&(c=Error(s(423),{cause:g}),Mc(Hs(c,f))),o=o.current.alternate,o.flags|=65536,x&=-x,o.lanes|=x,g=Hs(g,f),x=p0(o.stateNode,g,x),E0(o,x),He!==4&&(He=2)),!1;var N=Error(s(520),{cause:g});if(N=Hs(N,f),ah===null?ah=[N]:ah.push(N),He!==4&&(He=2),c===null)return!0;g=Hs(g,f),f=c;do{switch(f.tag){case 3:return f.flags|=65536,o=x&-x,f.lanes|=o,o=p0(f.stateNode,g,o),E0(f,o),!1;case 1:if(c=f.type,N=f.stateNode,(f.flags&128)===0&&(typeof c.getDerivedStateFromError=="function"||N!==null&&typeof N.componentDidCatch=="function"&&(oi===null||!oi.has(N))))return f.flags|=65536,x&=-x,f.lanes|=x,x=MT(x),BT(x,o,f,g),E0(f,x),!1}f=f.return}while(f!==null);return!1}var VT=Error(s(461)),Nn=!1;function Ln(o,c,f,g){c.child=o===null?HN(c,null,f,g):eo(c,o.child,f,g)}function PT(o,c,f,g,x){f=f.render;var N=c.ref;if("ref"in g){var E={};for(var z in g)z!=="ref"&&(E[z]=g[z])}else E=g;return lo(c),g=Zb(o,c,f,E,N,x),z=Qb(),o!==null&&!Nn?(Jb(o,c,x),dr(o,c,x)):(fe&&z&&Pb(c),c.flags|=1,Ln(o,c,g,x),c.child)}function UT(o,c,f,g,x){if(o===null){var N=f.type;return typeof N=="function"&&!z0(N)&&N.defaultProps===void 0&&f.compare===null?(c.tag=15,c.type=N,WT(o,c,N,g,x)):(o=Tp(f.type,null,g,c,c.mode,x),o.ref=c.ref,o.return=c,c.child=o)}if(N=o.child,!N0(o,x)){var E=N.memoizedProps;if(f=f.compare,f=f!==null?f:_c,f(E,g)&&o.ref===c.ref)return dr(o,c,x)}return c.flags|=1,o=ri(N,g),o.ref=c.ref,o.return=c,c.child=o}function WT(o,c,f,g,x){if(o!==null){var N=o.memoizedProps;if(_c(N,g)&&o.ref===c.ref)if(Nn=!1,c.pendingProps=g=N,N0(o,x))(o.flags&131072)!==0&&(Nn=!0);else return c.lanes=o.lanes,dr(o,c,x)}return m0(o,c,f,g,x)}function GT(o,c,f){var g=c.pendingProps,x=g.children,N=(c.stateNode._pendingVisibility&2)!==0,E=o!==null?o.memoizedState:null;if(Kc(o,c),g.mode==="hidden"||N){if((c.flags&128)!==0){if(g=E!==null?E.baseLanes|f:f,o!==null){for(x=c.child=o.child,N=0;x!==null;)N=N|x.lanes|x.childLanes,x=x.sibling;c.childLanes=N&~g}else c.childLanes=0,c.child=null;return HT(o,c,g,f)}if((f&536870912)!==0)c.memoizedState={baseLanes:0,cachePool:null},o!==null&&up(c,E!==null?E.cachePool:null),E!==null?jN(c,E):Hb(),qN(c);else return c.lanes=c.childLanes=536870912,HT(o,c,E!==null?E.baseLanes|f:f,f)}else E!==null?(up(c,E.cachePool),jN(c,E),Xr(),c.memoizedState=null):(o!==null&&up(c,null),Hb(),Xr());return Ln(o,c,x,f),c.child}function HT(o,c,f,g){var x=Xb();return x=x===null?null:{parent:pn._currentValue,pool:x},c.memoizedState={baseLanes:f,cachePool:x},o!==null&&up(c,null),Hb(),qN(c),o!==null&&Xc(o,c,g,!0),null}function Kc(o,c){var f=c.ref;if(f===null)o!==null&&o.ref!==null&&(c.flags|=2097664);else{if(typeof f!="function"&&typeof f!="object")throw Error(s(284));(o===null||o.ref!==f)&&(c.flags|=2097664)}}function m0(o,c,f,g,x){return lo(c),f=Zb(o,c,f,g,void 0,x),g=Qb(),o!==null&&!Nn?(Jb(o,c,x),dr(o,c,x)):(fe&&g&&Pb(c),c.flags|=1,Ln(o,c,f,x),c.child)}function jT(o,c,f,g,x,N){return lo(c),c.updateQueue=null,f=QN(c,g,f,x),ZN(o),g=Qb(),o!==null&&!Nn?(Jb(o,c,N),dr(o,c,N)):(fe&&g&&Pb(c),c.flags|=1,Ln(o,c,f,N),c.child)}function qT(o,c,f,g,x){if(lo(c),c.stateNode===null){var N=vl,E=f.contextType;typeof E=="object"&&E!==null&&(N=Un(E)),N=new f(g,N),c.memoizedState=N.state!==null&&N.state!==void 0?N.state:null,N.updater=f0,c.stateNode=N,N._reactInternals=c,N=c.stateNode,N.props=g,N.state=c.memoizedState,N.refs={},k0(c),E=f.contextType,N.context=typeof E=="object"&&E!==null?Un(E):vl,N.state=c.memoizedState,E=f.getDerivedStateFromProps,typeof E=="function"&&(d0(c,f,E,g),N.state=c.memoizedState),typeof f.getDerivedStateFromProps=="function"||typeof N.getSnapshotBeforeUpdate=="function"||typeof N.UNSAFE_componentWillMount!="function"&&typeof N.componentWillMount!="function"||(E=N.state,typeof N.componentWillMount=="function"&&N.componentWillMount(),typeof N.UNSAFE_componentWillMount=="function"&&N.UNSAFE_componentWillMount(),E!==N.state&&f0.enqueueReplaceState(N,N.state,null),Qc(c,g,N,x),Zc(),N.state=c.memoizedState),typeof N.componentDidMount=="function"&&(c.flags|=4194308),g=!0}else if(o===null){N=c.stateNode;var z=c.memoizedProps,V=io(f,z);N.props=V;var J=N.context,pt=f.contextType;E=vl,typeof pt=="object"&&pt!==null&&(E=Un(pt));var vt=f.getDerivedStateFromProps;pt=typeof vt=="function"||typeof N.getSnapshotBeforeUpdate=="function",z=c.pendingProps!==z,pt||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(z||J!==E)&&OT(c,N,g,E),Jr=!1;var ct=c.memoizedState;N.state=ct,Qc(c,g,N,x),Zc(),J=c.memoizedState,z||ct!==J||Jr?(typeof vt=="function"&&(d0(c,f,vt,g),J=c.memoizedState),(V=Jr||DT(c,f,V,g,ct,J,E))?(pt||typeof N.UNSAFE_componentWillMount!="function"&&typeof N.componentWillMount!="function"||(typeof N.componentWillMount=="function"&&N.componentWillMount(),typeof N.UNSAFE_componentWillMount=="function"&&N.UNSAFE_componentWillMount()),typeof N.componentDidMount=="function"&&(c.flags|=4194308)):(typeof N.componentDidMount=="function"&&(c.flags|=4194308),c.memoizedProps=g,c.memoizedState=J),N.props=g,N.state=J,N.context=E,g=V):(typeof N.componentDidMount=="function"&&(c.flags|=4194308),g=!1)}else{N=c.stateNode,I0(o,c),E=c.memoizedProps,pt=io(f,E),N.props=pt,vt=c.pendingProps,ct=N.context,J=f.contextType,V=vl,typeof J=="object"&&J!==null&&(V=Un(J)),z=f.getDerivedStateFromProps,(J=typeof z=="function"||typeof N.getSnapshotBeforeUpdate=="function")||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(E!==vt||ct!==V)&&OT(c,N,g,V),Jr=!1,ct=c.memoizedState,N.state=ct,Qc(c,g,N,x),Zc();var ft=c.memoizedState;E!==vt||ct!==ft||Jr||o!==null&&o.dependencies!==null&&vp(o.dependencies)?(typeof z=="function"&&(d0(c,f,z,g),ft=c.memoizedState),(pt=Jr||DT(c,f,pt,g,ct,ft,V)||o!==null&&o.dependencies!==null&&vp(o.dependencies))?(J||typeof N.UNSAFE_componentWillUpdate!="function"&&typeof N.componentWillUpdate!="function"||(typeof N.componentWillUpdate=="function"&&N.componentWillUpdate(g,ft,V),typeof N.UNSAFE_componentWillUpdate=="function"&&N.UNSAFE_componentWillUpdate(g,ft,V)),typeof N.componentDidUpdate=="function"&&(c.flags|=4),typeof N.getSnapshotBeforeUpdate=="function"&&(c.flags|=1024)):(typeof N.componentDidUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=1024),c.memoizedProps=g,c.memoizedState=ft),N.props=g,N.state=ft,N.context=V,g=pt):(typeof N.componentDidUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=1024),g=!1)}return N=g,Kc(o,c),g=(c.flags&128)!==0,N||g?(N=c.stateNode,f=g&&typeof f.getDerivedStateFromError!="function"?null:N.render(),c.flags|=1,o!==null&&g?(c.child=eo(c,o.child,null,x),c.child=eo(c,null,f,x)):Ln(o,c,f,x),c.memoizedState=N.state,o=c.child):o=dr(o,c,x),o}function KT(o,c,f,g){return zc(),c.flags|=256,Ln(o,c,f,g),c.child}var g0={dehydrated:null,treeContext:null,retryLane:0};function y0(o){return{baseLanes:o,cachePool:YN()}}function b0(o,c,f){return o=o!==null?o.childLanes&~f:0,c&&(o|=Qs),o}function XT(o,c,f){var g=c.pendingProps,x=!1,N=(c.flags&128)!==0,E;if((E=N)||(E=o!==null&&o.memoizedState===null?!1:(fn.current&2)!==0),E&&(x=!0,c.flags&=-129),E=(c.flags&32)!==0,c.flags&=-33,o===null){if(fe){if(x?Kr(c):Xr(),fe){var z=Fn,V;if(V=z){t:{for(V=z,z=La;V.nodeType!==8;){if(!z){z=null;break t}if(V=va(V.nextSibling),V===null){z=null;break t}}z=V}z!==null?(c.memoizedState={dehydrated:z,treeContext:Qi!==null?{id:lr,overflow:ur}:null,retryLane:536870912},V=Zs(18,null,null,0),V.stateNode=z,V.return=c,c.child=V,ts=c,Fn=null,V=!0):V=!1}V||to(c)}if(z=c.memoizedState,z!==null&&(z=z.dehydrated,z!==null))return z.data==="$!"?c.lanes=16:c.lanes=536870912,null;cr(c)}return z=g.children,g=g.fallback,x?(Xr(),x=c.mode,z=v0({mode:"hidden",children:z},x),g=co(g,x,f,null),z.return=c,g.return=c,z.sibling=g,c.child=z,x=c.child,x.memoizedState=y0(f),x.childLanes=b0(o,E,f),c.memoizedState=g0,g):(Kr(c),x0(c,z))}if(V=o.memoizedState,V!==null&&(z=V.dehydrated,z!==null)){if(N)c.flags&256?(Kr(c),c.flags&=-257,c=w0(o,c,f)):c.memoizedState!==null?(Xr(),c.child=o.child,c.flags|=128,c=null):(Xr(),x=g.fallback,z=c.mode,g=v0({mode:"visible",children:g.children},z),x=co(x,z,f,null),x.flags|=2,g.return=c,x.return=c,g.sibling=x,c.child=g,eo(c,o.child,null,f),g=c.child,g.memoizedState=y0(f),g.childLanes=b0(o,E,f),c.memoizedState=g0,c=x);else if(Kr(c),z.data==="$!"){if(E=z.nextSibling&&z.nextSibling.dataset,E)var J=E.dgst;E=J,g=Error(s(419)),g.stack="",g.digest=E,Mc({value:g,source:null,stack:null}),c=w0(o,c,f)}else if(Nn||Xc(o,c,f,!1),E=(f&o.childLanes)!==0,Nn||E){if(E=Ee,E!==null){if(g=f&-f,(g&42)!==0)g=1;else switch(g){case 2:g=1;break;case 8:g=4;break;case 32:g=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:g=64;break;case 268435456:g=134217728;break;default:g=0}if(g=(g&(E.suspendedLanes|f))!==0?0:g,g!==0&&g!==V.retryLane)throw V.retryLane=g,qr(o,g),es(E,o,g),VT}z.data==="$?"||X0(),c=w0(o,c,f)}else z.data==="$?"?(c.flags|=128,c.child=o.child,c=k3.bind(null,o),z._reactRetry=c,c=null):(o=V.treeContext,Fn=va(z.nextSibling),ts=c,fe=!0,ba=null,La=!1,o!==null&&(js[qs++]=lr,js[qs++]=ur,js[qs++]=Qi,lr=o.id,ur=o.overflow,Qi=c),c=x0(c,g.children),c.flags|=4096);return c}return x?(Xr(),x=g.fallback,z=c.mode,V=o.child,J=V.sibling,g=ri(V,{mode:"hidden",children:g.children}),g.subtreeFlags=V.subtreeFlags&31457280,J!==null?x=ri(J,x):(x=co(x,z,f,null),x.flags|=2),x.return=c,g.return=c,g.sibling=x,c.child=g,g=x,x=c.child,z=o.child.memoizedState,z===null?z=y0(f):(V=z.cachePool,V!==null?(J=pn._currentValue,V=V.parent!==J?{parent:J,pool:J}:V):V=YN(),z={baseLanes:z.baseLanes|f,cachePool:V}),x.memoizedState=z,x.childLanes=b0(o,E,f),c.memoizedState=g0,g):(Kr(c),f=o.child,o=f.sibling,f=ri(f,{mode:"visible",children:g.children}),f.return=c,f.sibling=null,o!==null&&(E=c.deletions,E===null?(c.deletions=[o],c.flags|=16):E.push(o)),c.child=f,c.memoizedState=null,f)}function x0(o,c){return c=v0({mode:"visible",children:c},o.mode),c.return=o,o.child=c}function v0(o,c){return wC(o,c,0,null)}function w0(o,c,f){return eo(c,o.child,null,f),o=x0(c,c.pendingProps.children),o.flags|=2,c.memoizedState=null,o}function YT(o,c,f){o.lanes|=c;var g=o.alternate;g!==null&&(g.lanes|=c),C0(o.return,c,f)}function S0(o,c,f,g,x){var N=o.memoizedState;N===null?o.memoizedState={isBackwards:c,rendering:null,renderingStartTime:0,last:g,tail:f,tailMode:x}:(N.isBackwards=c,N.rendering=null,N.renderingStartTime=0,N.last=g,N.tail=f,N.tailMode=x)}function ZT(o,c,f){var g=c.pendingProps,x=g.revealOrder,N=g.tail;if(Ln(o,c,g.children,f),g=fn.current,(g&2)!==0)g=g&1|2,c.flags|=128;else{if(o!==null&&(o.flags&128)!==0)t:for(o=c.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&YT(o,f,c);else if(o.tag===19)YT(o,f,c);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===c)break t;for(;o.sibling===null;){if(o.return===null||o.return===c)break t;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}switch(It(fn,g),x){case"forwards":for(f=c.child,x=null;f!==null;)o=f.alternate,o!==null&&lp(o)===null&&(x=f),f=f.sibling;f=x,f===null?(x=c.child,c.child=null):(x=f.sibling,f.sibling=null),S0(c,!1,x,f,N);break;case"backwards":for(f=null,x=c.child,c.child=null;x!==null;){if(o=x.alternate,o!==null&&lp(o)===null){c.child=x;break}o=x.sibling,x.sibling=f,f=x,x=o}S0(c,!0,f,null,N);break;case"together":S0(c,!1,null,null,void 0);break;default:c.memoizedState=null}return c.child}function dr(o,c,f){if(o!==null&&(c.dependencies=o.dependencies),ii|=c.lanes,(f&c.childLanes)===0)if(o!==null){if(Xc(o,c,f,!1),(f&c.childLanes)===0)return null}else return null;if(o!==null&&c.child!==o.child)throw Error(s(153));if(c.child!==null){for(o=c.child,f=ri(o,o.pendingProps),c.child=f,f.return=c;o.sibling!==null;)o=o.sibling,f=f.sibling=ri(o,o.pendingProps),f.return=c;f.sibling=null}return c.child}function N0(o,c){return(o.lanes&c)!==0?!0:(o=o.dependencies,!!(o!==null&&vp(o)))}function f3(o,c,f){switch(c.tag){case 3:de(c,c.stateNode.containerInfo),Qr(c,pn,o.memoizedState.cache),zc();break;case 27:case 5:we(c);break;case 4:de(c,c.stateNode.containerInfo);break;case 10:Qr(c,c.type,c.memoizedProps.value);break;case 13:var g=c.memoizedState;if(g!==null)return g.dehydrated!==null?(Kr(c),c.flags|=128,null):(f&c.child.childLanes)!==0?XT(o,c,f):(Kr(c),o=dr(o,c,f),o!==null?o.sibling:null);Kr(c);break;case 19:var x=(o.flags&128)!==0;if(g=(f&c.childLanes)!==0,g||(Xc(o,c,f,!1),g=(f&c.childLanes)!==0),x){if(g)return ZT(o,c,f);c.flags|=128}if(x=c.memoizedState,x!==null&&(x.rendering=null,x.tail=null,x.lastEffect=null),It(fn,fn.current),g)break;return null;case 22:case 23:return c.lanes=0,GT(o,c,f);case 24:Qr(c,pn,o.memoizedState.cache)}return dr(o,c,f)}function QT(o,c,f){if(o!==null)if(o.memoizedProps!==c.pendingProps)Nn=!0;else{if(!N0(o,f)&&(c.flags&128)===0)return Nn=!1,f3(o,c,f);Nn=(o.flags&131072)!==0}else Nn=!1,fe&&(c.flags&1048576)!==0&&LN(c,sp,c.index);switch(c.lanes=0,c.tag){case 16:t:{o=c.pendingProps;var g=c.elementType,x=g._init;if(g=x(g._payload),c.type=g,typeof g=="function")z0(g)?(o=io(g,o),c.tag=1,c=qT(null,c,g,o,f)):(c.tag=0,c=m0(null,c,g,o,f));else{if(g!=null){if(x=g.$$typeof,x===b){c.tag=11,c=PT(null,c,g,o,f);break t}else if(x===S){c.tag=14,c=UT(null,c,g,o,f);break t}}throw c=M(g)||g,Error(s(306,c,""))}}return c;case 0:return m0(o,c,c.type,c.pendingProps,f);case 1:return g=c.type,x=io(g,c.pendingProps),qT(o,c,g,x,f);case 3:t:{if(de(c,c.stateNode.containerInfo),o===null)throw Error(s(387));var N=c.pendingProps;x=c.memoizedState,g=x.element,I0(o,c),Qc(c,N,null,f);var E=c.memoizedState;if(N=E.cache,Qr(c,pn,N),N!==x.cache&&$0(c,[pn],f,!0),Zc(),N=E.element,x.isDehydrated)if(x={element:N,isDehydrated:!1,cache:E.cache},c.updateQueue.baseState=x,c.memoizedState=x,c.flags&256){c=KT(o,c,N,f);break t}else if(N!==g){g=Hs(Error(s(424)),c),Mc(g),c=KT(o,c,N,f);break t}else for(Fn=va(c.stateNode.containerInfo.firstChild),ts=c,fe=!0,ba=null,La=!0,f=HN(c,null,N,f),c.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(zc(),N===g){c=dr(o,c,f);break t}Ln(o,c,N,f)}c=c.child}return c;case 26:return Kc(o,c),o===null?(f=e2(c.type,null,c.pendingProps,null))?c.memoizedState=f:fe||(f=c.type,o=c.pendingProps,g=Lp(ae.current).createElement(f),g[Pn]=c,g[ds]=o,zn(g,f,o),Sn(g),c.stateNode=g):c.memoizedState=e2(c.type,o.memoizedProps,c.pendingProps,o.memoizedState),null;case 27:return we(c),o===null&&fe&&(g=c.stateNode=QC(c.type,c.pendingProps,ae.current),ts=c,La=!0,Fn=va(g.firstChild)),g=c.pendingProps.children,o!==null||fe?Ln(o,c,g,f):c.child=eo(c,null,g,f),Kc(o,c),c.child;case 5:return o===null&&fe&&((x=g=Fn)&&(g=W3(g,c.type,c.pendingProps,La),g!==null?(c.stateNode=g,ts=c,Fn=va(g.firstChild),La=!1,x=!0):x=!1),x||to(c)),we(c),x=c.type,N=c.pendingProps,E=o!==null?o.memoizedProps:null,g=N.children,ux(x,N)?g=null:E!==null&&ux(x,E)&&(c.flags|=32),c.memoizedState!==null&&(x=Zb(o,c,i3,null,null,f),fh._currentValue=x),Kc(o,c),Ln(o,c,g,f),c.child;case 6:return o===null&&fe&&((o=f=Fn)&&(f=G3(f,c.pendingProps,La),f!==null?(c.stateNode=f,ts=c,Fn=null,o=!0):o=!1),o||to(c)),null;case 13:return XT(o,c,f);case 4:return de(c,c.stateNode.containerInfo),g=c.pendingProps,o===null?c.child=eo(c,null,g,f):Ln(o,c,g,f),c.child;case 11:return PT(o,c,c.type,c.pendingProps,f);case 7:return Ln(o,c,c.pendingProps,f),c.child;case 8:return Ln(o,c,c.pendingProps.children,f),c.child;case 12:return Ln(o,c,c.pendingProps.children,f),c.child;case 10:return g=c.pendingProps,Qr(c,c.type,g.value),Ln(o,c,g.children,f),c.child;case 9:return x=c.type._context,g=c.pendingProps.children,lo(c),x=Un(x),g=g(x),c.flags|=1,Ln(o,c,g,f),c.child;case 14:return UT(o,c,c.type,c.pendingProps,f);case 15:return WT(o,c,c.type,c.pendingProps,f);case 19:return ZT(o,c,f);case 22:return GT(o,c,f);case 24:return lo(c),g=Un(pn),o===null?(x=Xb(),x===null&&(x=Ee,N=qb(),x.pooledCache=N,N.refCount++,N!==null&&(x.pooledCacheLanes|=f),x=N),c.memoizedState={parent:g,cache:x},k0(c),Qr(c,pn,x)):((o.lanes&f)!==0&&(I0(o,c),Qc(c,null,null,f),Zc()),x=o.memoizedState,N=c.memoizedState,x.parent!==g?(x={parent:g,cache:g},c.memoizedState=x,c.lanes===0&&(c.memoizedState=c.updateQueue.baseState=x),Qr(c,pn,g)):(g=N.cache,Qr(c,pn,g),g!==x.cache&&$0(c,[pn],f,!0))),Ln(o,c,c.pendingProps.children,f),c.child;case 29:throw c.pendingProps}throw Error(s(156,c.tag))}var T0=St(null),oo=null,fr=null;function Qr(o,c,f){It(T0,c._currentValue),c._currentValue=f}function pr(o){o._currentValue=T0.current,Ct(T0)}function C0(o,c,f){for(;o!==null;){var g=o.alternate;if((o.childLanes&c)!==c?(o.childLanes|=c,g!==null&&(g.childLanes|=c)):g!==null&&(g.childLanes&c)!==c&&(g.childLanes|=c),o===f)break;o=o.return}}function $0(o,c,f,g){var x=o.child;for(x!==null&&(x.return=o);x!==null;){var N=x.dependencies;if(N!==null){var E=x.child;N=N.firstContext;t:for(;N!==null;){var z=N;N=x;for(var V=0;V<c.length;V++)if(z.context===c[V]){N.lanes|=f,z=N.alternate,z!==null&&(z.lanes|=f),C0(N.return,f,o),g||(E=null);break t}N=z.next}}else if(x.tag===18){if(E=x.return,E===null)throw Error(s(341));E.lanes|=f,N=E.alternate,N!==null&&(N.lanes|=f),C0(E,f,o),E=null}else E=x.child;if(E!==null)E.return=x;else for(E=x;E!==null;){if(E===o){E=null;break}if(x=E.sibling,x!==null){x.return=E.return,E=x;break}E=E.return}x=E}}function Xc(o,c,f,g){o=null;for(var x=c,N=!1;x!==null;){if(!N){if((x.flags&524288)!==0)N=!0;else if((x.flags&262144)!==0)break}if(x.tag===10){var E=x.alternate;if(E===null)throw Error(s(387));if(E=E.memoizedProps,E!==null){var z=x.type;ks(x.pendingProps.value,E.value)||(o!==null?o.push(z):o=[z])}}else if(x===ve.current){if(E=x.alternate,E===null)throw Error(s(387));E.memoizedState.memoizedState!==x.memoizedState.memoizedState&&(o!==null?o.push(fh):o=[fh])}x=x.return}o!==null&&$0(c,o,f,g),c.flags|=262144}function vp(o){for(o=o.firstContext;o!==null;){if(!ks(o.context._currentValue,o.memoizedValue))return!0;o=o.next}return!1}function lo(o){oo=o,fr=null,o=o.dependencies,o!==null&&(o.firstContext=null)}function Un(o){return JT(oo,o)}function wp(o,c){return oo===null&&lo(o),JT(o,c)}function JT(o,c){var f=c._currentValue;if(c={context:c,memoizedValue:f,next:null},fr===null){if(o===null)throw Error(s(308));fr=c,o.dependencies={lanes:0,firstContext:c},o.flags|=524288}else fr=fr.next=c;return f}var Jr=!1;function k0(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function I0(o,c){o=o.updateQueue,c.updateQueue===o&&(c.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,callbacks:null})}function ti(o){return{lane:o,tag:0,payload:null,callback:null,next:null}}function ei(o,c,f){var g=o.updateQueue;if(g===null)return null;if(g=g.shared,(Be&2)!==0){var x=g.pending;return x===null?c.next=c:(c.next=x.next,x.next=c),g.pending=c,c=ep(o),_N(o,null,f),c}return tp(o,g,c,f),ep(o)}function Yc(o,c,f){if(c=c.updateQueue,c!==null&&(c=c.shared,(f&4194176)!==0)){var g=c.lanes;g&=o.pendingLanes,f|=g,c.lanes=f,US(o,f)}}function E0(o,c){var f=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,f===g)){var x=null,N=null;if(f=f.firstBaseUpdate,f!==null){do{var E={lane:f.lane,tag:f.tag,payload:f.payload,callback:null,next:null};N===null?x=N=E:N=N.next=E,f=f.next}while(f!==null);N===null?x=N=c:N=N.next=c}else x=N=c;f={baseState:g.baseState,firstBaseUpdate:x,lastBaseUpdate:N,shared:g.shared,callbacks:g.callbacks},o.updateQueue=f;return}o=f.lastBaseUpdate,o===null?f.firstBaseUpdate=c:o.next=c,f.lastBaseUpdate=c}var A0=!1;function Zc(){if(A0){var o=$l;if(o!==null)throw o}}function Qc(o,c,f,g){A0=!1;var x=o.updateQueue;Jr=!1;var N=x.firstBaseUpdate,E=x.lastBaseUpdate,z=x.shared.pending;if(z!==null){x.shared.pending=null;var V=z,J=V.next;V.next=null,E===null?N=J:E.next=J,E=V;var pt=o.alternate;pt!==null&&(pt=pt.updateQueue,z=pt.lastBaseUpdate,z!==E&&(z===null?pt.firstBaseUpdate=J:z.next=J,pt.lastBaseUpdate=V))}if(N!==null){var vt=x.baseState;E=0,pt=J=V=null,z=N;do{var ct=z.lane&-536870913,ft=ct!==z.lane;if(ft?(le&ct)===ct:(g&ct)===ct){ct!==0&&ct===Cl&&(A0=!0),pt!==null&&(pt=pt.next={lane:0,tag:z.tag,payload:z.payload,callback:null,next:null});t:{var Ft=o,Ut=z;ct=c;var je=f;switch(Ut.tag){case 1:if(Ft=Ut.payload,typeof Ft=="function"){vt=Ft.call(je,vt,ct);break t}vt=Ft;break t;case 3:Ft.flags=Ft.flags&-65537|128;case 0:if(Ft=Ut.payload,ct=typeof Ft=="function"?Ft.call(je,vt,ct):Ft,ct==null)break t;vt=_({},vt,ct);break t;case 2:Jr=!0}}ct=z.callback,ct!==null&&(o.flags|=64,ft&&(o.flags|=8192),ft=x.callbacks,ft===null?x.callbacks=[ct]:ft.push(ct))}else ft={lane:ct,tag:z.tag,payload:z.payload,callback:z.callback,next:null},pt===null?(J=pt=ft,V=vt):pt=pt.next=ft,E|=ct;if(z=z.next,z===null){if(z=x.shared.pending,z===null)break;ft=z,z=ft.next,ft.next=null,x.lastBaseUpdate=ft,x.shared.pending=null}}while(!0);pt===null&&(V=vt),x.baseState=V,x.firstBaseUpdate=J,x.lastBaseUpdate=pt,N===null&&(x.shared.lanes=0),ii|=E,o.lanes=E,o.memoizedState=vt}}function tC(o,c){if(typeof o!="function")throw Error(s(191,o));o.call(c)}function eC(o,c){var f=o.callbacks;if(f!==null)for(o.callbacks=null,o=0;o<f.length;o++)tC(f[o],c)}function Jc(o,c){try{var f=c.updateQueue,g=f!==null?f.lastEffect:null;if(g!==null){var x=g.next;f=x;do{if((f.tag&o)===o){g=void 0;var N=f.create,E=f.inst;g=N(),E.destroy=g}f=f.next}while(f!==x)}}catch(z){Ce(c,c.return,z)}}function ni(o,c,f){try{var g=c.updateQueue,x=g!==null?g.lastEffect:null;if(x!==null){var N=x.next;g=N;do{if((g.tag&o)===o){var E=g.inst,z=E.destroy;if(z!==void 0){E.destroy=void 0,x=c;var V=f;try{z()}catch(J){Ce(x,V,J)}}}g=g.next}while(g!==N)}}catch(J){Ce(c,c.return,J)}}function nC(o){var c=o.updateQueue;if(c!==null){var f=o.stateNode;try{eC(c,f)}catch(g){Ce(o,o.return,g)}}}function sC(o,c,f){f.props=io(o.type,o.memoizedProps),f.state=o.memoizedState;try{f.componentWillUnmount()}catch(g){Ce(o,c,g)}}function uo(o,c){try{var f=o.ref;if(f!==null){var g=o.stateNode;switch(o.tag){case 26:case 27:case 5:var x=g;break;default:x=g}typeof f=="function"?o.refCleanup=f(x):f.current=x}}catch(N){Ce(o,c,N)}}function Is(o,c){var f=o.ref,g=o.refCleanup;if(f!==null)if(typeof g=="function")try{g()}catch(x){Ce(o,c,x)}finally{o.refCleanup=null,o=o.alternate,o!=null&&(o.refCleanup=null)}else if(typeof f=="function")try{f(null)}catch(x){Ce(o,c,x)}else f.current=null}function aC(o){var c=o.type,f=o.memoizedProps,g=o.stateNode;try{t:switch(c){case"button":case"input":case"select":case"textarea":f.autoFocus&&g.focus();break t;case"img":f.src?g.src=f.src:f.srcSet&&(g.srcset=f.srcSet)}}catch(x){Ce(o,o.return,x)}}function rC(o,c,f){try{var g=o.stateNode;M3(g,o.type,f,c),g[ds]=c}catch(x){Ce(o,o.return,x)}}function iC(o){return o.tag===5||o.tag===3||o.tag===26||o.tag===27||o.tag===4}function R0(o){t:for(;;){for(;o.sibling===null;){if(o.return===null||iC(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==27&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue t;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function D0(o,c,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,c?f.nodeType===8?f.parentNode.insertBefore(o,c):f.insertBefore(o,c):(f.nodeType===8?(c=f.parentNode,c.insertBefore(o,f)):(c=f,c.appendChild(o)),f=f._reactRootContainer,f!=null||c.onclick!==null||(c.onclick=Fp));else if(g!==4&&g!==27&&(o=o.child,o!==null))for(D0(o,c,f),o=o.sibling;o!==null;)D0(o,c,f),o=o.sibling}function Sp(o,c,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,c?f.insertBefore(o,c):f.appendChild(o);else if(g!==4&&g!==27&&(o=o.child,o!==null))for(Sp(o,c,f),o=o.sibling;o!==null;)Sp(o,c,f),o=o.sibling}var mr=!1,Ge=!1,O0=!1,oC=typeof WeakSet=="function"?WeakSet:Set,Tn=null,lC=!1;function p3(o,c){if(o=o.containerInfo,ox=Up,o=CN(o),Fb(o)){if("selectionStart"in o)var f={start:o.selectionStart,end:o.selectionEnd};else t:{f=(f=o.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&g.rangeCount!==0){f=g.anchorNode;var x=g.anchorOffset,N=g.focusNode;g=g.focusOffset;try{f.nodeType,N.nodeType}catch{f=null;break t}var E=0,z=-1,V=-1,J=0,pt=0,vt=o,ct=null;e:for(;;){for(var ft;vt!==f||x!==0&&vt.nodeType!==3||(z=E+x),vt!==N||g!==0&&vt.nodeType!==3||(V=E+g),vt.nodeType===3&&(E+=vt.nodeValue.length),(ft=vt.firstChild)!==null;)ct=vt,vt=ft;for(;;){if(vt===o)break e;if(ct===f&&++J===x&&(z=E),ct===N&&++pt===g&&(V=E),(ft=vt.nextSibling)!==null)break;vt=ct,ct=vt.parentNode}vt=ft}f=z===-1||V===-1?null:{start:z,end:V}}else f=null}f=f||{start:0,end:0}}else f=null;for(lx={focusedElem:o,selectionRange:f},Up=!1,Tn=c;Tn!==null;)if(c=Tn,o=c.child,(c.subtreeFlags&1028)!==0&&o!==null)o.return=c,Tn=o;else for(;Tn!==null;){switch(c=Tn,N=c.alternate,o=c.flags,c.tag){case 0:break;case 11:case 15:break;case 1:if((o&1024)!==0&&N!==null){o=void 0,f=c,x=N.memoizedProps,N=N.memoizedState,g=f.stateNode;try{var Ft=io(f.type,x,f.elementType===f.type);o=g.getSnapshotBeforeUpdate(Ft,N),g.__reactInternalSnapshotBeforeUpdate=o}catch(Ut){Ce(f,f.return,Ut)}}break;case 3:if((o&1024)!==0){if(o=c.stateNode.containerInfo,f=o.nodeType,f===9)dx(o);else if(f===1)switch(o.nodeName){case"HEAD":case"HTML":case"BODY":dx(o);break;default:o.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((o&1024)!==0)throw Error(s(163))}if(o=c.sibling,o!==null){o.return=c.return,Tn=o;break}Tn=c.return}return Ft=lC,lC=!1,Ft}function uC(o,c,f){var g=f.flags;switch(f.tag){case 0:case 11:case 15:yr(o,f),g&4&&Jc(5,f);break;case 1:if(yr(o,f),g&4)if(o=f.stateNode,c===null)try{o.componentDidMount()}catch(z){Ce(f,f.return,z)}else{var x=io(f.type,c.memoizedProps);c=c.memoizedState;try{o.componentDidUpdate(x,c,o.__reactInternalSnapshotBeforeUpdate)}catch(z){Ce(f,f.return,z)}}g&64&&nC(f),g&512&&uo(f,f.return);break;case 3:if(yr(o,f),g&64&&(g=f.updateQueue,g!==null)){if(o=null,f.child!==null)switch(f.child.tag){case 27:case 5:o=f.child.stateNode;break;case 1:o=f.child.stateNode}try{eC(g,o)}catch(z){Ce(f,f.return,z)}}break;case 26:yr(o,f),g&512&&uo(f,f.return);break;case 27:case 5:yr(o,f),c===null&&g&4&&aC(f),g&512&&uo(f,f.return);break;case 12:yr(o,f);break;case 13:yr(o,f),g&4&&dC(o,f);break;case 22:if(x=f.memoizedState!==null||mr,!x){c=c!==null&&c.memoizedState!==null||Ge;var N=mr,E=Ge;mr=x,(Ge=c)&&!E?si(o,f,(f.subtreeFlags&8772)!==0):yr(o,f),mr=N,Ge=E}g&512&&(f.memoizedProps.mode==="manual"?uo(f,f.return):Is(f,f.return));break;default:yr(o,f)}}function cC(o){var c=o.alternate;c!==null&&(o.alternate=null,cC(c)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(c=o.stateNode,c!==null&&xb(c)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}var an=null,Es=!1;function gr(o,c,f){for(f=f.child;f!==null;)hC(o,c,f),f=f.sibling}function hC(o,c,f){if(Jn&&typeof Jn.onCommitFiberUnmount=="function")try{Jn.onCommitFiberUnmount(Fa,f)}catch{}switch(f.tag){case 26:Ge||Is(f,c),gr(o,c,f),f.memoizedState?f.memoizedState.count--:f.stateNode&&(f=f.stateNode,f.parentNode.removeChild(f));break;case 27:Ge||Is(f,c);var g=an,x=Es;for(an=f.stateNode,gr(o,c,f),f=f.stateNode,c=f.attributes;c.length;)f.removeAttributeNode(c[0]);xb(f),an=g,Es=x;break;case 5:Ge||Is(f,c);case 6:x=an;var N=Es;if(an=null,gr(o,c,f),an=x,Es=N,an!==null)if(Es)try{o=an,g=f.stateNode,o.nodeType===8?o.parentNode.removeChild(g):o.removeChild(g)}catch(E){Ce(f,c,E)}else try{an.removeChild(f.stateNode)}catch(E){Ce(f,c,E)}break;case 18:an!==null&&(Es?(c=an,f=f.stateNode,c.nodeType===8?hx(c.parentNode,f):c.nodeType===1&&hx(c,f),yh(c)):hx(an,f.stateNode));break;case 4:g=an,x=Es,an=f.stateNode.containerInfo,Es=!0,gr(o,c,f),an=g,Es=x;break;case 0:case 11:case 14:case 15:Ge||ni(2,f,c),Ge||ni(4,f,c),gr(o,c,f);break;case 1:Ge||(Is(f,c),g=f.stateNode,typeof g.componentWillUnmount=="function"&&sC(f,c,g)),gr(o,c,f);break;case 21:gr(o,c,f);break;case 22:Ge||Is(f,c),Ge=(g=Ge)||f.memoizedState!==null,gr(o,c,f),Ge=g;break;default:gr(o,c,f)}}function dC(o,c){if(c.memoizedState===null&&(o=c.alternate,o!==null&&(o=o.memoizedState,o!==null&&(o=o.dehydrated,o!==null))))try{yh(o)}catch(f){Ce(c,c.return,f)}}function m3(o){switch(o.tag){case 13:case 19:var c=o.stateNode;return c===null&&(c=o.stateNode=new oC),c;case 22:return o=o.stateNode,c=o._retryCache,c===null&&(c=o._retryCache=new oC),c;default:throw Error(s(435,o.tag))}}function _0(o,c){var f=m3(o);c.forEach(function(g){var x=I3.bind(null,o,g);f.has(g)||(f.add(g),g.then(x,x))})}function Xs(o,c){var f=c.deletions;if(f!==null)for(var g=0;g<f.length;g++){var x=f[g],N=o,E=c,z=E;t:for(;z!==null;){switch(z.tag){case 27:case 5:an=z.stateNode,Es=!1;break t;case 3:an=z.stateNode.containerInfo,Es=!0;break t;case 4:an=z.stateNode.containerInfo,Es=!0;break t}z=z.return}if(an===null)throw Error(s(160));hC(N,E,x),an=null,Es=!1,N=x.alternate,N!==null&&(N.return=null),x.return=null}if(c.subtreeFlags&13878)for(c=c.child;c!==null;)fC(c,o),c=c.sibling}var xa=null;function fC(o,c){var f=o.alternate,g=o.flags;switch(o.tag){case 0:case 11:case 14:case 15:Xs(c,o),Ys(o),g&4&&(ni(3,o,o.return),Jc(3,o),ni(5,o,o.return));break;case 1:Xs(c,o),Ys(o),g&512&&(Ge||f===null||Is(f,f.return)),g&64&&mr&&(o=o.updateQueue,o!==null&&(g=o.callbacks,g!==null&&(f=o.shared.hiddenCallbacks,o.shared.hiddenCallbacks=f===null?g:f.concat(g))));break;case 26:var x=xa;if(Xs(c,o),Ys(o),g&512&&(Ge||f===null||Is(f,f.return)),g&4){var N=f!==null?f.memoizedState:null;if(g=o.memoizedState,f===null)if(g===null)if(o.stateNode===null){t:{g=o.type,f=o.memoizedProps,x=x.ownerDocument||x;e:switch(g){case"title":N=x.getElementsByTagName("title")[0],(!N||N[Cc]||N[Pn]||N.namespaceURI==="http://www.w3.org/2000/svg"||N.hasAttribute("itemprop"))&&(N=x.createElement(g),x.head.insertBefore(N,x.querySelector("head > title"))),zn(N,g,f),N[Pn]=o,Sn(N),g=N;break t;case"link":var E=a2("link","href",x).get(g+(f.href||""));if(E){for(var z=0;z<E.length;z++)if(N=E[z],N.getAttribute("href")===(f.href==null?null:f.href)&&N.getAttribute("rel")===(f.rel==null?null:f.rel)&&N.getAttribute("title")===(f.title==null?null:f.title)&&N.getAttribute("crossorigin")===(f.crossOrigin==null?null:f.crossOrigin)){E.splice(z,1);break e}}N=x.createElement(g),zn(N,g,f),x.head.appendChild(N);break;case"meta":if(E=a2("meta","content",x).get(g+(f.content||""))){for(z=0;z<E.length;z++)if(N=E[z],N.getAttribute("content")===(f.content==null?null:""+f.content)&&N.getAttribute("name")===(f.name==null?null:f.name)&&N.getAttribute("property")===(f.property==null?null:f.property)&&N.getAttribute("http-equiv")===(f.httpEquiv==null?null:f.httpEquiv)&&N.getAttribute("charset")===(f.charSet==null?null:f.charSet)){E.splice(z,1);break e}}N=x.createElement(g),zn(N,g,f),x.head.appendChild(N);break;default:throw Error(s(468,g))}N[Pn]=o,Sn(N),g=N}o.stateNode=g}else r2(x,o.type,o.stateNode);else o.stateNode=s2(x,g,o.memoizedProps);else N!==g?(N===null?f.stateNode!==null&&(f=f.stateNode,f.parentNode.removeChild(f)):N.count--,g===null?r2(x,o.type,o.stateNode):s2(x,g,o.memoizedProps)):g===null&&o.stateNode!==null&&rC(o,o.memoizedProps,f.memoizedProps)}break;case 27:if(g&4&&o.alternate===null){x=o.stateNode,N=o.memoizedProps;try{for(var V=x.firstChild;V;){var J=V.nextSibling,pt=V.nodeName;V[Cc]||pt==="HEAD"||pt==="BODY"||pt==="SCRIPT"||pt==="STYLE"||pt==="LINK"&&V.rel.toLowerCase()==="stylesheet"||x.removeChild(V),V=J}for(var vt=o.type,ct=x.attributes;ct.length;)x.removeAttributeNode(ct[0]);zn(x,vt,N),x[Pn]=o,x[ds]=N}catch(Ft){Ce(o,o.return,Ft)}}case 5:if(Xs(c,o),Ys(o),g&512&&(Ge||f===null||Is(f,f.return)),o.flags&32){x=o.stateNode;try{fl(x,"")}catch(Ft){Ce(o,o.return,Ft)}}g&4&&o.stateNode!=null&&(x=o.memoizedProps,rC(o,x,f!==null?f.memoizedProps:x)),g&1024&&(O0=!0);break;case 6:if(Xs(c,o),Ys(o),g&4){if(o.stateNode===null)throw Error(s(162));g=o.memoizedProps,f=o.stateNode;try{f.nodeValue=g}catch(Ft){Ce(o,o.return,Ft)}}break;case 3:if(Bp=null,x=xa,xa=zp(c.containerInfo),Xs(c,o),xa=x,Ys(o),g&4&&f!==null&&f.memoizedState.isDehydrated)try{yh(c.containerInfo)}catch(Ft){Ce(o,o.return,Ft)}O0&&(O0=!1,pC(o));break;case 4:g=xa,xa=zp(o.stateNode.containerInfo),Xs(c,o),Ys(o),xa=g;break;case 12:Xs(c,o),Ys(o);break;case 13:Xs(c,o),Ys(o),o.child.flags&8192&&o.memoizedState!==null!=(f!==null&&f.memoizedState!==null)&&(W0=We()),g&4&&(g=o.updateQueue,g!==null&&(o.updateQueue=null,_0(o,g)));break;case 22:if(g&512&&(Ge||f===null||Is(f,f.return)),V=o.memoizedState!==null,J=f!==null&&f.memoizedState!==null,pt=mr,vt=Ge,mr=pt||V,Ge=vt||J,Xs(c,o),Ge=vt,mr=pt,Ys(o),c=o.stateNode,c._current=o,c._visibility&=-3,c._visibility|=c._pendingVisibility&2,g&8192&&(c._visibility=V?c._visibility&-2:c._visibility|1,V&&(c=mr||Ge,f===null||J||c||Al(o)),o.memoizedProps===null||o.memoizedProps.mode!=="manual"))t:for(f=null,c=o;;){if(c.tag===5||c.tag===26||c.tag===27){if(f===null){J=f=c;try{if(x=J.stateNode,V)N=x.style,typeof N.setProperty=="function"?N.setProperty("display","none","important"):N.display="none";else{E=J.stateNode,z=J.memoizedProps.style;var ft=z!=null&&z.hasOwnProperty("display")?z.display:null;E.style.display=ft==null||typeof ft=="boolean"?"":(""+ft).trim()}}catch(Ft){Ce(J,J.return,Ft)}}}else if(c.tag===6){if(f===null){J=c;try{J.stateNode.nodeValue=V?"":J.memoizedProps}catch(Ft){Ce(J,J.return,Ft)}}}else if((c.tag!==22&&c.tag!==23||c.memoizedState===null||c===o)&&c.child!==null){c.child.return=c,c=c.child;continue}if(c===o)break t;for(;c.sibling===null;){if(c.return===null||c.return===o)break t;f===c&&(f=null),c=c.return}f===c&&(f=null),c.sibling.return=c.return,c=c.sibling}g&4&&(g=o.updateQueue,g!==null&&(f=g.retryQueue,f!==null&&(g.retryQueue=null,_0(o,f))));break;case 19:Xs(c,o),Ys(o),g&4&&(g=o.updateQueue,g!==null&&(o.updateQueue=null,_0(o,g)));break;case 21:break;default:Xs(c,o),Ys(o)}}function Ys(o){var c=o.flags;if(c&2){try{if(o.tag!==27){t:{for(var f=o.return;f!==null;){if(iC(f)){var g=f;break t}f=f.return}throw Error(s(160))}switch(g.tag){case 27:var x=g.stateNode,N=R0(o);Sp(o,N,x);break;case 5:var E=g.stateNode;g.flags&32&&(fl(E,""),g.flags&=-33);var z=R0(o);Sp(o,z,E);break;case 3:case 4:var V=g.stateNode.containerInfo,J=R0(o);D0(o,J,V);break;default:throw Error(s(161))}}}catch(pt){Ce(o,o.return,pt)}o.flags&=-3}c&4096&&(o.flags&=-4097)}function pC(o){if(o.subtreeFlags&1024)for(o=o.child;o!==null;){var c=o;pC(c),c.tag===5&&c.flags&1024&&c.stateNode.reset(),o=o.sibling}}function yr(o,c){if(c.subtreeFlags&8772)for(c=c.child;c!==null;)uC(o,c.alternate,c),c=c.sibling}function Al(o){for(o=o.child;o!==null;){var c=o;switch(c.tag){case 0:case 11:case 14:case 15:ni(4,c,c.return),Al(c);break;case 1:Is(c,c.return);var f=c.stateNode;typeof f.componentWillUnmount=="function"&&sC(c,c.return,f),Al(c);break;case 26:case 27:case 5:Is(c,c.return),Al(c);break;case 22:Is(c,c.return),c.memoizedState===null&&Al(c);break;default:Al(c)}o=o.sibling}}function si(o,c,f){for(f=f&&(c.subtreeFlags&8772)!==0,c=c.child;c!==null;){var g=c.alternate,x=o,N=c,E=N.flags;switch(N.tag){case 0:case 11:case 15:si(x,N,f),Jc(4,N);break;case 1:if(si(x,N,f),g=N,x=g.stateNode,typeof x.componentDidMount=="function")try{x.componentDidMount()}catch(J){Ce(g,g.return,J)}if(g=N,x=g.updateQueue,x!==null){var z=g.stateNode;try{var V=x.shared.hiddenCallbacks;if(V!==null)for(x.shared.hiddenCallbacks=null,x=0;x<V.length;x++)tC(V[x],z)}catch(J){Ce(g,g.return,J)}}f&&E&64&&nC(N),uo(N,N.return);break;case 26:case 27:case 5:si(x,N,f),f&&g===null&&E&4&&aC(N),uo(N,N.return);break;case 12:si(x,N,f);break;case 13:si(x,N,f),f&&E&4&&dC(x,N);break;case 22:N.memoizedState===null&&si(x,N,f),uo(N,N.return);break;default:si(x,N,f)}c=c.sibling}}function F0(o,c){var f=null;o!==null&&o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(f=o.memoizedState.cachePool.pool),o=null,c.memoizedState!==null&&c.memoizedState.cachePool!==null&&(o=c.memoizedState.cachePool.pool),o!==f&&(o!=null&&o.refCount++,f!=null&&Wc(f))}function L0(o,c){o=null,c.alternate!==null&&(o=c.alternate.memoizedState.cache),c=c.memoizedState.cache,c!==o&&(c.refCount++,o!=null&&Wc(o))}function ai(o,c,f,g){if(c.subtreeFlags&10256)for(c=c.child;c!==null;)mC(o,c,f,g),c=c.sibling}function mC(o,c,f,g){var x=c.flags;switch(c.tag){case 0:case 11:case 15:ai(o,c,f,g),x&2048&&Jc(9,c);break;case 3:ai(o,c,f,g),x&2048&&(o=null,c.alternate!==null&&(o=c.alternate.memoizedState.cache),c=c.memoizedState.cache,c!==o&&(c.refCount++,o!=null&&Wc(o)));break;case 12:if(x&2048){ai(o,c,f,g),o=c.stateNode;try{var N=c.memoizedProps,E=N.id,z=N.onPostCommit;typeof z=="function"&&z(E,c.alternate===null?"mount":"update",o.passiveEffectDuration,-0)}catch(V){Ce(c,c.return,V)}}else ai(o,c,f,g);break;case 23:break;case 22:N=c.stateNode,c.memoizedState!==null?N._visibility&4?ai(o,c,f,g):th(o,c):N._visibility&4?ai(o,c,f,g):(N._visibility|=4,Rl(o,c,f,g,(c.subtreeFlags&10256)!==0)),x&2048&&F0(c.alternate,c);break;case 24:ai(o,c,f,g),x&2048&&L0(c.alternate,c);break;default:ai(o,c,f,g)}}function Rl(o,c,f,g,x){for(x=x&&(c.subtreeFlags&10256)!==0,c=c.child;c!==null;){var N=o,E=c,z=f,V=g,J=E.flags;switch(E.tag){case 0:case 11:case 15:Rl(N,E,z,V,x),Jc(8,E);break;case 23:break;case 22:var pt=E.stateNode;E.memoizedState!==null?pt._visibility&4?Rl(N,E,z,V,x):th(N,E):(pt._visibility|=4,Rl(N,E,z,V,x)),x&&J&2048&&F0(E.alternate,E);break;case 24:Rl(N,E,z,V,x),x&&J&2048&&L0(E.alternate,E);break;default:Rl(N,E,z,V,x)}c=c.sibling}}function th(o,c){if(c.subtreeFlags&10256)for(c=c.child;c!==null;){var f=o,g=c,x=g.flags;switch(g.tag){case 22:th(f,g),x&2048&&F0(g.alternate,g);break;case 24:th(f,g),x&2048&&L0(g.alternate,g);break;default:th(f,g)}c=c.sibling}}var eh=8192;function Dl(o){if(o.subtreeFlags&eh)for(o=o.child;o!==null;)gC(o),o=o.sibling}function gC(o){switch(o.tag){case 26:Dl(o),o.flags&eh&&o.memoizedState!==null&&sL(xa,o.memoizedState,o.memoizedProps);break;case 5:Dl(o);break;case 3:case 4:var c=xa;xa=zp(o.stateNode.containerInfo),Dl(o),xa=c;break;case 22:o.memoizedState===null&&(c=o.alternate,c!==null&&c.memoizedState!==null?(c=eh,eh=16777216,Dl(o),eh=c):Dl(o));break;default:Dl(o)}}function yC(o){var c=o.alternate;if(c!==null&&(o=c.child,o!==null)){c.child=null;do c=o.sibling,o.sibling=null,o=c;while(o!==null)}}function nh(o){var c=o.deletions;if((o.flags&16)!==0){if(c!==null)for(var f=0;f<c.length;f++){var g=c[f];Tn=g,xC(g,o)}yC(o)}if(o.subtreeFlags&10256)for(o=o.child;o!==null;)bC(o),o=o.sibling}function bC(o){switch(o.tag){case 0:case 11:case 15:nh(o),o.flags&2048&&ni(9,o,o.return);break;case 3:nh(o);break;case 12:nh(o);break;case 22:var c=o.stateNode;o.memoizedState!==null&&c._visibility&4&&(o.return===null||o.return.tag!==13)?(c._visibility&=-5,Np(o)):nh(o);break;default:nh(o)}}function Np(o){var c=o.deletions;if((o.flags&16)!==0){if(c!==null)for(var f=0;f<c.length;f++){var g=c[f];Tn=g,xC(g,o)}yC(o)}for(o=o.child;o!==null;){switch(c=o,c.tag){case 0:case 11:case 15:ni(8,c,c.return),Np(c);break;case 22:f=c.stateNode,f._visibility&4&&(f._visibility&=-5,Np(c));break;default:Np(c)}o=o.sibling}}function xC(o,c){for(;Tn!==null;){var f=Tn;switch(f.tag){case 0:case 11:case 15:ni(8,f,c);break;case 23:case 22:if(f.memoizedState!==null&&f.memoizedState.cachePool!==null){var g=f.memoizedState.cachePool.pool;g!=null&&g.refCount++}break;case 24:Wc(f.memoizedState.cache)}if(g=f.child,g!==null)g.return=f,Tn=g;else t:for(f=o;Tn!==null;){g=Tn;var x=g.sibling,N=g.return;if(cC(g),g===f){Tn=null;break t}if(x!==null){x.return=N,Tn=x;break t}Tn=N}}}function g3(o,c,f,g){this.tag=o,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=c,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Zs(o,c,f,g){return new g3(o,c,f,g)}function z0(o){return o=o.prototype,!(!o||!o.isReactComponent)}function ri(o,c){var f=o.alternate;return f===null?(f=Zs(o.tag,c,o.key,o.mode),f.elementType=o.elementType,f.type=o.type,f.stateNode=o.stateNode,f.alternate=o,o.alternate=f):(f.pendingProps=c,f.type=o.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=o.flags&31457280,f.childLanes=o.childLanes,f.lanes=o.lanes,f.child=o.child,f.memoizedProps=o.memoizedProps,f.memoizedState=o.memoizedState,f.updateQueue=o.updateQueue,c=o.dependencies,f.dependencies=c===null?null:{lanes:c.lanes,firstContext:c.firstContext},f.sibling=o.sibling,f.index=o.index,f.ref=o.ref,f.refCleanup=o.refCleanup,f}function vC(o,c){o.flags&=31457282;var f=o.alternate;return f===null?(o.childLanes=0,o.lanes=c,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=f.childLanes,o.lanes=f.lanes,o.child=f.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=f.memoizedProps,o.memoizedState=f.memoizedState,o.updateQueue=f.updateQueue,o.type=f.type,c=f.dependencies,o.dependencies=c===null?null:{lanes:c.lanes,firstContext:c.firstContext}),o}function Tp(o,c,f,g,x,N){var E=0;if(g=o,typeof o=="function")z0(o)&&(E=1);else if(typeof o=="string")E=eL(o,f,Mt.current)?26:o==="html"||o==="head"||o==="body"?27:5;else t:switch(o){case u:return co(f.children,x,N,c);case h:E=8,x|=24;break;case d:return o=Zs(12,f,c,x|2),o.elementType=d,o.lanes=N,o;case v:return o=Zs(13,f,c,x),o.elementType=v,o.lanes=N,o;case w:return o=Zs(19,f,c,x),o.elementType=w,o.lanes=N,o;case $:return wC(f,x,N,c);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case p:case y:E=10;break t;case m:E=9;break t;case b:E=11;break t;case S:E=14;break t;case T:E=16,g=null;break t}E=29,f=Error(s(130,o===null?"null":typeof o,"")),g=null}return c=Zs(E,f,c,x),c.elementType=o,c.type=g,c.lanes=N,c}function co(o,c,f,g){return o=Zs(7,o,g,c),o.lanes=f,o}function wC(o,c,f,g){o=Zs(22,o,g,c),o.elementType=$,o.lanes=f;var x={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var N=x._current;if(N===null)throw Error(s(456));if((x._pendingVisibility&2)===0){var E=qr(N,2);E!==null&&(x._pendingVisibility|=2,es(E,N,2))}},attach:function(){var N=x._current;if(N===null)throw Error(s(456));if((x._pendingVisibility&2)!==0){var E=qr(N,2);E!==null&&(x._pendingVisibility&=-3,es(E,N,2))}}};return o.stateNode=x,o}function M0(o,c,f){return o=Zs(6,o,null,c),o.lanes=f,o}function B0(o,c,f){return c=Zs(4,o.children!==null?o.children:[],o.key,c),c.lanes=f,c.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},c}function br(o){o.flags|=4}function SC(o,c){if(c.type!=="stylesheet"||(c.state.loading&4)!==0)o.flags&=-16777217;else if(o.flags|=16777216,!i2(c)){if(c=Ks.current,c!==null&&((le&4194176)===le?za!==null:(le&62914560)!==le&&(le&536870912)===0||c!==za))throw Vc=Gb,BN;o.flags|=8192}}function Cp(o,c){c!==null&&(o.flags|=4),o.flags&16384&&(c=o.tag!==22?VS():536870912,o.lanes|=c,_l|=c)}function sh(o,c){if(!fe)switch(o.tailMode){case"hidden":c=o.tail;for(var f=null;c!==null;)c.alternate!==null&&(f=c),c=c.sibling;f===null?o.tail=null:f.sibling=null;break;case"collapsed":f=o.tail;for(var g=null;f!==null;)f.alternate!==null&&(g=f),f=f.sibling;g===null?c||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function Me(o){var c=o.alternate!==null&&o.alternate.child===o.child,f=0,g=0;if(c)for(var x=o.child;x!==null;)f|=x.lanes|x.childLanes,g|=x.subtreeFlags&31457280,g|=x.flags&31457280,x.return=o,x=x.sibling;else for(x=o.child;x!==null;)f|=x.lanes|x.childLanes,g|=x.subtreeFlags,g|=x.flags,x.return=o,x=x.sibling;return o.subtreeFlags|=g,o.childLanes=f,c}function y3(o,c,f){var g=c.pendingProps;switch(Ub(c),c.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Me(c),null;case 1:return Me(c),null;case 3:return f=c.stateNode,g=null,o!==null&&(g=o.memoizedState.cache),c.memoizedState.cache!==g&&(c.flags|=2048),pr(pn),re(),f.pendingContext&&(f.context=f.pendingContext,f.pendingContext=null),(o===null||o.child===null)&&(Lc(c)?br(c):o===null||o.memoizedState.isDehydrated&&(c.flags&256)===0||(c.flags|=1024,ba!==null&&(q0(ba),ba=null))),Me(c),null;case 26:return f=c.memoizedState,o===null?(br(c),f!==null?(Me(c),SC(c,f)):(Me(c),c.flags&=-16777217)):f?f!==o.memoizedState?(br(c),Me(c),SC(c,f)):(Me(c),c.flags&=-16777217):(o.memoizedProps!==g&&br(c),Me(c),c.flags&=-16777217),null;case 27:me(c),f=ae.current;var x=c.type;if(o!==null&&c.stateNode!=null)o.memoizedProps!==g&&br(c);else{if(!g){if(c.stateNode===null)throw Error(s(166));return Me(c),null}o=Mt.current,Lc(c)?zN(c):(o=QC(x,g,f),c.stateNode=o,br(c))}return Me(c),null;case 5:if(me(c),f=c.type,o!==null&&c.stateNode!=null)o.memoizedProps!==g&&br(c);else{if(!g){if(c.stateNode===null)throw Error(s(166));return Me(c),null}if(o=Mt.current,Lc(c))zN(c);else{switch(x=Lp(ae.current),o){case 1:o=x.createElementNS("http://www.w3.org/2000/svg",f);break;case 2:o=x.createElementNS("http://www.w3.org/1998/Math/MathML",f);break;default:switch(f){case"svg":o=x.createElementNS("http://www.w3.org/2000/svg",f);break;case"math":o=x.createElementNS("http://www.w3.org/1998/Math/MathML",f);break;case"script":o=x.createElement("div"),o.innerHTML="<script><\/script>",o=o.removeChild(o.firstChild);break;case"select":o=typeof g.is=="string"?x.createElement("select",{is:g.is}):x.createElement("select"),g.multiple?o.multiple=!0:g.size&&(o.size=g.size);break;default:o=typeof g.is=="string"?x.createElement(f,{is:g.is}):x.createElement(f)}}o[Pn]=c,o[ds]=g;t:for(x=c.child;x!==null;){if(x.tag===5||x.tag===6)o.appendChild(x.stateNode);else if(x.tag!==4&&x.tag!==27&&x.child!==null){x.child.return=x,x=x.child;continue}if(x===c)break t;for(;x.sibling===null;){if(x.return===null||x.return===c)break t;x=x.return}x.sibling.return=x.return,x=x.sibling}c.stateNode=o;t:switch(zn(o,f,g),f){case"button":case"input":case"select":case"textarea":o=!!g.autoFocus;break t;case"img":o=!0;break t;default:o=!1}o&&br(c)}}return Me(c),c.flags&=-16777217,null;case 6:if(o&&c.stateNode!=null)o.memoizedProps!==g&&br(c);else{if(typeof g!="string"&&c.stateNode===null)throw Error(s(166));if(o=ae.current,Lc(c)){if(o=c.stateNode,f=c.memoizedProps,g=null,x=ts,x!==null)switch(x.tag){case 27:case 5:g=x.memoizedProps}o[Pn]=c,o=!!(o.nodeValue===f||g!==null&&g.suppressHydrationWarning===!0||jC(o.nodeValue,f)),o||to(c)}else o=Lp(o).createTextNode(g),o[Pn]=c,c.stateNode=o}return Me(c),null;case 13:if(g=c.memoizedState,o===null||o.memoizedState!==null&&o.memoizedState.dehydrated!==null){if(x=Lc(c),g!==null&&g.dehydrated!==null){if(o===null){if(!x)throw Error(s(318));if(x=c.memoizedState,x=x!==null?x.dehydrated:null,!x)throw Error(s(317));x[Pn]=c}else zc(),(c.flags&128)===0&&(c.memoizedState=null),c.flags|=4;Me(c),x=!1}else ba!==null&&(q0(ba),ba=null),x=!0;if(!x)return c.flags&256?(cr(c),c):(cr(c),null)}if(cr(c),(c.flags&128)!==0)return c.lanes=f,c;if(f=g!==null,o=o!==null&&o.memoizedState!==null,f){g=c.child,x=null,g.alternate!==null&&g.alternate.memoizedState!==null&&g.alternate.memoizedState.cachePool!==null&&(x=g.alternate.memoizedState.cachePool.pool);var N=null;g.memoizedState!==null&&g.memoizedState.cachePool!==null&&(N=g.memoizedState.cachePool.pool),N!==x&&(g.flags|=2048)}return f!==o&&f&&(c.child.flags|=8192),Cp(c,c.updateQueue),Me(c),null;case 4:return re(),o===null&&ax(c.stateNode.containerInfo),Me(c),null;case 10:return pr(c.type),Me(c),null;case 19:if(Ct(fn),x=c.memoizedState,x===null)return Me(c),null;if(g=(c.flags&128)!==0,N=x.rendering,N===null)if(g)sh(x,!1);else{if(He!==0||o!==null&&(o.flags&128)!==0)for(o=c.child;o!==null;){if(N=lp(o),N!==null){for(c.flags|=128,sh(x,!1),o=N.updateQueue,c.updateQueue=o,Cp(c,o),c.subtreeFlags=0,o=f,f=c.child;f!==null;)vC(f,o),f=f.sibling;return It(fn,fn.current&1|2),c.child}o=o.sibling}x.tail!==null&&We()>$p&&(c.flags|=128,g=!0,sh(x,!1),c.lanes=4194304)}else{if(!g)if(o=lp(N),o!==null){if(c.flags|=128,g=!0,o=o.updateQueue,c.updateQueue=o,Cp(c,o),sh(x,!0),x.tail===null&&x.tailMode==="hidden"&&!N.alternate&&!fe)return Me(c),null}else 2*We()-x.renderingStartTime>$p&&f!==536870912&&(c.flags|=128,g=!0,sh(x,!1),c.lanes=4194304);x.isBackwards?(N.sibling=c.child,c.child=N):(o=x.last,o!==null?o.sibling=N:c.child=N,x.last=N)}return x.tail!==null?(c=x.tail,x.rendering=c,x.tail=c.sibling,x.renderingStartTime=We(),c.sibling=null,o=fn.current,It(fn,g?o&1|2:o&1),c):(Me(c),null);case 22:case 23:return cr(c),jb(),g=c.memoizedState!==null,o!==null?o.memoizedState!==null!==g&&(c.flags|=8192):g&&(c.flags|=8192),g?(f&536870912)!==0&&(c.flags&128)===0&&(Me(c),c.subtreeFlags&6&&(c.flags|=8192)):Me(c),f=c.updateQueue,f!==null&&Cp(c,f.retryQueue),f=null,o!==null&&o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(f=o.memoizedState.cachePool.pool),g=null,c.memoizedState!==null&&c.memoizedState.cachePool!==null&&(g=c.memoizedState.cachePool.pool),g!==f&&(c.flags|=2048),o!==null&&Ct(no),null;case 24:return f=null,o!==null&&(f=o.memoizedState.cache),c.memoizedState.cache!==f&&(c.flags|=2048),pr(pn),Me(c),null;case 25:return null}throw Error(s(156,c.tag))}function b3(o,c){switch(Ub(c),c.tag){case 1:return o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 3:return pr(pn),re(),o=c.flags,(o&65536)!==0&&(o&128)===0?(c.flags=o&-65537|128,c):null;case 26:case 27:case 5:return me(c),null;case 13:if(cr(c),o=c.memoizedState,o!==null&&o.dehydrated!==null){if(c.alternate===null)throw Error(s(340));zc()}return o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 19:return Ct(fn),null;case 4:return re(),null;case 10:return pr(c.type),null;case 22:case 23:return cr(c),jb(),o!==null&&Ct(no),o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 24:return pr(pn),null;case 25:return null;default:return null}}function NC(o,c){switch(Ub(c),c.tag){case 3:pr(pn),re();break;case 26:case 27:case 5:me(c);break;case 4:re();break;case 13:cr(c);break;case 19:Ct(fn);break;case 10:pr(c.type);break;case 22:case 23:cr(c),jb(),o!==null&&Ct(no);break;case 24:pr(pn)}}var x3={getCacheForType:function(o){var c=Un(pn),f=c.data.get(o);return f===void 0&&(f=o(),c.data.set(o,f)),f}},v3=typeof WeakMap=="function"?WeakMap:Map,Be=0,Ee=null,te=null,le=0,Ae=0,As=null,xr=!1,Ol=!1,V0=!1,vr=0,He=0,ii=0,ho=0,P0=0,Qs=0,_l=0,ah=null,Ba=null,U0=!1,W0=0,$p=1/0,kp=null,oi=null,Ip=!1,fo=null,rh=0,G0=0,H0=null,ih=0,j0=null;function Rs(){if((Be&2)!==0&&le!==0)return le&-le;if(O.T!==null){var o=Cl;return o!==0?o:tx()}return GS()}function TC(){Qs===0&&(Qs=(le&536870912)===0||fe?BS():536870912);var o=Ks.current;return o!==null&&(o.flags|=32),Qs}function es(o,c,f){(o===Ee&&Ae===2||o.cancelPendingCommit!==null)&&(Fl(o,0),wr(o,le,Qs,!1)),Tc(o,f),((Be&2)===0||o!==Ee)&&(o===Ee&&((Be&2)===0&&(ho|=f),He===4&&wr(o,le,Qs,!1)),Va(o))}function CC(o,c,f){if((Be&6)!==0)throw Error(s(327));var g=!f&&(c&60)===0&&(c&o.expiredLanes)===0||Nc(o,c),x=g?N3(o,c):Y0(o,c,!0),N=g;do{if(x===0){Ol&&!g&&wr(o,c,0,!1);break}else if(x===6)wr(o,c,0,!xr);else{if(f=o.current.alternate,N&&!w3(f)){x=Y0(o,c,!1),N=!1;continue}if(x===2){if(N=c,o.errorRecoveryDisabledLanes&N)var E=0;else E=o.pendingLanes&-536870913,E=E!==0?E:E&536870912?536870912:0;if(E!==0){c=E;t:{var z=o;x=ah;var V=z.current.memoizedState.isDehydrated;if(V&&(Fl(z,E).flags|=256),E=Y0(z,E,!1),E!==2){if(V0&&!V){z.errorRecoveryDisabledLanes|=N,ho|=N,x=4;break t}N=Ba,Ba=x,N!==null&&q0(N)}x=E}if(N=!1,x!==2)continue}}if(x===1){Fl(o,0),wr(o,c,0,!0);break}t:{switch(g=o,x){case 0:case 1:throw Error(s(345));case 4:if((c&4194176)===c){wr(g,c,Qs,!xr);break t}break;case 2:Ba=null;break;case 3:case 5:break;default:throw Error(s(329))}if(g.finishedWork=f,g.finishedLanes=c,(c&62914560)===c&&(N=W0+300-We(),10<N)){if(wr(g,c,Qs,!xr),Pf(g,0)!==0)break t;g.timeoutHandle=XC($C.bind(null,g,f,Ba,kp,U0,c,Qs,ho,_l,xr,2,-0,0),N);break t}$C(g,f,Ba,kp,U0,c,Qs,ho,_l,xr,0,-0,0)}}break}while(!0);Va(o)}function q0(o){Ba===null?Ba=o:Ba.push.apply(Ba,o)}function $C(o,c,f,g,x,N,E,z,V,J,pt,vt,ct){var ft=c.subtreeFlags;if((ft&8192||(ft&16785408)===16785408)&&(dh={stylesheets:null,count:0,unsuspend:nL},gC(c),c=aL(),c!==null)){o.cancelPendingCommit=c(OC.bind(null,o,f,g,x,E,z,V,1,vt,ct)),wr(o,N,E,!J);return}OC(o,f,g,x,E,z,V,pt,vt,ct)}function w3(o){for(var c=o;;){var f=c.tag;if((f===0||f===11||f===15)&&c.flags&16384&&(f=c.updateQueue,f!==null&&(f=f.stores,f!==null)))for(var g=0;g<f.length;g++){var x=f[g],N=x.getSnapshot;x=x.value;try{if(!ks(N(),x))return!1}catch{return!1}}if(f=c.child,c.subtreeFlags&16384&&f!==null)f.return=c,c=f;else{if(c===o)break;for(;c.sibling===null;){if(c.return===null||c.return===o)return!0;c=c.return}c.sibling.return=c.return,c=c.sibling}}return!0}function wr(o,c,f,g){c&=~P0,c&=~ho,o.suspendedLanes|=c,o.pingedLanes&=~c,g&&(o.warmLanes|=c),g=o.expirationTimes;for(var x=c;0<x;){var N=31-$s(x),E=1<<N;g[N]=-1,x&=~E}f!==0&&PS(o,f,c)}function Ep(){return(Be&6)===0?(oh(0),!1):!0}function K0(){if(te!==null){if(Ae===0)var o=te.return;else o=te,fr=oo=null,t0(o),Nl=null,Pc=0,o=te;for(;o!==null;)NC(o.alternate,o),o=o.return;te=null}}function Fl(o,c){o.finishedWork=null,o.finishedLanes=0;var f=o.timeoutHandle;f!==-1&&(o.timeoutHandle=-1,V3(f)),f=o.cancelPendingCommit,f!==null&&(o.cancelPendingCommit=null,f()),K0(),Ee=o,te=f=ri(o.current,null),le=c,Ae=0,As=null,xr=!1,Ol=Nc(o,c),V0=!1,_l=Qs=P0=ho=ii=He=0,Ba=ah=null,U0=!1,(c&8)!==0&&(c|=c&32);var g=o.entangledLanes;if(g!==0)for(o=o.entanglements,g&=c;0<g;){var x=31-$s(g),N=1<<x;c|=o[x],g&=~N}return vr=c,Jf(),f}function kC(o,c){Yt=null,O.H=Ma,c===Bc?(c=UN(),Ae=3):c===BN?(c=UN(),Ae=4):Ae=c===VT?8:c!==null&&typeof c=="object"&&typeof c.then=="function"?6:1,As=c,te===null&&(He=1,xp(o,Hs(c,o.current)))}function IC(){var o=O.H;return O.H=Ma,o===null?Ma:o}function EC(){var o=O.A;return O.A=x3,o}function X0(){He=4,xr||(le&4194176)!==le&&Ks.current!==null||(Ol=!0),(ii&134217727)===0&&(ho&134217727)===0||Ee===null||wr(Ee,le,Qs,!1)}function Y0(o,c,f){var g=Be;Be|=2;var x=IC(),N=EC();(Ee!==o||le!==c)&&(kp=null,Fl(o,c)),c=!1;var E=He;t:do try{if(Ae!==0&&te!==null){var z=te,V=As;switch(Ae){case 8:K0(),E=6;break t;case 3:case 2:case 6:Ks.current===null&&(c=!0);var J=Ae;if(Ae=0,As=null,Ll(o,z,V,J),f&&Ol){E=0;break t}break;default:J=Ae,Ae=0,As=null,Ll(o,z,V,J)}}S3(),E=He;break}catch(pt){kC(o,pt)}while(!0);return c&&o.shellSuspendCounter++,fr=oo=null,Be=g,O.H=x,O.A=N,te===null&&(Ee=null,le=0,Jf()),E}function S3(){for(;te!==null;)AC(te)}function N3(o,c){var f=Be;Be|=2;var g=IC(),x=EC();Ee!==o||le!==c?(kp=null,$p=We()+500,Fl(o,c)):Ol=Nc(o,c);t:do try{if(Ae!==0&&te!==null){c=te;var N=As;e:switch(Ae){case 1:Ae=0,As=null,Ll(o,c,N,1);break;case 2:if(VN(N)){Ae=0,As=null,RC(c);break}c=function(){Ae===2&&Ee===o&&(Ae=7),Va(o)},N.then(c,c);break t;case 3:Ae=7;break t;case 4:Ae=5;break t;case 7:VN(N)?(Ae=0,As=null,RC(c)):(Ae=0,As=null,Ll(o,c,N,7));break;case 5:var E=null;switch(te.tag){case 26:E=te.memoizedState;case 5:case 27:var z=te;if(!E||i2(E)){Ae=0,As=null;var V=z.sibling;if(V!==null)te=V;else{var J=z.return;J!==null?(te=J,Ap(J)):te=null}break e}}Ae=0,As=null,Ll(o,c,N,5);break;case 6:Ae=0,As=null,Ll(o,c,N,6);break;case 8:K0(),He=6;break t;default:throw Error(s(462))}}T3();break}catch(pt){kC(o,pt)}while(!0);return fr=oo=null,O.H=g,O.A=x,Be=f,te!==null?0:(Ee=null,le=0,Jf(),He)}function T3(){for(;te!==null&&!Qn();)AC(te)}function AC(o){var c=QT(o.alternate,o,vr);o.memoizedProps=o.pendingProps,c===null?Ap(o):te=c}function RC(o){var c=o,f=c.alternate;switch(c.tag){case 15:case 0:c=jT(f,c,c.pendingProps,c.type,void 0,le);break;case 11:c=jT(f,c,c.pendingProps,c.type.render,c.ref,le);break;case 5:t0(c);default:NC(f,c),c=te=vC(c,vr),c=QT(f,c,vr)}o.memoizedProps=o.pendingProps,c===null?Ap(o):te=c}function Ll(o,c,f,g){fr=oo=null,t0(c),Nl=null,Pc=0;var x=c.return;try{if(d3(o,x,c,f,le)){He=1,xp(o,Hs(f,o.current)),te=null;return}}catch(N){if(x!==null)throw te=x,N;He=1,xp(o,Hs(f,o.current)),te=null;return}c.flags&32768?(fe||g===1?o=!0:Ol||(le&536870912)!==0?o=!1:(xr=o=!0,(g===2||g===3||g===6)&&(g=Ks.current,g!==null&&g.tag===13&&(g.flags|=16384))),DC(c,o)):Ap(c)}function Ap(o){var c=o;do{if((c.flags&32768)!==0){DC(c,xr);return}o=c.return;var f=y3(c.alternate,c,vr);if(f!==null){te=f;return}if(c=c.sibling,c!==null){te=c;return}te=c=o}while(c!==null);He===0&&(He=5)}function DC(o,c){do{var f=b3(o.alternate,o);if(f!==null){f.flags&=32767,te=f;return}if(f=o.return,f!==null&&(f.flags|=32768,f.subtreeFlags=0,f.deletions=null),!c&&(o=o.sibling,o!==null)){te=o;return}te=o=f}while(o!==null);He=6,te=null}function OC(o,c,f,g,x,N,E,z,V,J){var pt=O.T,vt=ut.p;try{ut.p=2,O.T=null,C3(o,c,f,g,vt,x,N,E,z,V,J)}finally{O.T=pt,ut.p=vt}}function C3(o,c,f,g,x,N,E,z){do zl();while(fo!==null);if((Be&6)!==0)throw Error(s(327));var V=o.finishedWork;if(g=o.finishedLanes,V===null)return null;if(o.finishedWork=null,o.finishedLanes=0,V===o.current)throw Error(s(177));o.callbackNode=null,o.callbackPriority=0,o.cancelPendingCommit=null;var J=V.lanes|V.childLanes;if(J|=Bb,sF(o,g,J,N,E,z),o===Ee&&(te=Ee=null,le=0),(V.subtreeFlags&10256)===0&&(V.flags&10256)===0||Ip||(Ip=!0,G0=J,H0=f,E3(Cs,function(){return zl(),null})),f=(V.flags&15990)!==0,(V.subtreeFlags&15990)!==0||f?(f=O.T,O.T=null,N=ut.p,ut.p=2,E=Be,Be|=4,p3(o,V),fC(V,o),XF(lx,o.containerInfo),Up=!!ox,lx=ox=null,o.current=V,uC(o,V.alternate,V),rr(),Be=E,ut.p=N,O.T=f):o.current=V,Ip?(Ip=!1,fo=o,rh=g):_C(o,J),J=o.pendingLanes,J===0&&(oi=null),gb(V.stateNode),Va(o),c!==null)for(x=o.onRecoverableError,V=0;V<c.length;V++)J=c[V],x(J.value,{componentStack:J.stack});return(rh&3)!==0&&zl(),J=o.pendingLanes,(g&4194218)!==0&&(J&42)!==0?o===j0?ih++:(ih=0,j0=o):ih=0,oh(0),null}function _C(o,c){(o.pooledCacheLanes&=c)===0&&(c=o.pooledCache,c!=null&&(o.pooledCache=null,Wc(c)))}function zl(){if(fo!==null){var o=fo,c=G0;G0=0;var f=WS(rh),g=O.T,x=ut.p;try{if(ut.p=32>f?32:f,O.T=null,fo===null)var N=!1;else{f=H0,H0=null;var E=fo,z=rh;if(fo=null,rh=0,(Be&6)!==0)throw Error(s(331));var V=Be;if(Be|=4,bC(E.current),mC(E,E.current,z,f),Be=V,oh(0,!1),Jn&&typeof Jn.onPostCommitFiberRoot=="function")try{Jn.onPostCommitFiberRoot(Fa,E)}catch{}N=!0}return N}finally{ut.p=x,O.T=g,_C(o,c)}}return!1}function FC(o,c,f){c=Hs(f,c),c=p0(o.stateNode,c,2),o=ei(o,c,2),o!==null&&(Tc(o,2),Va(o))}function Ce(o,c,f){if(o.tag===3)FC(o,o,f);else for(;c!==null;){if(c.tag===3){FC(c,o,f);break}else if(c.tag===1){var g=c.stateNode;if(typeof c.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(oi===null||!oi.has(g))){o=Hs(f,o),f=MT(2),g=ei(c,f,2),g!==null&&(BT(f,g,c,o),Tc(g,2),Va(g));break}}c=c.return}}function Z0(o,c,f){var g=o.pingCache;if(g===null){g=o.pingCache=new v3;var x=new Set;g.set(c,x)}else x=g.get(c),x===void 0&&(x=new Set,g.set(c,x));x.has(f)||(V0=!0,x.add(f),o=$3.bind(null,o,c,f),c.then(o,o))}function $3(o,c,f){var g=o.pingCache;g!==null&&g.delete(c),o.pingedLanes|=o.suspendedLanes&f,o.warmLanes&=~f,Ee===o&&(le&f)===f&&(He===4||He===3&&(le&62914560)===le&&300>We()-W0?(Be&2)===0&&Fl(o,0):P0|=f,_l===le&&(_l=0)),Va(o)}function LC(o,c){c===0&&(c=VS()),o=qr(o,c),o!==null&&(Tc(o,c),Va(o))}function k3(o){var c=o.memoizedState,f=0;c!==null&&(f=c.retryLane),LC(o,f)}function I3(o,c){var f=0;switch(o.tag){case 13:var g=o.stateNode,x=o.memoizedState;x!==null&&(f=x.retryLane);break;case 19:g=o.stateNode;break;case 22:g=o.stateNode._retryCache;break;default:throw Error(s(314))}g!==null&&g.delete(c),LC(o,f)}function E3(o,c){return Ue(o,c)}var Rp=null,Ml=null,Q0=!1,Dp=!1,J0=!1,po=0;function Va(o){o!==Ml&&o.next===null&&(Ml===null?Rp=Ml=o:Ml=Ml.next=o),Dp=!0,Q0||(Q0=!0,R3(A3))}function oh(o,c){if(!J0&&Dp){J0=!0;do for(var f=!1,g=Rp;g!==null;){if(o!==0){var x=g.pendingLanes;if(x===0)var N=0;else{var E=g.suspendedLanes,z=g.pingedLanes;N=(1<<31-$s(42|o)+1)-1,N&=x&~(E&~z),N=N&201326677?N&201326677|1:N?N|2:0}N!==0&&(f=!0,BC(g,N))}else N=le,N=Pf(g,g===Ee?N:0),(N&3)===0||Nc(g,N)||(f=!0,BC(g,N));g=g.next}while(f);J0=!1}}function A3(){Dp=Q0=!1;var o=0;po!==0&&(B3()&&(o=po),po=0);for(var c=We(),f=null,g=Rp;g!==null;){var x=g.next,N=zC(g,c);N===0?(g.next=null,f===null?Rp=x:f.next=x,x===null&&(Ml=f)):(f=g,(o!==0||(N&3)!==0)&&(Dp=!0)),g=x}oh(o)}function zC(o,c){for(var f=o.suspendedLanes,g=o.pingedLanes,x=o.expirationTimes,N=o.pendingLanes&-62914561;0<N;){var E=31-$s(N),z=1<<E,V=x[E];V===-1?((z&f)===0||(z&g)!==0)&&(x[E]=nF(z,c)):V<=c&&(o.expiredLanes|=z),N&=~z}if(c=Ee,f=le,f=Pf(o,o===c?f:0),g=o.callbackNode,f===0||o===c&&Ae===2||o.cancelPendingCommit!==null)return g!==null&&g!==null&&Ps(g),o.callbackNode=null,o.callbackPriority=0;if((f&3)===0||Nc(o,f)){if(c=f&-f,c===o.callbackPriority)return c;switch(g!==null&&Ps(g),WS(f)){case 2:case 8:f=ga;break;case 32:f=Cs;break;case 268435456:f=ol;break;default:f=Cs}return g=MC.bind(null,o),f=Ue(f,g),o.callbackPriority=c,o.callbackNode=f,c}return g!==null&&g!==null&&Ps(g),o.callbackPriority=2,o.callbackNode=null,2}function MC(o,c){var f=o.callbackNode;if(zl()&&o.callbackNode!==f)return null;var g=le;return g=Pf(o,o===Ee?g:0),g===0?null:(CC(o,g,c),zC(o,We()),o.callbackNode!=null&&o.callbackNode===f?MC.bind(null,o):null)}function BC(o,c){if(zl())return null;CC(o,c,!0)}function R3(o){P3(function(){(Be&6)!==0?Ue(ma,o):o()})}function tx(){return po===0&&(po=BS()),po}function VC(o){return o==null||typeof o=="symbol"||typeof o=="boolean"?null:typeof o=="function"?o:jf(""+o)}function PC(o,c){var f=c.ownerDocument.createElement("input");return f.name=c.name,f.value=c.value,o.id&&f.setAttribute("form",o.id),c.parentNode.insertBefore(f,c),o=new FormData(o),f.parentNode.removeChild(f),o}function D3(o,c,f,g,x){if(c==="submit"&&f&&f.stateNode===x){var N=VC((x[ds]||null).action),E=g.submitter;E&&(c=(c=E[ds]||null)?VC(c.formAction):E.getAttribute("formAction"),c!==null&&(N=c,E=null));var z=new Yf("action","action",null,g,x);o.push({event:z,listeners:[{instance:null,listener:function(){if(g.defaultPrevented){if(po!==0){var V=E?PC(x,E):new FormData(x);u0(f,{pending:!0,data:V,method:x.method,action:N},null,V)}}else typeof N=="function"&&(z.preventDefault(),V=E?PC(x,E):new FormData(x),u0(f,{pending:!0,data:V,method:x.method,action:N},N,V))},currentTarget:x}]})}}for(var ex=0;ex<ON.length;ex++){var nx=ON[ex],O3=nx.toLowerCase(),_3=nx[0].toUpperCase()+nx.slice(1);ya(O3,"on"+_3)}ya(IN,"onAnimationEnd"),ya(EN,"onAnimationIteration"),ya(AN,"onAnimationStart"),ya("dblclick","onDoubleClick"),ya("focusin","onFocus"),ya("focusout","onBlur"),ya(ZF,"onTransitionRun"),ya(QF,"onTransitionStart"),ya(JF,"onTransitionCancel"),ya(RN,"onTransitionEnd"),hl("onMouseEnter",["mouseout","mouseover"]),hl("onMouseLeave",["mouseout","mouseover"]),hl("onPointerEnter",["pointerout","pointerover"]),hl("onPointerLeave",["pointerout","pointerover"]),Ki("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),Ki("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),Ki("onBeforeInput",["compositionend","keypress","textInput","paste"]),Ki("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),Ki("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),Ki("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lh="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),F3=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(lh));function UC(o,c){c=(c&4)!==0;for(var f=0;f<o.length;f++){var g=o[f],x=g.event;g=g.listeners;t:{var N=void 0;if(c)for(var E=g.length-1;0<=E;E--){var z=g[E],V=z.instance,J=z.currentTarget;if(z=z.listener,V!==N&&x.isPropagationStopped())break t;N=z,x.currentTarget=J;try{N(x)}catch(pt){bp(pt)}x.currentTarget=null,N=V}else for(E=0;E<g.length;E++){if(z=g[E],V=z.instance,J=z.currentTarget,z=z.listener,V!==N&&x.isPropagationStopped())break t;N=z,x.currentTarget=J;try{N(x)}catch(pt){bp(pt)}x.currentTarget=null,N=V}}}}function ie(o,c){var f=c[bb];f===void 0&&(f=c[bb]=new Set);var g=o+"__bubble";f.has(g)||(WC(c,o,2,!1),f.add(g))}function sx(o,c,f){var g=0;c&&(g|=4),WC(f,o,g,c)}var Op="_reactListening"+Math.random().toString(36).slice(2);function ax(o){if(!o[Op]){o[Op]=!0,jS.forEach(function(f){f!=="selectionchange"&&(F3.has(f)||sx(f,!1,o),sx(f,!0,o))});var c=o.nodeType===9?o:o.ownerDocument;c===null||c[Op]||(c[Op]=!0,sx("selectionchange",!1,c))}}function WC(o,c,f,g){switch(d2(c)){case 2:var x=oL;break;case 8:x=lL;break;default:x=yx}f=x.bind(null,c,f,o),x=void 0,!$b||c!=="touchstart"&&c!=="touchmove"&&c!=="wheel"||(x=!0),g?x!==void 0?o.addEventListener(c,f,{capture:!0,passive:x}):o.addEventListener(c,f,!0):x!==void 0?o.addEventListener(c,f,{passive:x}):o.addEventListener(c,f,!1)}function rx(o,c,f,g,x){var N=g;if((c&1)===0&&(c&2)===0&&g!==null)t:for(;;){if(g===null)return;var E=g.tag;if(E===3||E===4){var z=g.stateNode.containerInfo;if(z===x||z.nodeType===8&&z.parentNode===x)break;if(E===4)for(E=g.return;E!==null;){var V=E.tag;if((V===3||V===4)&&(V=E.stateNode.containerInfo,V===x||V.nodeType===8&&V.parentNode===x))return;E=E.return}for(;z!==null;){if(E=qi(z),E===null)return;if(V=E.tag,V===5||V===6||V===26||V===27){g=N=E;continue t}z=z.parentNode}}g=g.return}aN(function(){var J=N,pt=Tb(f),vt=[];t:{var ct=DN.get(o);if(ct!==void 0){var ft=Yf,Ft=o;switch(o){case"keypress":if(Kf(f)===0)break t;case"keydown":case"keyup":ft=IF;break;case"focusin":Ft="focus",ft=Ab;break;case"focusout":Ft="blur",ft=Ab;break;case"beforeblur":case"afterblur":ft=Ab;break;case"click":if(f.button===2)break t;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":ft=oN;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":ft=gF;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":ft=RF;break;case IN:case EN:case AN:ft=xF;break;case RN:ft=OF;break;case"scroll":case"scrollend":ft=pF;break;case"wheel":ft=FF;break;case"copy":case"cut":case"paste":ft=wF;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":ft=uN;break;case"toggle":case"beforetoggle":ft=zF}var Ut=(c&4)!==0,je=!Ut&&(o==="scroll"||o==="scrollend"),st=Ut?ct!==null?ct+"Capture":null:ct;Ut=[];for(var Z=J,it;Z!==null;){var gt=Z;if(it=gt.stateNode,gt=gt.tag,gt!==5&&gt!==26&&gt!==27||it===null||st===null||(gt=kc(Z,st),gt!=null&&Ut.push(uh(Z,gt,it))),je)break;Z=Z.return}0<Ut.length&&(ct=new ft(ct,Ft,null,f,pt),vt.push({event:ct,listeners:Ut}))}}if((c&7)===0){t:{if(ct=o==="mouseover"||o==="pointerover",ft=o==="mouseout"||o==="pointerout",ct&&f!==Nb&&(Ft=f.relatedTarget||f.fromElement)&&(qi(Ft)||Ft[ll]))break t;if((ft||ct)&&(ct=pt.window===pt?pt:(ct=pt.ownerDocument)?ct.defaultView||ct.parentWindow:window,ft?(Ft=f.relatedTarget||f.toElement,ft=J,Ft=Ft?qi(Ft):null,Ft!==null&&(je=Y(Ft),Ut=Ft.tag,Ft!==je||Ut!==5&&Ut!==27&&Ut!==6)&&(Ft=null)):(ft=null,Ft=J),ft!==Ft)){if(Ut=oN,gt="onMouseLeave",st="onMouseEnter",Z="mouse",(o==="pointerout"||o==="pointerover")&&(Ut=uN,gt="onPointerLeave",st="onPointerEnter",Z="pointer"),je=ft==null?ct:$c(ft),it=Ft==null?ct:$c(Ft),ct=new Ut(gt,Z+"leave",ft,f,pt),ct.target=je,ct.relatedTarget=it,gt=null,qi(pt)===J&&(Ut=new Ut(st,Z+"enter",Ft,f,pt),Ut.target=it,Ut.relatedTarget=je,gt=Ut),je=gt,ft&&Ft)e:{for(Ut=ft,st=Ft,Z=0,it=Ut;it;it=Bl(it))Z++;for(it=0,gt=st;gt;gt=Bl(gt))it++;for(;0<Z-it;)Ut=Bl(Ut),Z--;for(;0<it-Z;)st=Bl(st),it--;for(;Z--;){if(Ut===st||st!==null&&Ut===st.alternate)break e;Ut=Bl(Ut),st=Bl(st)}Ut=null}else Ut=null;ft!==null&&GC(vt,ct,ft,Ut,!1),Ft!==null&&je!==null&&GC(vt,je,Ft,Ut,!0)}}t:{if(ct=J?$c(J):window,ft=ct.nodeName&&ct.nodeName.toLowerCase(),ft==="select"||ft==="input"&&ct.type==="file")var Dt=yN;else if(mN(ct))if(bN)Dt=qF;else{Dt=HF;var Qt=GF}else ft=ct.nodeName,!ft||ft.toLowerCase()!=="input"||ct.type!=="checkbox"&&ct.type!=="radio"?J&&Sb(J.elementType)&&(Dt=yN):Dt=jF;if(Dt&&(Dt=Dt(o,J))){gN(vt,Dt,f,pt);break t}Qt&&Qt(o,ct,J),o==="focusout"&&J&&ct.type==="number"&&J.memoizedProps.value!=null&&wb(ct,"number",ct.value)}switch(Qt=J?$c(J):window,o){case"focusin":(mN(Qt)||Qt.contentEditable==="true")&&(yl=Qt,Lb=J,Fc=null);break;case"focusout":Fc=Lb=yl=null;break;case"mousedown":zb=!0;break;case"contextmenu":case"mouseup":case"dragend":zb=!1,$N(vt,f,pt);break;case"selectionchange":if(YF)break;case"keydown":case"keyup":$N(vt,f,pt)}var zt;if(Db)t:{switch(o){case"compositionstart":var Bt="onCompositionStart";break t;case"compositionend":Bt="onCompositionEnd";break t;case"compositionupdate":Bt="onCompositionUpdate";break t}Bt=void 0}else gl?fN(o,f)&&(Bt="onCompositionEnd"):o==="keydown"&&f.keyCode===229&&(Bt="onCompositionStart");Bt&&(cN&&f.locale!=="ko"&&(gl||Bt!=="onCompositionStart"?Bt==="onCompositionEnd"&&gl&&(zt=rN()):(jr=pt,kb="value"in jr?jr.value:jr.textContent,gl=!0)),Qt=_p(J,Bt),0<Qt.length&&(Bt=new lN(Bt,o,null,f,pt),vt.push({event:Bt,listeners:Qt}),zt?Bt.data=zt:(zt=pN(f),zt!==null&&(Bt.data=zt)))),(zt=BF?VF(o,f):PF(o,f))&&(Bt=_p(J,"onBeforeInput"),0<Bt.length&&(Qt=new lN("onBeforeInput","beforeinput",null,f,pt),vt.push({event:Qt,listeners:Bt}),Qt.data=zt)),D3(vt,o,J,f,pt)}UC(vt,c)})}function uh(o,c,f){return{instance:o,listener:c,currentTarget:f}}function _p(o,c){for(var f=c+"Capture",g=[];o!==null;){var x=o,N=x.stateNode;x=x.tag,x!==5&&x!==26&&x!==27||N===null||(x=kc(o,f),x!=null&&g.unshift(uh(o,x,N)),x=kc(o,c),x!=null&&g.push(uh(o,x,N))),o=o.return}return g}function Bl(o){if(o===null)return null;do o=o.return;while(o&&o.tag!==5&&o.tag!==27);return o||null}function GC(o,c,f,g,x){for(var N=c._reactName,E=[];f!==null&&f!==g;){var z=f,V=z.alternate,J=z.stateNode;if(z=z.tag,V!==null&&V===g)break;z!==5&&z!==26&&z!==27||J===null||(V=J,x?(J=kc(f,N),J!=null&&E.unshift(uh(f,J,V))):x||(J=kc(f,N),J!=null&&E.push(uh(f,J,V)))),f=f.return}E.length!==0&&o.push({event:c,listeners:E})}var L3=/\r\n?/g,z3=/\u0000|\uFFFD/g;function HC(o){return(typeof o=="string"?o:""+o).replace(L3,`
`).replace(z3,"")}function jC(o,c){return c=HC(c),HC(o)===c}function Fp(){}function Ne(o,c,f,g,x,N){switch(f){case"children":typeof g=="string"?c==="body"||c==="textarea"&&g===""||fl(o,g):(typeof g=="number"||typeof g=="bigint")&&c!=="body"&&fl(o,""+g);break;case"className":Wf(o,"class",g);break;case"tabIndex":Wf(o,"tabindex",g);break;case"dir":case"role":case"viewBox":case"width":case"height":Wf(o,f,g);break;case"style":nN(o,g,N);break;case"data":if(c!=="object"){Wf(o,"data",g);break}case"src":case"href":if(g===""&&(c!=="a"||f!=="href")){o.removeAttribute(f);break}if(g==null||typeof g=="function"||typeof g=="symbol"||typeof g=="boolean"){o.removeAttribute(f);break}g=jf(""+g),o.setAttribute(f,g);break;case"action":case"formAction":if(typeof g=="function"){o.setAttribute(f,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof N=="function"&&(f==="formAction"?(c!=="input"&&Ne(o,c,"name",x.name,x,null),Ne(o,c,"formEncType",x.formEncType,x,null),Ne(o,c,"formMethod",x.formMethod,x,null),Ne(o,c,"formTarget",x.formTarget,x,null)):(Ne(o,c,"encType",x.encType,x,null),Ne(o,c,"method",x.method,x,null),Ne(o,c,"target",x.target,x,null)));if(g==null||typeof g=="symbol"||typeof g=="boolean"){o.removeAttribute(f);break}g=jf(""+g),o.setAttribute(f,g);break;case"onClick":g!=null&&(o.onclick=Fp);break;case"onScroll":g!=null&&ie("scroll",o);break;case"onScrollEnd":g!=null&&ie("scrollend",o);break;case"dangerouslySetInnerHTML":if(g!=null){if(typeof g!="object"||!("__html"in g))throw Error(s(61));if(f=g.__html,f!=null){if(x.children!=null)throw Error(s(60));o.innerHTML=f}}break;case"multiple":o.multiple=g&&typeof g!="function"&&typeof g!="symbol";break;case"muted":o.muted=g&&typeof g!="function"&&typeof g!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(g==null||typeof g=="function"||typeof g=="boolean"||typeof g=="symbol"){o.removeAttribute("xlink:href");break}f=jf(""+g),o.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",f);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":g!=null&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(f,""+g):o.removeAttribute(f);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":g&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(f,""):o.removeAttribute(f);break;case"capture":case"download":g===!0?o.setAttribute(f,""):g!==!1&&g!=null&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(f,g):o.removeAttribute(f);break;case"cols":case"rows":case"size":case"span":g!=null&&typeof g!="function"&&typeof g!="symbol"&&!isNaN(g)&&1<=g?o.setAttribute(f,g):o.removeAttribute(f);break;case"rowSpan":case"start":g==null||typeof g=="function"||typeof g=="symbol"||isNaN(g)?o.removeAttribute(f):o.setAttribute(f,g);break;case"popover":ie("beforetoggle",o),ie("toggle",o),Uf(o,"popover",g);break;case"xlinkActuate":or(o,"http://www.w3.org/1999/xlink","xlink:actuate",g);break;case"xlinkArcrole":or(o,"http://www.w3.org/1999/xlink","xlink:arcrole",g);break;case"xlinkRole":or(o,"http://www.w3.org/1999/xlink","xlink:role",g);break;case"xlinkShow":or(o,"http://www.w3.org/1999/xlink","xlink:show",g);break;case"xlinkTitle":or(o,"http://www.w3.org/1999/xlink","xlink:title",g);break;case"xlinkType":or(o,"http://www.w3.org/1999/xlink","xlink:type",g);break;case"xmlBase":or(o,"http://www.w3.org/XML/1998/namespace","xml:base",g);break;case"xmlLang":or(o,"http://www.w3.org/XML/1998/namespace","xml:lang",g);break;case"xmlSpace":or(o,"http://www.w3.org/XML/1998/namespace","xml:space",g);break;case"is":Uf(o,"is",g);break;case"innerText":case"textContent":break;default:(!(2<f.length)||f[0]!=="o"&&f[0]!=="O"||f[1]!=="n"&&f[1]!=="N")&&(f=dF.get(f)||f,Uf(o,f,g))}}function ix(o,c,f,g,x,N){switch(f){case"style":nN(o,g,N);break;case"dangerouslySetInnerHTML":if(g!=null){if(typeof g!="object"||!("__html"in g))throw Error(s(61));if(f=g.__html,f!=null){if(x.children!=null)throw Error(s(60));o.innerHTML=f}}break;case"children":typeof g=="string"?fl(o,g):(typeof g=="number"||typeof g=="bigint")&&fl(o,""+g);break;case"onScroll":g!=null&&ie("scroll",o);break;case"onScrollEnd":g!=null&&ie("scrollend",o);break;case"onClick":g!=null&&(o.onclick=Fp);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!qS.hasOwnProperty(f))t:{if(f[0]==="o"&&f[1]==="n"&&(x=f.endsWith("Capture"),c=f.slice(2,x?f.length-7:void 0),N=o[ds]||null,N=N!=null?N[f]:null,typeof N=="function"&&o.removeEventListener(c,N,x),typeof g=="function")){typeof N!="function"&&N!==null&&(f in o?o[f]=null:o.hasAttribute(f)&&o.removeAttribute(f)),o.addEventListener(c,g,x);break t}f in o?o[f]=g:g===!0?o.setAttribute(f,""):Uf(o,f,g)}}}function zn(o,c,f){switch(c){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":ie("error",o),ie("load",o);var g=!1,x=!1,N;for(N in f)if(f.hasOwnProperty(N)){var E=f[N];if(E!=null)switch(N){case"src":g=!0;break;case"srcSet":x=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(s(137,c));default:Ne(o,c,N,E,f,null)}}x&&Ne(o,c,"srcSet",f.srcSet,f,null),g&&Ne(o,c,"src",f.src,f,null);return;case"input":ie("invalid",o);var z=N=E=x=null,V=null,J=null;for(g in f)if(f.hasOwnProperty(g)){var pt=f[g];if(pt!=null)switch(g){case"name":x=pt;break;case"type":E=pt;break;case"checked":V=pt;break;case"defaultChecked":J=pt;break;case"value":N=pt;break;case"defaultValue":z=pt;break;case"children":case"dangerouslySetInnerHTML":if(pt!=null)throw Error(s(137,c));break;default:Ne(o,c,g,pt,f,null)}}QS(o,N,z,V,J,E,x,!1),Gf(o);return;case"select":ie("invalid",o),g=E=N=null;for(x in f)if(f.hasOwnProperty(x)&&(z=f[x],z!=null))switch(x){case"value":N=z;break;case"defaultValue":E=z;break;case"multiple":g=z;default:Ne(o,c,x,z,f,null)}c=N,f=E,o.multiple=!!g,c!=null?dl(o,!!g,c,!1):f!=null&&dl(o,!!g,f,!0);return;case"textarea":ie("invalid",o),N=x=g=null;for(E in f)if(f.hasOwnProperty(E)&&(z=f[E],z!=null))switch(E){case"value":g=z;break;case"defaultValue":x=z;break;case"children":N=z;break;case"dangerouslySetInnerHTML":if(z!=null)throw Error(s(91));break;default:Ne(o,c,E,z,f,null)}tN(o,g,x,N),Gf(o);return;case"option":for(V in f)if(f.hasOwnProperty(V)&&(g=f[V],g!=null))switch(V){case"selected":o.selected=g&&typeof g!="function"&&typeof g!="symbol";break;default:Ne(o,c,V,g,f,null)}return;case"dialog":ie("cancel",o),ie("close",o);break;case"iframe":case"object":ie("load",o);break;case"video":case"audio":for(g=0;g<lh.length;g++)ie(lh[g],o);break;case"image":ie("error",o),ie("load",o);break;case"details":ie("toggle",o);break;case"embed":case"source":case"link":ie("error",o),ie("load",o);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(J in f)if(f.hasOwnProperty(J)&&(g=f[J],g!=null))switch(J){case"children":case"dangerouslySetInnerHTML":throw Error(s(137,c));default:Ne(o,c,J,g,f,null)}return;default:if(Sb(c)){for(pt in f)f.hasOwnProperty(pt)&&(g=f[pt],g!==void 0&&ix(o,c,pt,g,f,void 0));return}}for(z in f)f.hasOwnProperty(z)&&(g=f[z],g!=null&&Ne(o,c,z,g,f,null))}function M3(o,c,f,g){switch(c){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var x=null,N=null,E=null,z=null,V=null,J=null,pt=null;for(ft in f){var vt=f[ft];if(f.hasOwnProperty(ft)&&vt!=null)switch(ft){case"checked":break;case"value":break;case"defaultValue":V=vt;default:g.hasOwnProperty(ft)||Ne(o,c,ft,null,g,vt)}}for(var ct in g){var ft=g[ct];if(vt=f[ct],g.hasOwnProperty(ct)&&(ft!=null||vt!=null))switch(ct){case"type":N=ft;break;case"name":x=ft;break;case"checked":J=ft;break;case"defaultChecked":pt=ft;break;case"value":E=ft;break;case"defaultValue":z=ft;break;case"children":case"dangerouslySetInnerHTML":if(ft!=null)throw Error(s(137,c));break;default:ft!==vt&&Ne(o,c,ct,ft,g,vt)}}vb(o,E,z,V,J,pt,N,x);return;case"select":ft=E=z=ct=null;for(N in f)if(V=f[N],f.hasOwnProperty(N)&&V!=null)switch(N){case"value":break;case"multiple":ft=V;default:g.hasOwnProperty(N)||Ne(o,c,N,null,g,V)}for(x in g)if(N=g[x],V=f[x],g.hasOwnProperty(x)&&(N!=null||V!=null))switch(x){case"value":ct=N;break;case"defaultValue":z=N;break;case"multiple":E=N;default:N!==V&&Ne(o,c,x,N,g,V)}c=z,f=E,g=ft,ct!=null?dl(o,!!f,ct,!1):!!g!=!!f&&(c!=null?dl(o,!!f,c,!0):dl(o,!!f,f?[]:"",!1));return;case"textarea":ft=ct=null;for(z in f)if(x=f[z],f.hasOwnProperty(z)&&x!=null&&!g.hasOwnProperty(z))switch(z){case"value":break;case"children":break;default:Ne(o,c,z,null,g,x)}for(E in g)if(x=g[E],N=f[E],g.hasOwnProperty(E)&&(x!=null||N!=null))switch(E){case"value":ct=x;break;case"defaultValue":ft=x;break;case"children":break;case"dangerouslySetInnerHTML":if(x!=null)throw Error(s(91));break;default:x!==N&&Ne(o,c,E,x,g,N)}JS(o,ct,ft);return;case"option":for(var Ft in f)if(ct=f[Ft],f.hasOwnProperty(Ft)&&ct!=null&&!g.hasOwnProperty(Ft))switch(Ft){case"selected":o.selected=!1;break;default:Ne(o,c,Ft,null,g,ct)}for(V in g)if(ct=g[V],ft=f[V],g.hasOwnProperty(V)&&ct!==ft&&(ct!=null||ft!=null))switch(V){case"selected":o.selected=ct&&typeof ct!="function"&&typeof ct!="symbol";break;default:Ne(o,c,V,ct,g,ft)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var Ut in f)ct=f[Ut],f.hasOwnProperty(Ut)&&ct!=null&&!g.hasOwnProperty(Ut)&&Ne(o,c,Ut,null,g,ct);for(J in g)if(ct=g[J],ft=f[J],g.hasOwnProperty(J)&&ct!==ft&&(ct!=null||ft!=null))switch(J){case"children":case"dangerouslySetInnerHTML":if(ct!=null)throw Error(s(137,c));break;default:Ne(o,c,J,ct,g,ft)}return;default:if(Sb(c)){for(var je in f)ct=f[je],f.hasOwnProperty(je)&&ct!==void 0&&!g.hasOwnProperty(je)&&ix(o,c,je,void 0,g,ct);for(pt in g)ct=g[pt],ft=f[pt],!g.hasOwnProperty(pt)||ct===ft||ct===void 0&&ft===void 0||ix(o,c,pt,ct,g,ft);return}}for(var st in f)ct=f[st],f.hasOwnProperty(st)&&ct!=null&&!g.hasOwnProperty(st)&&Ne(o,c,st,null,g,ct);for(vt in g)ct=g[vt],ft=f[vt],!g.hasOwnProperty(vt)||ct===ft||ct==null&&ft==null||Ne(o,c,vt,ct,g,ft)}var ox=null,lx=null;function Lp(o){return o.nodeType===9?o:o.ownerDocument}function qC(o){switch(o){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function KC(o,c){if(o===0)switch(c){case"svg":return 1;case"math":return 2;default:return 0}return o===1&&c==="foreignObject"?0:o}function ux(o,c){return o==="textarea"||o==="noscript"||typeof c.children=="string"||typeof c.children=="number"||typeof c.children=="bigint"||typeof c.dangerouslySetInnerHTML=="object"&&c.dangerouslySetInnerHTML!==null&&c.dangerouslySetInnerHTML.__html!=null}var cx=null;function B3(){var o=window.event;return o&&o.type==="popstate"?o===cx?!1:(cx=o,!0):(cx=null,!1)}var XC=typeof setTimeout=="function"?setTimeout:void 0,V3=typeof clearTimeout=="function"?clearTimeout:void 0,YC=typeof Promise=="function"?Promise:void 0,P3=typeof queueMicrotask=="function"?queueMicrotask:typeof YC<"u"?function(o){return YC.resolve(null).then(o).catch(U3)}:XC;function U3(o){setTimeout(function(){throw o})}function hx(o,c){var f=c,g=0;do{var x=f.nextSibling;if(o.removeChild(f),x&&x.nodeType===8)if(f=x.data,f==="/$"){if(g===0){o.removeChild(x),yh(c);return}g--}else f!=="$"&&f!=="$?"&&f!=="$!"||g++;f=x}while(f);yh(c)}function dx(o){var c=o.firstChild;for(c&&c.nodeType===10&&(c=c.nextSibling);c;){var f=c;switch(c=c.nextSibling,f.nodeName){case"HTML":case"HEAD":case"BODY":dx(f),xb(f);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(f.rel.toLowerCase()==="stylesheet")continue}o.removeChild(f)}}function W3(o,c,f,g){for(;o.nodeType===1;){var x=f;if(o.nodeName.toLowerCase()!==c.toLowerCase()){if(!g&&(o.nodeName!=="INPUT"||o.type!=="hidden"))break}else if(g){if(!o[Cc])switch(c){case"meta":if(!o.hasAttribute("itemprop"))break;return o;case"link":if(N=o.getAttribute("rel"),N==="stylesheet"&&o.hasAttribute("data-precedence"))break;if(N!==x.rel||o.getAttribute("href")!==(x.href==null?null:x.href)||o.getAttribute("crossorigin")!==(x.crossOrigin==null?null:x.crossOrigin)||o.getAttribute("title")!==(x.title==null?null:x.title))break;return o;case"style":if(o.hasAttribute("data-precedence"))break;return o;case"script":if(N=o.getAttribute("src"),(N!==(x.src==null?null:x.src)||o.getAttribute("type")!==(x.type==null?null:x.type)||o.getAttribute("crossorigin")!==(x.crossOrigin==null?null:x.crossOrigin))&&N&&o.hasAttribute("async")&&!o.hasAttribute("itemprop"))break;return o;default:return o}}else if(c==="input"&&o.type==="hidden"){var N=x.name==null?null:""+x.name;if(x.type==="hidden"&&o.getAttribute("name")===N)return o}else return o;if(o=va(o.nextSibling),o===null)break}return null}function G3(o,c,f){if(c==="")return null;for(;o.nodeType!==3;)if((o.nodeType!==1||o.nodeName!=="INPUT"||o.type!=="hidden")&&!f||(o=va(o.nextSibling),o===null))return null;return o}function va(o){for(;o!=null;o=o.nextSibling){var c=o.nodeType;if(c===1||c===3)break;if(c===8){if(c=o.data,c==="$"||c==="$!"||c==="$?"||c==="F!"||c==="F")break;if(c==="/$")return null}}return o}function ZC(o){o=o.previousSibling;for(var c=0;o;){if(o.nodeType===8){var f=o.data;if(f==="$"||f==="$!"||f==="$?"){if(c===0)return o;c--}else f==="/$"&&c++}o=o.previousSibling}return null}function QC(o,c,f){switch(c=Lp(f),o){case"html":if(o=c.documentElement,!o)throw Error(s(452));return o;case"head":if(o=c.head,!o)throw Error(s(453));return o;case"body":if(o=c.body,!o)throw Error(s(454));return o;default:throw Error(s(451))}}var Js=new Map,JC=new Set;function zp(o){return typeof o.getRootNode=="function"?o.getRootNode():o.ownerDocument}var Sr=ut.d;ut.d={f:H3,r:j3,D:q3,C:K3,L:X3,m:Y3,X:Q3,S:Z3,M:J3};function H3(){var o=Sr.f(),c=Ep();return o||c}function j3(o){var c=ul(o);c!==null&&c.tag===5&&c.type==="form"?$T(c):Sr.r(o)}var Vl=typeof document>"u"?null:document;function t2(o,c,f){var g=Vl;if(g&&typeof c=="string"&&c){var x=Ws(c);x='link[rel="'+o+'"][href="'+x+'"]',typeof f=="string"&&(x+='[crossorigin="'+f+'"]'),JC.has(x)||(JC.add(x),o={rel:o,crossOrigin:f,href:c},g.querySelector(x)===null&&(c=g.createElement("link"),zn(c,"link",o),Sn(c),g.head.appendChild(c)))}}function q3(o){Sr.D(o),t2("dns-prefetch",o,null)}function K3(o,c){Sr.C(o,c),t2("preconnect",o,c)}function X3(o,c,f){Sr.L(o,c,f);var g=Vl;if(g&&o&&c){var x='link[rel="preload"][as="'+Ws(c)+'"]';c==="image"&&f&&f.imageSrcSet?(x+='[imagesrcset="'+Ws(f.imageSrcSet)+'"]',typeof f.imageSizes=="string"&&(x+='[imagesizes="'+Ws(f.imageSizes)+'"]')):x+='[href="'+Ws(o)+'"]';var N=x;switch(c){case"style":N=Pl(o);break;case"script":N=Ul(o)}Js.has(N)||(o=_({rel:"preload",href:c==="image"&&f&&f.imageSrcSet?void 0:o,as:c},f),Js.set(N,o),g.querySelector(x)!==null||c==="style"&&g.querySelector(ch(N))||c==="script"&&g.querySelector(hh(N))||(c=g.createElement("link"),zn(c,"link",o),Sn(c),g.head.appendChild(c)))}}function Y3(o,c){Sr.m(o,c);var f=Vl;if(f&&o){var g=c&&typeof c.as=="string"?c.as:"script",x='link[rel="modulepreload"][as="'+Ws(g)+'"][href="'+Ws(o)+'"]',N=x;switch(g){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":N=Ul(o)}if(!Js.has(N)&&(o=_({rel:"modulepreload",href:o},c),Js.set(N,o),f.querySelector(x)===null)){switch(g){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(f.querySelector(hh(N)))return}g=f.createElement("link"),zn(g,"link",o),Sn(g),f.head.appendChild(g)}}}function Z3(o,c,f){Sr.S(o,c,f);var g=Vl;if(g&&o){var x=cl(g).hoistableStyles,N=Pl(o);c=c||"default";var E=x.get(N);if(!E){var z={loading:0,preload:null};if(E=g.querySelector(ch(N)))z.loading=5;else{o=_({rel:"stylesheet",href:o,"data-precedence":c},f),(f=Js.get(N))&&fx(o,f);var V=E=g.createElement("link");Sn(V),zn(V,"link",o),V._p=new Promise(function(J,pt){V.onload=J,V.onerror=pt}),V.addEventListener("load",function(){z.loading|=1}),V.addEventListener("error",function(){z.loading|=2}),z.loading|=4,Mp(E,c,g)}E={type:"stylesheet",instance:E,count:1,state:z},x.set(N,E)}}}function Q3(o,c){Sr.X(o,c);var f=Vl;if(f&&o){var g=cl(f).hoistableScripts,x=Ul(o),N=g.get(x);N||(N=f.querySelector(hh(x)),N||(o=_({src:o,async:!0},c),(c=Js.get(x))&&px(o,c),N=f.createElement("script"),Sn(N),zn(N,"link",o),f.head.appendChild(N)),N={type:"script",instance:N,count:1,state:null},g.set(x,N))}}function J3(o,c){Sr.M(o,c);var f=Vl;if(f&&o){var g=cl(f).hoistableScripts,x=Ul(o),N=g.get(x);N||(N=f.querySelector(hh(x)),N||(o=_({src:o,async:!0,type:"module"},c),(c=Js.get(x))&&px(o,c),N=f.createElement("script"),Sn(N),zn(N,"link",o),f.head.appendChild(N)),N={type:"script",instance:N,count:1,state:null},g.set(x,N))}}function e2(o,c,f,g){var x=(x=ae.current)?zp(x):null;if(!x)throw Error(s(446));switch(o){case"meta":case"title":return null;case"style":return typeof f.precedence=="string"&&typeof f.href=="string"?(c=Pl(f.href),f=cl(x).hoistableStyles,g=f.get(c),g||(g={type:"style",instance:null,count:0,state:null},f.set(c,g)),g):{type:"void",instance:null,count:0,state:null};case"link":if(f.rel==="stylesheet"&&typeof f.href=="string"&&typeof f.precedence=="string"){o=Pl(f.href);var N=cl(x).hoistableStyles,E=N.get(o);if(E||(x=x.ownerDocument||x,E={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},N.set(o,E),(N=x.querySelector(ch(o)))&&!N._p&&(E.instance=N,E.state.loading=5),Js.has(o)||(f={rel:"preload",as:"style",href:f.href,crossOrigin:f.crossOrigin,integrity:f.integrity,media:f.media,hrefLang:f.hrefLang,referrerPolicy:f.referrerPolicy},Js.set(o,f),N||tL(x,o,f,E.state))),c&&g===null)throw Error(s(528,""));return E}if(c&&g!==null)throw Error(s(529,""));return null;case"script":return c=f.async,f=f.src,typeof f=="string"&&c&&typeof c!="function"&&typeof c!="symbol"?(c=Ul(f),f=cl(x).hoistableScripts,g=f.get(c),g||(g={type:"script",instance:null,count:0,state:null},f.set(c,g)),g):{type:"void",instance:null,count:0,state:null};default:throw Error(s(444,o))}}function Pl(o){return'href="'+Ws(o)+'"'}function ch(o){return'link[rel="stylesheet"]['+o+"]"}function n2(o){return _({},o,{"data-precedence":o.precedence,precedence:null})}function tL(o,c,f,g){o.querySelector('link[rel="preload"][as="style"]['+c+"]")?g.loading=1:(c=o.createElement("link"),g.preload=c,c.addEventListener("load",function(){return g.loading|=1}),c.addEventListener("error",function(){return g.loading|=2}),zn(c,"link",f),Sn(c),o.head.appendChild(c))}function Ul(o){return'[src="'+Ws(o)+'"]'}function hh(o){return"script[async]"+o}function s2(o,c,f){if(c.count++,c.instance===null)switch(c.type){case"style":var g=o.querySelector('style[data-href~="'+Ws(f.href)+'"]');if(g)return c.instance=g,Sn(g),g;var x=_({},f,{"data-href":f.href,"data-precedence":f.precedence,href:null,precedence:null});return g=(o.ownerDocument||o).createElement("style"),Sn(g),zn(g,"style",x),Mp(g,f.precedence,o),c.instance=g;case"stylesheet":x=Pl(f.href);var N=o.querySelector(ch(x));if(N)return c.state.loading|=4,c.instance=N,Sn(N),N;g=n2(f),(x=Js.get(x))&&fx(g,x),N=(o.ownerDocument||o).createElement("link"),Sn(N);var E=N;return E._p=new Promise(function(z,V){E.onload=z,E.onerror=V}),zn(N,"link",g),c.state.loading|=4,Mp(N,f.precedence,o),c.instance=N;case"script":return N=Ul(f.src),(x=o.querySelector(hh(N)))?(c.instance=x,Sn(x),x):(g=f,(x=Js.get(N))&&(g=_({},f),px(g,x)),o=o.ownerDocument||o,x=o.createElement("script"),Sn(x),zn(x,"link",g),o.head.appendChild(x),c.instance=x);case"void":return null;default:throw Error(s(443,c.type))}else c.type==="stylesheet"&&(c.state.loading&4)===0&&(g=c.instance,c.state.loading|=4,Mp(g,f.precedence,o));return c.instance}function Mp(o,c,f){for(var g=f.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),x=g.length?g[g.length-1]:null,N=x,E=0;E<g.length;E++){var z=g[E];if(z.dataset.precedence===c)N=z;else if(N!==x)break}N?N.parentNode.insertBefore(o,N.nextSibling):(c=f.nodeType===9?f.head:f,c.insertBefore(o,c.firstChild))}function fx(o,c){o.crossOrigin==null&&(o.crossOrigin=c.crossOrigin),o.referrerPolicy==null&&(o.referrerPolicy=c.referrerPolicy),o.title==null&&(o.title=c.title)}function px(o,c){o.crossOrigin==null&&(o.crossOrigin=c.crossOrigin),o.referrerPolicy==null&&(o.referrerPolicy=c.referrerPolicy),o.integrity==null&&(o.integrity=c.integrity)}var Bp=null;function a2(o,c,f){if(Bp===null){var g=new Map,x=Bp=new Map;x.set(f,g)}else x=Bp,g=x.get(f),g||(g=new Map,x.set(f,g));if(g.has(o))return g;for(g.set(o,null),f=f.getElementsByTagName(o),x=0;x<f.length;x++){var N=f[x];if(!(N[Cc]||N[Pn]||o==="link"&&N.getAttribute("rel")==="stylesheet")&&N.namespaceURI!=="http://www.w3.org/2000/svg"){var E=N.getAttribute(c)||"";E=o+E;var z=g.get(E);z?z.push(N):g.set(E,[N])}}return g}function r2(o,c,f){o=o.ownerDocument||o,o.head.insertBefore(f,c==="title"?o.querySelector("head > title"):null)}function eL(o,c,f){if(f===1||c.itemProp!=null)return!1;switch(o){case"meta":case"title":return!0;case"style":if(typeof c.precedence!="string"||typeof c.href!="string"||c.href==="")break;return!0;case"link":if(typeof c.rel!="string"||typeof c.href!="string"||c.href===""||c.onLoad||c.onError)break;switch(c.rel){case"stylesheet":return o=c.disabled,typeof c.precedence=="string"&&o==null;default:return!0}case"script":if(c.async&&typeof c.async!="function"&&typeof c.async!="symbol"&&!c.onLoad&&!c.onError&&c.src&&typeof c.src=="string")return!0}return!1}function i2(o){return!(o.type==="stylesheet"&&(o.state.loading&3)===0)}var dh=null;function nL(){}function sL(o,c,f){if(dh===null)throw Error(s(475));var g=dh;if(c.type==="stylesheet"&&(typeof f.media!="string"||matchMedia(f.media).matches!==!1)&&(c.state.loading&4)===0){if(c.instance===null){var x=Pl(f.href),N=o.querySelector(ch(x));if(N){o=N._p,o!==null&&typeof o=="object"&&typeof o.then=="function"&&(g.count++,g=Vp.bind(g),o.then(g,g)),c.state.loading|=4,c.instance=N,Sn(N);return}N=o.ownerDocument||o,f=n2(f),(x=Js.get(x))&&fx(f,x),N=N.createElement("link"),Sn(N);var E=N;E._p=new Promise(function(z,V){E.onload=z,E.onerror=V}),zn(N,"link",f),c.instance=N}g.stylesheets===null&&(g.stylesheets=new Map),g.stylesheets.set(c,o),(o=c.state.preload)&&(c.state.loading&3)===0&&(g.count++,c=Vp.bind(g),o.addEventListener("load",c),o.addEventListener("error",c))}}function aL(){if(dh===null)throw Error(s(475));var o=dh;return o.stylesheets&&o.count===0&&mx(o,o.stylesheets),0<o.count?function(c){var f=setTimeout(function(){if(o.stylesheets&&mx(o,o.stylesheets),o.unsuspend){var g=o.unsuspend;o.unsuspend=null,g()}},6e4);return o.unsuspend=c,function(){o.unsuspend=null,clearTimeout(f)}}:null}function Vp(){if(this.count--,this.count===0){if(this.stylesheets)mx(this,this.stylesheets);else if(this.unsuspend){var o=this.unsuspend;this.unsuspend=null,o()}}}var Pp=null;function mx(o,c){o.stylesheets=null,o.unsuspend!==null&&(o.count++,Pp=new Map,c.forEach(rL,o),Pp=null,Vp.call(o))}function rL(o,c){if(!(c.state.loading&4)){var f=Pp.get(o);if(f)var g=f.get(null);else{f=new Map,Pp.set(o,f);for(var x=o.querySelectorAll("link[data-precedence],style[data-precedence]"),N=0;N<x.length;N++){var E=x[N];(E.nodeName==="LINK"||E.getAttribute("media")!=="not all")&&(f.set(E.dataset.precedence,E),g=E)}g&&f.set(null,g)}x=c.instance,E=x.getAttribute("data-precedence"),N=f.get(E)||g,N===g&&f.set(null,x),f.set(E,x),this.count++,g=Vp.bind(this),x.addEventListener("load",g),x.addEventListener("error",g),N?N.parentNode.insertBefore(x,N.nextSibling):(o=o.nodeType===9?o.head:o,o.insertBefore(x,o.firstChild)),c.state.loading|=4}}var fh={$$typeof:y,Provider:null,Consumer:null,_currentValue:mt,_currentValue2:mt,_threadCount:0};function iL(o,c,f,g,x,N,E,z){this.tag=1,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=yb(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=yb(0),this.hiddenUpdates=yb(null),this.identifierPrefix=g,this.onUncaughtError=x,this.onCaughtError=N,this.onRecoverableError=E,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=z,this.incompleteTransitions=new Map}function o2(o,c,f,g,x,N,E,z,V,J,pt,vt){return o=new iL(o,c,f,E,z,V,J,vt),c=1,N===!0&&(c|=24),N=Zs(3,null,null,c),o.current=N,N.stateNode=o,c=qb(),c.refCount++,o.pooledCache=c,c.refCount++,N.memoizedState={element:g,isDehydrated:f,cache:c},k0(N),o}function l2(o){return o?(o=vl,o):vl}function u2(o,c,f,g,x,N){x=l2(x),g.context===null?g.context=x:g.pendingContext=x,g=ti(c),g.payload={element:f},N=N===void 0?null:N,N!==null&&(g.callback=N),f=ei(o,g,c),f!==null&&(es(f,o,c),Yc(f,o,c))}function c2(o,c){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var f=o.retryLane;o.retryLane=f!==0&&f<c?f:c}}function gx(o,c){c2(o,c),(o=o.alternate)&&c2(o,c)}function h2(o){if(o.tag===13){var c=qr(o,67108864);c!==null&&es(c,o,67108864),gx(o,67108864)}}var Up=!0;function oL(o,c,f,g){var x=O.T;O.T=null;var N=ut.p;try{ut.p=2,yx(o,c,f,g)}finally{ut.p=N,O.T=x}}function lL(o,c,f,g){var x=O.T;O.T=null;var N=ut.p;try{ut.p=8,yx(o,c,f,g)}finally{ut.p=N,O.T=x}}function yx(o,c,f,g){if(Up){var x=bx(g);if(x===null)rx(o,c,g,Wp,f),f2(o,g);else if(cL(x,o,c,f,g))g.stopPropagation();else if(f2(o,g),c&4&&-1<uL.indexOf(o)){for(;x!==null;){var N=ul(x);if(N!==null)switch(N.tag){case 3:if(N=N.stateNode,N.current.memoizedState.isDehydrated){var E=ji(N.pendingLanes);if(E!==0){var z=N;for(z.pendingLanes|=2,z.entangledLanes|=2;E;){var V=1<<31-$s(E);z.entanglements[1]|=V,E&=~V}Va(N),(Be&6)===0&&($p=We()+500,oh(0))}}break;case 13:z=qr(N,2),z!==null&&es(z,N,2),Ep(),gx(N,2)}if(N=bx(g),N===null&&rx(o,c,g,Wp,f),N===x)break;x=N}x!==null&&g.stopPropagation()}else rx(o,c,g,null,f)}}function bx(o){return o=Tb(o),xx(o)}var Wp=null;function xx(o){if(Wp=null,o=qi(o),o!==null){var c=Y(o);if(c===null)o=null;else{var f=c.tag;if(f===13){if(o=rt(c),o!==null)return o;o=null}else if(f===3){if(c.stateNode.current.memoizedState.isDehydrated)return c.tag===3?c.stateNode.containerInfo:null;o=null}else c!==o&&(o=null)}}return Wp=o,null}function d2(o){switch(o){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(pa()){case ma:return 2;case ga:return 8;case Cs:case Hi:return 32;case ol:return 268435456;default:return 32}default:return 32}}var vx=!1,li=null,ui=null,ci=null,ph=new Map,mh=new Map,hi=[],uL="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function f2(o,c){switch(o){case"focusin":case"focusout":li=null;break;case"dragenter":case"dragleave":ui=null;break;case"mouseover":case"mouseout":ci=null;break;case"pointerover":case"pointerout":ph.delete(c.pointerId);break;case"gotpointercapture":case"lostpointercapture":mh.delete(c.pointerId)}}function gh(o,c,f,g,x,N){return o===null||o.nativeEvent!==N?(o={blockedOn:c,domEventName:f,eventSystemFlags:g,nativeEvent:N,targetContainers:[x]},c!==null&&(c=ul(c),c!==null&&h2(c)),o):(o.eventSystemFlags|=g,c=o.targetContainers,x!==null&&c.indexOf(x)===-1&&c.push(x),o)}function cL(o,c,f,g,x){switch(c){case"focusin":return li=gh(li,o,c,f,g,x),!0;case"dragenter":return ui=gh(ui,o,c,f,g,x),!0;case"mouseover":return ci=gh(ci,o,c,f,g,x),!0;case"pointerover":var N=x.pointerId;return ph.set(N,gh(ph.get(N)||null,o,c,f,g,x)),!0;case"gotpointercapture":return N=x.pointerId,mh.set(N,gh(mh.get(N)||null,o,c,f,g,x)),!0}return!1}function p2(o){var c=qi(o.target);if(c!==null){var f=Y(c);if(f!==null){if(c=f.tag,c===13){if(c=rt(f),c!==null){o.blockedOn=c,aF(o.priority,function(){if(f.tag===13){var g=Rs(),x=qr(f,g);x!==null&&es(x,f,g),gx(f,g)}});return}}else if(c===3&&f.stateNode.current.memoizedState.isDehydrated){o.blockedOn=f.tag===3?f.stateNode.containerInfo:null;return}}}o.blockedOn=null}function Gp(o){if(o.blockedOn!==null)return!1;for(var c=o.targetContainers;0<c.length;){var f=bx(o.nativeEvent);if(f===null){f=o.nativeEvent;var g=new f.constructor(f.type,f);Nb=g,f.target.dispatchEvent(g),Nb=null}else return c=ul(f),c!==null&&h2(c),o.blockedOn=f,!1;c.shift()}return!0}function m2(o,c,f){Gp(o)&&f.delete(c)}function hL(){vx=!1,li!==null&&Gp(li)&&(li=null),ui!==null&&Gp(ui)&&(ui=null),ci!==null&&Gp(ci)&&(ci=null),ph.forEach(m2),mh.forEach(m2)}function Hp(o,c){o.blockedOn===c&&(o.blockedOn=null,vx||(vx=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,hL)))}var jp=null;function g2(o){jp!==o&&(jp=o,n.unstable_scheduleCallback(n.unstable_NormalPriority,function(){jp===o&&(jp=null);for(var c=0;c<o.length;c+=3){var f=o[c],g=o[c+1],x=o[c+2];if(typeof g!="function"){if(xx(g||f)===null)continue;break}var N=ul(f);N!==null&&(o.splice(c,3),c-=3,u0(N,{pending:!0,data:x,method:f.method,action:g},g,x))}}))}function yh(o){function c(V){return Hp(V,o)}li!==null&&Hp(li,o),ui!==null&&Hp(ui,o),ci!==null&&Hp(ci,o),ph.forEach(c),mh.forEach(c);for(var f=0;f<hi.length;f++){var g=hi[f];g.blockedOn===o&&(g.blockedOn=null)}for(;0<hi.length&&(f=hi[0],f.blockedOn===null);)p2(f),f.blockedOn===null&&hi.shift();if(f=(o.ownerDocument||o).$$reactFormReplay,f!=null)for(g=0;g<f.length;g+=3){var x=f[g],N=f[g+1],E=x[ds]||null;if(typeof N=="function")E||g2(f);else if(E){var z=null;if(N&&N.hasAttribute("formAction")){if(x=N,E=N[ds]||null)z=E.formAction;else if(xx(x)!==null)continue}else z=E.action;typeof z=="function"?f[g+1]=z:(f.splice(g,3),g-=3),g2(f)}}}function wx(o){this._internalRoot=o}qp.prototype.render=wx.prototype.render=function(o){var c=this._internalRoot;if(c===null)throw Error(s(409));var f=c.current,g=Rs();u2(f,g,o,c,null,null)},qp.prototype.unmount=wx.prototype.unmount=function(){var o=this._internalRoot;if(o!==null){this._internalRoot=null;var c=o.containerInfo;o.tag===0&&zl(),u2(o.current,2,null,o,null,null),Ep(),c[ll]=null}};function qp(o){this._internalRoot=o}qp.prototype.unstable_scheduleHydration=function(o){if(o){var c=GS();o={blockedOn:null,target:o,priority:c};for(var f=0;f<hi.length&&c!==0&&c<hi[f].priority;f++);hi.splice(f,0,o),f===0&&p2(o)}};var y2=t.version;if(y2!=="19.0.0")throw Error(s(527,y2,"19.0.0"));ut.findDOMNode=function(o){var c=o._reactInternals;if(c===void 0)throw typeof o.render=="function"?Error(s(188)):(o=Object.keys(o).join(","),Error(s(268,o)));return o=q(c),o=o!==null?lt(o):null,o=o===null?null:o.stateNode,o};var dL={bundleType:0,version:"19.0.0",rendererPackageName:"react-dom",currentDispatcherRef:O,findFiberByHostInstance:qi,reconcilerVersion:"19.0.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Kp=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Kp.isDisabled&&Kp.supportsFiber)try{Fa=Kp.inject(dL),Jn=Kp}catch{}}return xh.createRoot=function(o,c){if(!a(o))throw Error(s(299));var f=!1,g="",x=_T,N=FT,E=LT,z=null;return c!=null&&(c.unstable_strictMode===!0&&(f=!0),c.identifierPrefix!==void 0&&(g=c.identifierPrefix),c.onUncaughtError!==void 0&&(x=c.onUncaughtError),c.onCaughtError!==void 0&&(N=c.onCaughtError),c.onRecoverableError!==void 0&&(E=c.onRecoverableError),c.unstable_transitionCallbacks!==void 0&&(z=c.unstable_transitionCallbacks)),c=o2(o,1,!1,null,null,f,g,x,N,E,z,null),o[ll]=c.current,ax(o.nodeType===8?o.parentNode:o),new wx(c)},xh.hydrateRoot=function(o,c,f){if(!a(o))throw Error(s(299));var g=!1,x="",N=_T,E=FT,z=LT,V=null,J=null;return f!=null&&(f.unstable_strictMode===!0&&(g=!0),f.identifierPrefix!==void 0&&(x=f.identifierPrefix),f.onUncaughtError!==void 0&&(N=f.onUncaughtError),f.onCaughtError!==void 0&&(E=f.onCaughtError),f.onRecoverableError!==void 0&&(z=f.onRecoverableError),f.unstable_transitionCallbacks!==void 0&&(V=f.unstable_transitionCallbacks),f.formState!==void 0&&(J=f.formState)),c=o2(o,1,!0,c,f??null,g,x,N,E,z,V,J),c.context=l2(null),f=c.current,g=Rs(),x=ti(g),x.callback=null,ei(f,x,g),c.current.lanes=g,Tc(c,g),Va(c),o[ll]=c.current,ax(o),new qp(c)},xh.version="19.0.0",xh}var k2;function TL(){if(k2)return Tx.exports;k2=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(t){console.error(t)}}return n(),Tx.exports=NL(),Tx.exports}var CL=TL();function $L(){return ce.jsxs("div",{className:"header",children:[ce.jsx("img",{src:"src/assets/Images/muscle_icon.png",alt:"Muscle Icon",width:"50",heigh:"50"}),ce.jsx("h1",{children:"PeakForm"})]})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kL=1e-7,IL=1e-4;class Y1{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class tg{refCount(t){return ms("refCount")}incRef(t){return ms("incRef")}timerAvailable(){return!0}time(t){return ms("time")}read(t){return ms("read")}readSync(t){return ms("readSync")}readToGPU(t,e){return ms("readToGPU")}numDataIds(){return ms("numDataIds")}disposeData(t,e){return ms("disposeData")}write(t,e,s){return ms("write")}move(t,e,s,a,r){return ms("move")}createTensorFromGPUData(t,e,s){return ms("createTensorFromGPUData")}memory(){return ms("memory")}floatPrecision(){return ms("floatPrecision")}epsilon(){return this.floatPrecision()===32?kL:IL}dispose(){return ms("dispose")}}function ms(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z1(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,$r(n,t,e)}function EL(n,t){if(n.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${t.length}`);let e=n.length,s=0;for(;e>0;)s=Math.random()*e|0,e--,$r(n,e,s),$r(t,e,s)}function Si(n,t,e){return Math.max(n,Math.min(t,e))}function eg(n){return n%2===0?n:n+1}function $r(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function _k(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function AL(n,t){const e=Math.random();return t*e+(1-e)*n}function RL(n,t){let e=0;for(let s=0;s<n.length;s++){const a=Number(n[s])-Number(t[s]);e+=a*a}return e}function D(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function An(n,t,e=""){D(Zt(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function qo(n){D(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ht(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function DL(n){return n.length===0}function Fk(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==null&&t[e]!==null&&n[e]!==t[e])return!1;return!0}function Zt(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Oo(n){return n%1===0}function OL(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const t=Math.exp(2*n);return(t-1)/(t+1)}}function Nm(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function _L(n){const t=new Uint32Array(n);for(let e=0;e<n;++e)t[e]=e;return Z1(t),t}function ko(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function Qx(n,t=a=>0,e,s){return new Promise((a,r)=>{let i=0;const l=()=>{if(n()){a();return}i++;const u=t(i);if(e!=null&&i>=e){r();return}s!=null?s(l,u):setTimeout(l,u)};l()})}function Q1(n,t){let e=1,s=-1;for(let r=0;r<n.length;++r)if(n[r]>=0)e*=n[r];else if(n[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(n[r]<0)throw Error(`Shapes can not be < 0. Found ${n[r]} at dim ${r}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const a=n.slice();return a[s]=t/e,a}function Kt(n,t){const e=t.length;return n=n==null?t.map((s,a)=>a):[].concat(n),D(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),D(n.every(s=>Oo(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function _r(n,t){const e=[],s=[],a=t!=null&&Array.isArray(t)&&t.length===0,r=t==null||a?null:Kt(t,n).sort();let i=0;for(let l=0;l<n.length;++l){if(r!=null){if(r[i]===l&&n[l]!==1)throw new Error(`Can't squeeze axis ${l} since its dim '${n[l]}' is not 1`);(r[i]==null||r[i]>l)&&n[l]===1&&(e.push(n[l]),s.push(l)),r[i]<=l&&i++}n[l]!==1&&(e.push(n[l]),s.push(l))}return{newShape:e,keptDims:s}}function bn(n,t){return Ve(n,t)}function Ve(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function Lk(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function zk(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function J1(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function Rh(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function Mk(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function Ga(n){return typeof n=="string"||n instanceof String}function Bk(n){return typeof n=="boolean"}function Tm(n){return typeof n=="number"}function Ko(n){return Array.isArray(n)?Ko(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Tm(n)?"float32":Ga(n)?"string":Bk(n)?"bool":"float32"}function Ni(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Cm(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function Lt(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function Vk(n,t,e,s=!1){const a=new Array;if(t.length===1){const r=t[0]*(s?2:1);for(let i=0;i<r;i++)a[i]=e[n+i]}else{const r=t[0],i=t.slice(1),l=i.reduce((u,h)=>u*h)*(s?2:1);for(let u=0;u<r;u++)a[u]=Vk(n+u*l,i,e,s)}return a}function Ls(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((a,r)=>a*r)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return Vk(0,n,t,e)}function Pk(n,t){if(Array.isArray(n))return n;if(t==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(t==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function ng(n,t){const e=En(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function En(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function tv(n,t){const e=n.reduce((s,a)=>s*a,1);if(t==null||t==="float32")return Ls(n,new Float32Array(e));if(t==="int32")return Ls(n,new Int32Array(e));if(t==="bool")return Ls(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Ns(n){n.forEach(t=>{D(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function $a(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let a=0;a<n.length-1;++a)s+=e[a]*n[a];return s}function Xo(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let a=0;a<s.length-1;++a)s[a]=Math.floor(n/e[a]),n-=s[a]*e[a];return s[s.length-1]=n,s}function Ti(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I2="tfjsflags";class Uk{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=FL,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(at().getBool("IS_TEST")||at().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const a=this.urlFlags[t];at().getBool("IS_TEST")||at().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${a}.`),this.set(t,a)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Ti(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);I2 in t&&t[I2].split(",").forEach(s=>{const[a,r]=s.split(":");this.urlFlags[a]=zL(a,r)})}}function FL(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(LL(t,s[0],s[1]),s.join("="))),t}function LL(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function zL(n,t){const e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function at(){return ev}let ev=null;function ML(n){ev=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ix;function Wk(){if(Ix==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Ix=n}return Ix}function BL(){const n=Wk();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function nv(n,t){const e=BL();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Zh="Abs",hu="Acos",du="Acosh",Yo="Add",Qh="AddN",sg="All",ag="Any",Jh="ArgMax",td="ArgMin",fu="Asin",pu="Asinh",mu="Atan",gu="Atanh",yu="Atan2",ed="AvgPool",rg="AvgPoolGrad",nd="AvgPool3D",ig="AvgPool3DGrad",sd="BatchMatMul",ad="BatchToSpaceND",og="Bincount",rd="BitwiseAnd",Gk="BroadcastTo",lg="BroadcastArgs",bu="Cast",xu="Ceil",vu="ClipByValue",ug="Complex",id="ComplexAbs",od="Concat",ld="Conv2D",cg="Conv2DBackpropFilter",ud="Conv2DBackpropInput",cd="Conv3D",hg="Conv3DBackpropFilterV2",dg="Conv3DBackpropInputV2",wu="Cos",Su="Cosh",fg="Cumprod",hd="Cumsum",pg="CropAndResize",mg="DenseBincount",gg="DepthToSpace",dd="DepthwiseConv2dNative",yg="DepthwiseConv2dNativeBackpropFilter",bg="DepthwiseConv2dNativeBackpropInput",xg="Diag",fd="Dilation2D",$m="Dilation2DBackpropInput",km="Dilation2DBackpropFilter",vg="Draw",Nu="RealDiv",wg="Einsum",Tu="Elu",Sg="EluGrad",Cu="Erf",pd="Equal",$u="Exp",md="ExpandDims",ku="Expm1",Ng="FFT",Tg="Fill",Cg="FlipLeftRight",Iu="Floor",Eu="FloorDiv",gd="FusedBatchNorm",yd="GatherV2",$g="GatherNd",bd="Greater",Au="GreaterEqual",Ru="Identity",kg="IFFT",Ig="Imag",Du="IsFinite",Ou="IsInf",_u="IsNan",xd="LeakyRelu",vd="Less",wd="LessEqual",Eg="LinSpace",Fu="Log",Lu="Log1p",Sd="LogicalAnd",Nd="LogicalNot",Td="LogicalOr",VL="LogicalXor",Hk="LogSoftmax",PL="LowerBound",Cd="LRN",Ag="LRNGrad",UL="MatrixBandPart",$d="Max",zu="Maximum",kd="MaxPool",Rg="MaxPoolGrad",Id="MaxPool3D",Dg="MaxPool3DGrad",Og="MaxPoolWithArgmax",Ed="Mean",Ad="Min",Mu="Minimum",Rd="MirrorPad",Bu="Mod",_g="Multinomial",Vu="Multiply",Dd="Neg",Od="NotEqual",Fg="NonMaxSuppressionV3",Lg="NonMaxSuppressionV4",zg="NonMaxSuppressionV5",_d="OnesLike",Fd="OneHot",Ld="Pack",zd="PadV2",WL="Pool",Pu="Pow",Md="Prelu",Bd="Prod",Mg="RaggedGather",Bg="RaggedRange",Vg="RaggedTensorToTensor",Pg="Range",Ug="Real",Uu="Reciprocal",Wu="Relu",Vd="Reshape",Pd="ResizeNearestNeighbor",Wg="ResizeNearestNeighborGrad",Ud="ResizeBilinear",Gg="ResizeBilinearGrad",Gu="Relu6",Wd="Reverse",Hu="Round",ju="Rsqrt",Hg="ScatterNd",jg="TensorScatterUpdate",qg="SearchSorted",Gd="Select",qu="Selu",Hd="Slice",Ku="Sin",Xu="Sinh",Yu="Sign",Zu="Sigmoid",Qu="Softplus",Ju="Sqrt",jd="Sum",qd="SpaceToBatchND",Kd="SplitV",Xd="Softmax",Kg="SparseFillEmptyRows",Xg="SparseReshape",Yg="SparseSegmentMean",Zg="SparseSegmentSum",Qg="SparseToDense",tc="SquaredDifference",Jg="Square",Yd="StaticRegexReplace",ty="StridedSlice",ey="StringNGrams",ny="StringSplit",sy="StringToHashBucketFast",ec="Sub",nc="Tan",sc="Tanh",ac="Tile",ay="TopK",ry="Transform",Io="Transpose",iy="Unique",Zd="Unpack",Qd="UnsortedSegmentSum",GL="UpperBound",Jd="ZerosLike",rc="Step",Im="FromPixels",oy="RotateWithOffset",Dh="_FusedMatMul",Oh="FusedConv2D",_h="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ds(...n){at().getBool("IS_TEST")||at().getBool("PROD")||console.warn(...n)}function HL(...n){at().getBool("IS_TEST")||at().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zl=nv("kernelRegistry",()=>new Map),Fh=nv("gradRegistry",()=>new Map);function Lh(n,t){const e=sv(n,t);return Zl.get(e)}function Jx(n){return Fh.get(n)}function Em(n){const t=Zl.entries(),e=[];for(;;){const{done:s,value:a}=t.next();if(s)break;const[r,i]=a,[l]=r.split("_");l===n&&e.push(i)}return e}function ly(n){const{kernelName:t,backendName:e}=n,s=sv(t,e);Zl.has(s)&&Ds(`The kernel '${t}' for backend '${e}' is already registered`),Zl.set(s,n)}function jk(n){const{kernelName:t}=n;Fh.has(t)&&at().getBool("DEBUG")&&Ds(`Overriding the gradient for '${t}'`),Fh.set(t,n)}function jL(n,t){const e=sv(n,t);if(!Zl.has(e))throw new Error(`The kernel '${n}' for backend '${t}' is not registered`);Zl.delete(e)}function qL(n){if(!Fh.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Fh.delete(n)}function KL(n,t){Em(n).forEach(s=>{const a=Object.assign({},s,{backendName:t});ly(a)})}function sv(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Ex,E2;function XL(){if(E2)return Ex;E2=1,Ex=t;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function t(_,A,G){this.low=_|0,this.high=A|0,this.unsigned=!!G}t.prototype.__isLong__,Object.defineProperty(t.prototype,"__isLong__",{value:!0});function e(_){return(_&&_.__isLong__)===!0}t.isLong=e;var s={},a={};function r(_,A){var G,X,tt;return A?(_>>>=0,(tt=0<=_&&_<256)&&(X=a[_],X)?X:(G=l(_,(_|0)<0?-1:0,!0),tt&&(a[_]=G),G)):(_|=0,(tt=-128<=_&&_<128)&&(X=s[_],X)?X:(G=l(_,_<0?-1:0,!1),tt&&(s[_]=G),G))}t.fromInt=r;function i(_,A){if(isNaN(_))return A?T:S;if(A){if(_<0)return T;if(_>=b)return L}else{if(_<=-9223372036854776e3)return M;if(_+1>=v)return R}return _<0?i(-_,A).neg():l(_%y|0,_/y|0,A)}t.fromNumber=i;function l(_,A,G){return new t(_,A,G)}t.fromBits=l;var u=Math.pow;function h(_,A,G){if(_.length===0)throw Error("empty string");if(_==="NaN"||_==="Infinity"||_==="+Infinity"||_==="-Infinity")return S;if(typeof A=="number"?(G=A,A=!1):A=!!A,G=G||10,G<2||36<G)throw RangeError("radix");var X;if((X=_.indexOf("-"))>0)throw Error("interior hyphen");if(X===0)return h(_.substring(1),A,G).neg();for(var tt=i(u(G,8)),Q=S,U=0;U<_.length;U+=8){var et=Math.min(8,_.length-U),Y=parseInt(_.substring(U,U+et),G);if(et<8){var rt=i(u(G,et));Q=Q.mul(rt).add(i(Y))}else Q=Q.mul(tt),Q=Q.add(i(Y))}return Q.unsigned=A,Q}t.fromString=h;function d(_,A){return typeof _=="number"?i(_,A):typeof _=="string"?h(_,A):l(_.low,_.high,typeof A=="boolean"?A:_.unsigned)}t.fromValue=d;var p=65536,m=1<<24,y=p*p,b=y*y,v=b/2,w=r(m),S=r(0);t.ZERO=S;var T=r(0,!0);t.UZERO=T;var $=r(1);t.ONE=$;var C=r(1,!0);t.UONE=C;var I=r(-1);t.NEG_ONE=I;var R=l(-1,2147483647,!1);t.MAX_VALUE=R;var L=l(-1,-1,!0);t.MAX_UNSIGNED_VALUE=L;var M=l(0,-2147483648,!1);t.MIN_VALUE=M;var O=t.prototype;return O.toInt=function(){return this.unsigned?this.low>>>0:this.low},O.toNumber=function(){return this.unsigned?(this.high>>>0)*y+(this.low>>>0):this.high*y+(this.low>>>0)},O.toString=function(A){if(A=A||10,A<2||36<A)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(M)){var G=i(A),X=this.div(G),tt=X.mul(G).sub(this);return X.toString(A)+tt.toInt().toString(A)}else return"-"+this.neg().toString(A);for(var Q=i(u(A,6),this.unsigned),U=this,et="";;){var Y=U.div(Q),rt=U.sub(Y.mul(Q)).toInt()>>>0,B=rt.toString(A);if(U=Y,U.isZero())return B+et;for(;B.length<6;)B="0"+B;et=""+B+et}},O.getHighBits=function(){return this.high},O.getHighBitsUnsigned=function(){return this.high>>>0},O.getLowBits=function(){return this.low},O.getLowBitsUnsigned=function(){return this.low>>>0},O.getNumBitsAbs=function(){if(this.isNegative())return this.eq(M)?64:this.neg().getNumBitsAbs();for(var A=this.high!=0?this.high:this.low,G=31;G>0&&(A&1<<G)==0;G--);return this.high!=0?G+33:G+1},O.isZero=function(){return this.high===0&&this.low===0},O.eqz=O.isZero,O.isNegative=function(){return!this.unsigned&&this.high<0},O.isPositive=function(){return this.unsigned||this.high>=0},O.isOdd=function(){return(this.low&1)===1},O.isEven=function(){return(this.low&1)===0},O.equals=function(A){return e(A)||(A=d(A)),this.unsigned!==A.unsigned&&this.high>>>31===1&&A.high>>>31===1?!1:this.high===A.high&&this.low===A.low},O.eq=O.equals,O.notEquals=function(A){return!this.eq(A)},O.neq=O.notEquals,O.ne=O.notEquals,O.lessThan=function(A){return this.comp(A)<0},O.lt=O.lessThan,O.lessThanOrEqual=function(A){return this.comp(A)<=0},O.lte=O.lessThanOrEqual,O.le=O.lessThanOrEqual,O.greaterThan=function(A){return this.comp(A)>0},O.gt=O.greaterThan,O.greaterThanOrEqual=function(A){return this.comp(A)>=0},O.gte=O.greaterThanOrEqual,O.ge=O.greaterThanOrEqual,O.compare=function(A){if(e(A)||(A=d(A)),this.eq(A))return 0;var G=this.isNegative(),X=A.isNegative();return G&&!X?-1:!G&&X?1:this.unsigned?A.high>>>0>this.high>>>0||A.high===this.high&&A.low>>>0>this.low>>>0?-1:1:this.sub(A).isNegative()?-1:1},O.comp=O.compare,O.negate=function(){return!this.unsigned&&this.eq(M)?M:this.not().add($)},O.neg=O.negate,O.add=function(A){e(A)||(A=d(A));var G=this.high>>>16,X=this.high&65535,tt=this.low>>>16,Q=this.low&65535,U=A.high>>>16,et=A.high&65535,Y=A.low>>>16,rt=A.low&65535,B=0,q=0,lt=0,ot=0;return ot+=Q+rt,lt+=ot>>>16,ot&=65535,lt+=tt+Y,q+=lt>>>16,lt&=65535,q+=X+et,B+=q>>>16,q&=65535,B+=G+U,B&=65535,l(lt<<16|ot,B<<16|q,this.unsigned)},O.subtract=function(A){return e(A)||(A=d(A)),this.add(A.neg())},O.sub=O.subtract,O.multiply=function(A){if(this.isZero())return S;if(e(A)||(A=d(A)),n){var G=n.mul(this.low,this.high,A.low,A.high);return l(G,n.get_high(),this.unsigned)}if(A.isZero())return S;if(this.eq(M))return A.isOdd()?M:S;if(A.eq(M))return this.isOdd()?M:S;if(this.isNegative())return A.isNegative()?this.neg().mul(A.neg()):this.neg().mul(A).neg();if(A.isNegative())return this.mul(A.neg()).neg();if(this.lt(w)&&A.lt(w))return i(this.toNumber()*A.toNumber(),this.unsigned);var X=this.high>>>16,tt=this.high&65535,Q=this.low>>>16,U=this.low&65535,et=A.high>>>16,Y=A.high&65535,rt=A.low>>>16,B=A.low&65535,q=0,lt=0,ot=0,ut=0;return ut+=U*B,ot+=ut>>>16,ut&=65535,ot+=Q*B,lt+=ot>>>16,ot&=65535,ot+=U*rt,lt+=ot>>>16,ot&=65535,lt+=tt*B,q+=lt>>>16,lt&=65535,lt+=Q*rt,q+=lt>>>16,lt&=65535,lt+=U*Y,q+=lt>>>16,lt&=65535,q+=X*B+tt*rt+Q*Y+U*et,q&=65535,l(ot<<16|ut,q<<16|lt,this.unsigned)},O.mul=O.multiply,O.divide=function(A){if(e(A)||(A=d(A)),A.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&A.low===-1&&A.high===-1)return this;var G=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,A.low,A.high);return l(G,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?T:S;var X,tt,Q;if(this.unsigned){if(A.unsigned||(A=A.toUnsigned()),A.gt(this))return T;if(A.gt(this.shru(1)))return C;Q=T}else{if(this.eq(M)){if(A.eq($)||A.eq(I))return M;if(A.eq(M))return $;var U=this.shr(1);return X=U.div(A).shl(1),X.eq(S)?A.isNegative()?$:I:(tt=this.sub(A.mul(X)),Q=X.add(tt.div(A)),Q)}else if(A.eq(M))return this.unsigned?T:S;if(this.isNegative())return A.isNegative()?this.neg().div(A.neg()):this.neg().div(A).neg();if(A.isNegative())return this.div(A.neg()).neg();Q=S}for(tt=this;tt.gte(A);){X=Math.max(1,Math.floor(tt.toNumber()/A.toNumber()));for(var et=Math.ceil(Math.log(X)/Math.LN2),Y=et<=48?1:u(2,et-48),rt=i(X),B=rt.mul(A);B.isNegative()||B.gt(tt);)X-=Y,rt=i(X,this.unsigned),B=rt.mul(A);rt.isZero()&&(rt=$),Q=Q.add(rt),tt=tt.sub(B)}return Q},O.div=O.divide,O.modulo=function(A){if(e(A)||(A=d(A)),n){var G=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,A.low,A.high);return l(G,n.get_high(),this.unsigned)}return this.sub(this.div(A).mul(A))},O.mod=O.modulo,O.rem=O.modulo,O.not=function(){return l(~this.low,~this.high,this.unsigned)},O.and=function(A){return e(A)||(A=d(A)),l(this.low&A.low,this.high&A.high,this.unsigned)},O.or=function(A){return e(A)||(A=d(A)),l(this.low|A.low,this.high|A.high,this.unsigned)},O.xor=function(A){return e(A)||(A=d(A)),l(this.low^A.low,this.high^A.high,this.unsigned)},O.shiftLeft=function(A){return e(A)&&(A=A.toInt()),(A&=63)===0?this:A<32?l(this.low<<A,this.high<<A|this.low>>>32-A,this.unsigned):l(0,this.low<<A-32,this.unsigned)},O.shl=O.shiftLeft,O.shiftRight=function(A){return e(A)&&(A=A.toInt()),(A&=63)===0?this:A<32?l(this.low>>>A|this.high<<32-A,this.high>>A,this.unsigned):l(this.high>>A-32,this.high>=0?0:-1,this.unsigned)},O.shr=O.shiftRight,O.shiftRightUnsigned=function(A){if(e(A)&&(A=A.toInt()),A&=63,A===0)return this;var G=this.high;if(A<32){var X=this.low;return l(X>>>A|G<<32-A,G>>>A,this.unsigned)}else return A===32?l(G,0,this.unsigned):l(G>>>A-32,0,this.unsigned)},O.shru=O.shiftRightUnsigned,O.shr_u=O.shiftRightUnsigned,O.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},O.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},O.toBytes=function(A){return A?this.toBytesLE():this.toBytesBE()},O.toBytesLE=function(){var A=this.high,G=this.low;return[G&255,G>>>8&255,G>>>16&255,G>>>24,A&255,A>>>8&255,A>>>16&255,A>>>24]},O.toBytesBE=function(){var A=this.high,G=this.low;return[A>>>24,A>>>16&255,A>>>8&255,A&255,G>>>24,G>>>16&255,G>>>8&255,G&255]},t.fromBytes=function(A,G,X){return X?t.fromBytesLE(A,G):t.fromBytesBE(A,G)},t.fromBytesLE=function(A,G){return new t(A[0]|A[1]<<8|A[2]<<16|A[3]<<24,A[4]|A[5]<<8|A[6]<<16|A[7]<<24,G)},t.fromBytesBE=function(A,G){return new t(A[4]<<24|A[5]<<16|A[6]<<8|A[7],A[0]<<24|A[1]<<16|A[2]<<8|A[3],G)},Ex}var Kk=XL();const Xk=Ok(Kk),YL=pL({__proto__:null,default:Xk},[Kk]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vo=Xk||YL;function tf(n){return vo.fromString(n,!0,16)}const Yk=tf("c3a5c85c97cb3127"),bo=tf("b492b66fbe98f273"),jn=tf("9ae16a3b2f90404f");function t1(n){return n.xor(n.shru(47))}function Zk(n,t,e){const s=n.slice(t,t+e);return vo.fromBytes(Array.from(s),!0,!0)}function $e(n,t){return Zk(n,t,8)}function A2(n,t){return Zk(n,t,4)}function mn(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function yi(n,t,e=tf("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let a=t.xor(s).mul(e);return a=a.xor(a.shru(47)),a=a.mul(e),a}function ZL(n,t,e,s,a,r){a=a.add(n),r=mn(r.add(a).add(s),21);const i=a;return a=a.add(t),a=a.add(e),r=r.add(mn(a,44)),[a.add(s),r.add(i)]}function Xp(n,t,e,s){return ZL($e(n,t),$e(n,t+8),$e(n,t+16),$e(n,t+24),e,s)}function QL(n,t=n.length){if(t>=8){const e=jn.add(t*2),s=$e(n,0).add(jn),a=$e(n,t-8),r=mn(a,37).mul(e).add(s),i=mn(s,25).add(a).mul(e);return yi(r,i,e)}if(t>=4){const e=jn.add(t*2),s=A2(n,0);return yi(s.shl(3).add(t),A2(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],a=n[t-1],r=e+(s<<8),i=t+(a<<2);return t1(jn.mul(r).xor(Yk.mul(i))).mul(jn)}return jn}function JL(n,t=n.length){const e=jn.add(t*2),s=$e(n,0).mul(bo),a=$e(n,8),r=$e(n,t-8).mul(e),i=$e(n,t-16).mul(jn);return yi(mn(s.add(a),43).add(mn(r,30)).add(i),s.add(mn(a.add(jn),18)).add(r),e)}function tz(n,t=n.length){const e=jn.add(t*2),s=$e(n,0).mul(jn),a=$e(n,8),r=$e(n,t-8).mul(e),i=$e(n,t-16).mul(jn),l=mn(s.add(a),43).add(mn(r,30)).add(i),u=yi(l,s.add(mn(a.add(jn),18)).add(r),e),h=$e(n,16).mul(e),d=$e(n,24),p=l.add($e(n,t-32)).mul(e),m=u.add($e(n,t-24)).mul(e);return yi(mn(h.add(d),43).add(mn(p,30)).add(m),h.add(mn(d.add(s),18)).add(p),e)}function Qk(n,t=n.length){const e=vo.fromNumber(81,!0);if(t<=32)return t<=16?QL(n,t):JL(n,t);if(t<=64)return tz(n,t);let s=e,a=e.mul(bo).add(113),r=t1(a.mul(jn).add(113)).mul(jn),i=[vo.UZERO,vo.UZERO],l=[vo.UZERO,vo.UZERO];s=s.mul(jn).add($e(n,0));let u=0;const h=(t-1>>6)*64,d=h+(t-1&63)-63;do s=mn(s.add(a).add(i[0]).add($e(n,u+8)),37).mul(bo),a=mn(a.add(i[1]).add($e(n,u+48)),42).mul(bo),s=s.xor(l[1]),a=a.add(i[0]).add($e(n,u+40)),r=mn(r.add(l[0]),33).mul(bo),i=Xp(n,u,i[1].mul(bo),s.add(l[0])),l=Xp(n,u+32,r.add(l[1]),a.add($e(n,u+16))),[r,s]=[s,r],u+=64;while(u!==h);const p=bo.add(r.and(255).shl(1));return u=d,l[0]=l[0].add(t-1&63),i[0]=i[0].add(l[0]),l[0]=l[0].add(i[0]),s=mn(s.add(a).add(i[0]).add($e(n,u+8)),37).mul(p),a=mn(a.add(i[1]).add($e(n,u+48)),42).mul(p),s=s.xor(l[1].mul(9)),a=a.add(i[0].mul(9).add($e(n,u+40))),r=mn(r.add(l[0]),33).mul(p),i=Xp(n,u,i[1].mul(p),s.add(l[0])),l=Xp(n,u+32,r.add(l[1]),a.add($e(n,u+16))),[r,s]=[s,r],yi(yi(i[0],l[0],p).add(t1(a).mul(Yk)).add(r),yi(i[1],l[1],p).add(s),p)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fr(n,t){return t==="string"?ja(n):Fi([n],t)}function ez(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function Fi(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Za(n)),at().getBool("DEBUG")&&Lk(n,t),ez(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Gn(){return at().platform.now()}function nz(n,t){return at().platform.fetch(n,t)}function ja(n,t="utf-8"){return t=t||"utf-8",at().platform.encode(n,t)}function Er(n,t="utf-8"){return t=t||"utf-8",at().platform.decode(n,t)}function gn(n){return at().platform.isTypedArray!=null?at().platform.isTypedArray(n):qk(n)}function Za(n,t=[],e=!1){if(t==null&&(t=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Ti(n)||n==null||gn(n)&&e)t.push(n);else if(Array.isArray(n)||gn(n))for(let s=0;s<n.length;++s)Za(n[s],t,e);else{let s=-1;for(const a of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(a)&&(s=Math.max(s,Number(a)));for(let a=0;a<=s;a++)Za(n[a],t,e)}return t}const sz=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:Zt,arraysEqualWithNull:Fk,assert:D,assertNonNegativeIntegerDimensions:Ns,assertNonNull:qo,assertShapesMatch:An,bytesFromStringArray:Mk,bytesPerElement:Rh,checkConversionForErrors:Lk,clamp:Si,computeStrides:Lt,convertBackendValuesAndArrayBuffer:Pk,createScalarValue:Fr,createShuffledIndices:_L,decodeString:Er,distSquared:RL,encodeString:ja,fetch:nz,fingerPrint64:Qk,flatten:Za,getArrayFromDType:Ve,getTypedArrayFromDType:bn,hasEncodingLoss:J1,hexToLong:tf,indexToLoc:Xo,inferDtype:Ko,inferFromImplicitShape:Q1,isBoolean:Bk,isFunction:Ni,isInt:Oo,isNumber:Tm,isPromise:Ti,isScalarShape:DL,isString:Ga,isTypedArray:gn,isValidDtype:zk,locToIndex:$a,makeOnesTypedArray:ng,makeZerosNestedTypedArray:tv,makeZerosTypedArray:En,nearestDivisor:Cm,nearestLargerEven:eg,now:Gn,parseAxisParam:Kt,randUniform:AL,repeatedTry:Qx,rightPad:ko,shuffle:Z1,shuffleCombo:EL,sizeFromShape:ht,sizeToSquarishShape:Nm,squeezeShape:_r,sum:_k,swap:$r,tanh:OL,toNestedArray:Ls,toTypedArray:Fi},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class az{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new iz)}profileKernel(t,e,s){let a;const r=()=>{a=s()};let i;const l=Gn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const h of a)h.dataSync();i=Promise.resolve({kernelMs:Gn()-l})}if(at().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let h=0;h<a.length;h++){const d=a[h];d.data().then(p=>{rz(p,d.dtype,t)})}return{kernelName:t,outputs:a,inputs:e,timeMs:i.then(h=>h.kernelMs),extraInfo:i.then(h=>h.getExtraProfileInfo!=null?h.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:a,inputs:r,extraInfo:i}=t;s.forEach(l=>{Promise.all([l.data(),a,i]).then(u=>{this.logger.logKernelProfile(e,l,u[0],u[1],r,u[2])})})}}function rz(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const a=n[s];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${e}'`),!0}return!1}class iz{logKernelProfile(t,e,s,a,r,i){const l=typeof a=="number"?ko(`${a}ms`,9):a.error,u=ko(t,25),h=e.rank,d=e.size,p=ko(e.shape.toString(),14);let m="";for(const y in r){const b=r[y];if(b!=null){const v=b.shape||e.shape,w=v.length;m+=`${y}: ${w}D ${w>0?v:""} `}}console.log(`%c${u}	%c${l}	%c${h}D ${p}	%c${d}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oz(n,t,e){const s={},a={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<n.length;u++){const h=n[u],d=h.inputs;for(const p in d){const m=d[p];let y=!1;for(let b=0;b<t.length;b++)if(s[m.id]){h.outputs.forEach(v=>s[v.id]=!0),y=!0,a[h.id]=!0;break}if(y)break}}const r={};r[e.id]=!0;const i={};for(let u=n.length-1;u>=0;u--){const h=n[u],d=h.inputs;for(let p=0;p<h.outputs.length;p++)if(r[h.outputs[p].id]){for(const m in d)r[d[m].id]=!0,i[h.id]=!0;break}}const l=[];for(let u=0;u<n.length;u++){const h=n[u];if(a[h.id]&&i[h.id]){const d={};for(const m in h.inputs){const y=h.inputs[m];s[y.id]&&(d[m]=y)}const p=Object.assign({},h);p.inputs=d,p.outputs=h.outputs,l.push(p)}}return l}function lz(n,t,e,s){for(let a=t.length-1;a>=0;a--){const r=t[a],i=[];if(r.outputs.forEach(u=>{const h=n[u.id];h!=null?i.push(h):i.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const l=r.gradient(i);for(const u in r.inputs){if(!(u in l))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(l)}.`);const h=e(()=>l[u]());if(h.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${h.dtype}'`);const d=r.inputs[u];if(!Zt(h.shape,d.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${u}' has shape '${h.shape}', which does not match the shape of the input '${d.shape}'`);if(n[d.id]==null)n[d.id]=h;else{const p=n[d.id];n[d.id]=s(p,h),p.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R2=20,vh=3,Ax=7;function uz(n,t,e,s){const a=Lt(t),r=cz(n,t,e,a),i=t.length,l=hm(n,t,e,a,r),u=["Tensor"];return s&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(l.map(h=>"    "+h).join(`
`)),u.join(`
`)}function cz(n,t,e,s){const a=ht(t),r=s[s.length-1],i=new Array(r).fill(0),l=t.length,u=e==="complex64"?Ch(n):n;if(l>1)for(let h=0;h<a/r;h++){const d=h*r;for(let p=0;p<r;p++)i[p]=Math.max(i[p],Th(u[d+p],0,e).length)}return i}function Th(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Ax))} + ${parseFloat(n[1].toFixed(Ax))}j`:Ga(n)?s=`'${n}'`:e==="bool"?s=Jk(n):s=parseFloat(n.toFixed(Ax)).toString(),ko(s,t)}function Jk(n){return n===0?"false":"true"}function hm(n,t,e,s,a,r=!0){const i=e==="complex64"?2:1,l=t[0],u=t.length;if(u===0){if(e==="complex64"){const v=Ch(n);return[Th(v[0],0,e)]}return e==="bool"?[Jk(n[0])]:[n[0].toString()]}if(u===1){if(l>R2){const w=vh*i;let S=Array.from(n.slice(0,w)),T=Array.from(n.slice((l-vh)*i,l*i));return e==="complex64"&&(S=Ch(S),T=Ch(T)),["["+S.map(($,C)=>Th($,a[C],e)).join(", ")+", ..., "+T.map(($,C)=>Th($,a[l-vh+C],e)).join(", ")+"]"]}return["["+(e==="complex64"?Ch(n):Array.from(n)).map((w,S)=>Th(w,a[S],e)).join(", ")+"]"]}const h=t.slice(1),d=s.slice(1),p=s[0]*i,m=[];if(l>R2){for(let v=0;v<vh;v++){const w=v*p,S=w+p;m.push(...hm(n.slice(w,S),h,e,d,a,!1))}m.push("...");for(let v=l-vh;v<l;v++){const w=v*p,S=w+p;m.push(...hm(n.slice(w,S),h,e,d,a,v===l-1))}}else for(let v=0;v<l;v++){const w=v*p,S=w+p;m.push(...hm(n.slice(w,S),h,e,d,a,v===l-1))}const y=u===2?",":"";m[0]="["+(l>0?m[0]+y:"");for(let v=1;v<m.length-1;v++)m[v]=" "+m[v]+y;let b=`,
`;for(let v=2;v<u;v++)b+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(r?"":b),m}function Ch(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tn{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=ht(t),s!=null){const a=s.length;D(a===this.size,()=>`Length of values '${a}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ve(e,this.size),this.strides=Lt(t)}set(t,...e){e.length===0&&(e=[0]),D(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const a of t){if(a<0||a>=this.shape[e]){const r=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(r)}e++}let s=t[t.length-1];for(let a=0;a<t.length-1;++a)s+=this.strides[a]*t[a];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Ta().makeTensor(this.values,this.shape,this.dtype)}}let Ta=null,Hl=null;function hz(n){Ta=n}function dz(n){Hl=n}class he{constructor(t,e,s,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ht(t),this.strides=Lt(t),this.dataId=s,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Hl.buffer(this.shape,this.dtype,t)}bufferSync(){return Hl.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Ls(this.shape,t,this.dtype==="complex64")}arraySync(){return Ls(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=Ta().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>Er(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Ta().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Ta().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Er(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Ta().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Ta().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Hl.print(this,t)}clone(){return this.throwIfDisposed(),Hl.clone(this)}toString(t=!1){const e=this.dataSync();return uz(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Hl.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),Ta().makeVariable(this,t,e,s)}}Object.defineProperty(he,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function dt(){return nv("Tensor",()=>he)}dt();class zh extends he{constructor(t,e,s,a){super(t.shape,t.dtype,t.dataId,a),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Zt(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Ta().disposeTensor(this),this.dataId=t.dataId,Ta().incRef(this,null)}dispose(){Ta().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(zh,Symbol.hasInstance,{value:n=>n instanceof he&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var e1;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(e1||(e1={}));var n1;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(n1||(n1={}));var s1;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(s1||(s1={}));var a1;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(a1||(a1={}));var r1;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(r1||(r1={}));const fz={float32:a1,int32:n1,bool:s1,complex64:r1};function rs(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return fz[n][t]}function uy(n){return rs(n,"int32")}function tI(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function eI(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Le(n,t){if(n.dtype===t.dtype)return[n,t];const e=rs(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function nI(n,t){D(n.dtype===t.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${t.dtype}) input must match`)}function pz(n,t){return t.some(e=>e.id===n.id)}function av(n){const t=[];return sI(n,t,new Set),t}function sI(n,t,e){if(n==null)return;if(n instanceof he){t.push(n);return}if(!mz(n))return;const s=n;for(const a in s){const r=s[a];e.has(r)||(e.add(r),sI(r,t,e))}}function mz(n){return Array.isArray(n)||typeof n=="object"}const gz=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:nI,getTensorsInContainer:av,isTensorInList:pz,makeTypesMatch:Le},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rx(n){return n.kernelName!=null}class D2{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Ql{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new D2}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(Ds(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new az(this.backendInstance),!0}setupRegisteredKernels(){Em(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Em(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof tg)&&typeof s.then=="function"){const a=++this.pendingBackendInitId,r=s.then(i=>a<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,Ds(`Initialization of backend ${t} failed`),Ds(i.stack||i.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return Ds(`Initialization of backend ${t} failed`),Ds(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:a,asyncInit:r}=this.initializeBackend(s);if(r||a)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),a=s.backend,r=this.readSync(e),i=a.refCount(e);a.disposeData(e,!0),s.backend=t,t.move(e,r,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let a;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(a),()=>(a=e(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(t,e,s){t();try{const a=s();return e(),a}catch(a){throw e(),a}}nextTensorId(){return Ql.nextTensorId++}nextVariableId(){return Ql.nextVariableId++}clone(t){const e=P.runKernel(Ru,{x:t}),s={x:t},a=i=>({x:()=>{const l="float32",u={x:i},h={dtype:l};return P.runKernel(bu,u,h)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[e],a,r,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(Lh(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const a=this.backend.numDataIds();let r=0;s.forEach(u=>{r+=u.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=a-e-r-i;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const a=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u;const h=Rx(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Rx(t)){const{kernelName:b,inputs:v,attrs:w}=t;this.backendName==null&&this.backend;const S=Lh(b,this.backendName);D(S!=null,()=>`Cannot find registered kernel '${b}' for backend '${this.backendName}'`),l=()=>{const T=this.backend.numDataIds();u=S.kernelFunc({inputs:v,attrs:w,backend:this.backend});const $=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(b,T,$);const C=$.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(a){const I=this.getTensorsForGradient(b,v,C);s=this.saveTensorsForBackwardMode(I)}return C}}else{const{forwardFunc:b}=t,v=w=>{a&&(s=w.map(S=>this.keep(this.clone(S))))};l=()=>{const w=this.backend.numDataIds();u=this.tidy(()=>b(this.backend,v));const S=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,w,S),S}}const{inputs:d,attrs:p}=t,m=Rx(t)?null:t.backwardsFunc;let y;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=l():(y=this.profiler.profileKernel(h,d,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(y),e=y.outputs)}),a&&this.addTapeNode(h,d,e,m,s,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:h,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(b=>d[b]!=null?d[b].shape:null),outputShapes:e.map(b=>b.shape),kernelTimeMs:y.timeMs,extraInfo:y.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const a=Jx(t);if(a!=null){const r=a.inputsToSave||[],i=a.outputsToSave||[];let l;a.saveAllInputs?(D(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(e).map(h=>e[h])):l=r.map(h=>e[h]);const u=s.filter((h,d)=>i[d]);return l.concat(u)}return[]}makeTensor(t,e,s,a){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",a=a||this.backend;let r=t;s==="string"&&Ga(t[0])&&(r=t.map(u=>ja(u)));const i=a.write(r,e,s),l=new he(e,s,i,this.nextTensorId());if(this.trackTensor(l,a),s==="string"){const u=this.state.tensorInfo.get(i),h=Mk(r);this.state.numBytes+=h-u.bytes,u.bytes=h}return l}makeTensorFromDataId(t,e,s,a){s=s||"float32";const r={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:a,dtype:r}=t,i=new he(a,r,s,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,s,a){s=s||this.nextVariableId().toString(),a!=null&&a!==t.dtype&&(t=t.cast(a));const r=new zh(t,e,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*Rh(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof zh||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*Rh(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,a,r,i){const l={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:r},u=Jx(t);u!=null&&(a=u.gradFunc),a!=null&&(l.gradient=h=>(h=h.map((d,p)=>{if(d==null){const m=s[p],y=En(m.size,m.dtype);return this.makeTensor(y,m.shape,m.dtype)}return d}),a(h.length>1?h:h[0],r,i))),this.state.activeTape.push(l)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=av(t),s=new Set(e.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const i=this.state.activeScope.track[r];!i.kept&&!s.has(i.id)&&i.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(r=>{!r.kept&&r.scopeId===a.id&&this.track(r)})}gradients(t,e,s,a=!1){if(D(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));D(r instanceof he,()=>"The result y returned by f() must be a tensor.");const i=oz(this.state.activeTape,e,r);if(!a&&i.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[r.id]=s??yz(r.shape),lz(l,i,h=>this.tidy(h),bz);const u=e.map(h=>l[h.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(h=>{for(const d of h.saved)d.dispose()}),this.state.activeTape=null),{value:r,grads:u}})}customGrad(t){return D(Ni(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{D(e.every(l=>l instanceof he),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const a={};e.forEach((l,u)=>{a[u]=l});const r=(l,u)=>(s=t(...e,u),D(s.value instanceof he,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(Ni(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(l,u)=>{const h=s.gradFunc(l,u),d=Array.isArray(h)?h:[h];D(d.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(d.every(m=>m instanceof he),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const p={};return d.forEach((m,y)=>{p[y]=()=>m}),p};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:a})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Gn(),s=await this.backend.time(t);return s.wallMs=Gn()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new D2;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ql.nextTensorId=0;Ql.nextVariableId=0;function yz(n){const t=ng(ht(n),"float32");return P.makeTensor(t,n,"float32")}function aI(){const n=Wk();if(n._tfengine==null){const t=new Uk(n);n._tfengine=new Ql(t)}return ML(n._tfengine.ENV),hz(()=>n._tfengine),n._tfengine}const P=aI();function bz(n,t){const e={a:n,b:t};return P.runKernel(Yo,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(){return typeof navigator<"u"&&navigator!=null}let i1;function vz(n){i1=n}function rv(n){if(i1!==void 0)return i1;if(n||xz()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function iv(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const wz=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:iv,isMobile:rv,mockIsMobile:vz},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const is=at();is.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});is.registerFlag("IS_BROWSER",()=>iv());is.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");is.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));is.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));is.registerFlag("PROD",()=>!1);is.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>is.getBool("DEBUG"));is.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);is.registerFlag("IS_TEST",()=>!1);is.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>is.getBool("DEBUG"));is.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);is.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);is.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qa(n,t){let e=n;if(gn(n))return t==="string"?[]:[n.length];if(tI(n)){const a=n.channels||"RGBA";return[n.height,n.width*a.length]}else if(eI(n))return[n.buffer.size/(t==null?4:Rh(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||gn(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&at().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&rI(n,s,[]),s}function rI(n,t,e){if(e=e||[],!Array.isArray(n)&&!gn(n)){D(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}D(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),D(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let a=0;a<n.length;++a)rI(n[a],s,e.concat(a))}function O2(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function F(n,t,e,s="numeric"){if(n instanceof dt())return O2(s,n.dtype,t,e),n;let a=Ko(n);if(a!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(a=s),O2(s,a,t,e),n==null||!gn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${u}'`)}const r=Qa(n,a);!gn(n)&&!Array.isArray(n)&&(n=[n]);const l=a!=="string"?Fi(n,a):Za(n,[],!0);return P.makeTensor(l,r,a)}function Mh(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((r,i)=>F(r,`${t}[${i}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ov="__op";function W(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+ov;const a=(...r)=>{P.startScope(e);try{const i=s(...r);return Ti(i)&&console.error("Cannot return a Promise inside of tidy."),P.endScope(i),i}catch(i){throw P.endScope(null),i}};return Object.defineProperty(a,"name",{value:e,configurable:!0}),a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(n,t){const e=F(n,"real","complex"),s=F(t,"imag","complex");An(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const a={real:e,imag:s};return P.runKernel(ug,a)}const Ar=W({complex_:Sz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Li(n,t,e,s){if(s==null)s=Ko(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(eI(n)||tI(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return P.backend.createTensorFromGPUData(n,t||e,s)}if(!gn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Ns(t);const a=ht(t),r=ht(e);D(a===r,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${r}`);for(let i=0;i<e.length;++i){const l=e[i],u=i===e.length-1?l!==ht(t.slice(i)):!0;D(e[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!gn(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?Fi(n,s):Za(n,[],!0),P.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function la(n,t,e){const s=Qa(n,e);return Li(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _o={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Da{static join(t){return new Da(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(s=>gn(s)?s.buffer:s),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let s=0;s<t.length;s++){const a=t[s];s!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=e+a.byteLength;this.shards.push({buffer:a,start:e,end:r}),e=r}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const s=this.findShardForByte(t);if(s===-1)throw new Error(`Could not find start shard for byte ${t}`);const a=e-t,r=new ArrayBuffer(a),i=new Uint8Array(r);let l=0;for(let u=s;u<this.shards.length;u++){const h=this.shards[u],p=t+l-h.start,m=l,b=Math.min(e,h.end)-h.start,v=new Uint8Array(h.buffer,p,b-p);if(i.set(v,m),l+=v.length,e<h.end)break}return r}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(a){return t<a.start?-1:t>=a.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=Nz(this.shards,e);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function Nz(n,t){let e=0,s=n.length;for(;e<=s;){const a=Math.floor((s-e)/2)+e,r=t(n[a]);if(r===0)return a;r<0?s=a:e=a+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(){at().set("PROD",!0)}function Cz(){at().set("DEBUG",!0)}function $z(){at().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function kz(n){at().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Iz(){P.disposeVariables()}function Na(){return P}function o1(){return P.memory()}function Ez(n){return P.profile(n)}function nt(n,t){return P.tidy(n,t)}function qt(n){av(n).forEach(e=>e.dispose())}function on(n){return P.keep(n)}function Az(n){return P.time(n)}function Rz(n){return P.setBackend(n)}function Dz(){return P.ready()}function iI(){return P.backendName}function Oz(n){P.removeBackend(n)}function _z(n){return P.findBackend(n)}function Fz(n){return P.findBackendFactory(n)}function lv(n,t,e=1){return P.registerBackend(n,t,e)}function uv(){return P.backend}function Lz(n,t){at().setPlatform(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ci=4;async function l1(n,t){const e=[],s=[],a=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<a.length;++i){const l=a[i],u=Array.isArray(n)?n[i].tensor:n[l];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${l}': ${u.dtype}`);const h={name:l,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const d=new Promise(async p=>{const m=await u.bytes(),y=m.reduce((w,S)=>w+S.length,0)+Ci*m.length,b=new Uint8Array(y);let v=0;for(let w=0;w<m.length;w++){const S=m[w],T=new Uint8Array(new Uint32Array([S.length]).buffer);b.set(T,v),v+=Ci,b.set(S,v),v+=S.length}p(b)});s.push(d)}else s.push(u.data());t!=null&&(h.group=t),e.push(h)}const r=await Promise.all(s);return{data:Bz(r),specs:e}}function oI(n,t){const e=new Da(n),s={};let a=0;for(const r of t){const i=zz(r,(l,u)=>e.slice(a+l,a+u));s[r.name]=lI(r,e.slice(a,a+i)),a+=i}return s}function zz(n,t){const e=ht(n.shape);let s;if("quantization"in n){const a=n.quantization;s=_o[a.dtype]}else if(n.dtype==="string"){let a=0;for(let r=0;r<e;r++)a+=Ci+new Uint32Array(t(a,a+Ci))[0];return a}else s=_o[n.dtype];return e*s}async function Mz(n,t){const e=ht(n.shape);let s;if("quantization"in n){const a=n.quantization;s=_o[a.dtype]}else if(n.dtype==="string"){let a=0;for(let r=0;r<e;r++)a+=Ci+new Uint32Array(await t(a,a+Ci))[0];return a}else s=_o[n.dtype];return e*s}function lI(n,t){const e=n.name,s=n.dtype,a=n.shape,r=ht(a);let i,l=0;if("quantization"in n){const u=n.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${n.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const h=_o[u.dtype],d=u.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(s==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){i=new Float32Array(d.length);for(let p=0;p<d.length;p++){const m=d[p];i[p]=m*u.scale+u.min}}else if(u.dtype==="float16")i=Hz()(d);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(s==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);i=new Int32Array(d.length);for(let p=0;p<d.length;p++){const m=d[p];i[p]=Math.round(m*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);l+=r*h}else if(s==="string"){const u=ht(n.shape);i=[];for(let h=0;h<u;h++){const d=new Uint32Array(t.slice(l,l+Ci))[0];l+=Ci;const p=new Uint8Array(t.slice(l,l+d));i.push(p),l+=d}}else{const u=_o[s];if(s==="float32")i=new Float32Array(t);else if(s==="int32")i=new Int32Array(t);else if(s==="bool")i=new Uint8Array(t);else if(s==="complex64"){i=new Float32Array(t);const h=new Float32Array(i.length/2),d=new Float32Array(i.length/2);for(let b=0;b<h.length;b++)h[b]=i[b*2],d[b]=i[b*2+1];const p=la(h,a,"float32"),m=la(d,a,"float32"),y=Ar(p,m);return p.dispose(),m.dispose(),y}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);l+=r*u}return la(i,a,s)}async function _2(n,t,e){let s=new Uint8Array(t);for(;s.byteLength<e;){const{done:a,value:r}=await n.read();if(a&&r==null){const l=e-s.byteLength;throw new Error(`Reader is done but ${l} bytes are still expected`)}const i=new Uint8Array(s.length+r.byteLength);i.set(s,0),i.set(new Uint8Array(r),s.length),s=i}return s.buffer}async function uI(n,t){const e={},s=n.getReader();let a=new ArrayBuffer(0);for(const r of t){const i=await Mz(r,async(h,d)=>(a=await _2(s,a,d),a.slice(h,d)));a=await _2(s,a,i);const l=a.slice(0,i);a=a.slice(i);const u=lI(r,l);if(e[r.name]=u,iI()==="webgpu"){const h=uv();"uploadToGPU"in h&&ht(u.shape)>=at().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&h.uploadToGPU(u.dataId)}}return e}function Bz(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(r=>{if(t+=r.byteLength,e.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(t);let a=0;return e.forEach(r=>{s.set(new Uint8Array(r.buffer),a),a+=r.byteLength}),s.buffer}const cv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function F2(n){return cv?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function Vz(n){if(cv)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,a=t.length;s<a;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function Pz(n){if(cv){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function cI(n){return Da.join(n)}function L2(n){const t="/";for(n=n.trim();n.endsWith(t);)n=n.slice(0,n.length-1);const e=n.split(t);return e[e.length-1]}function hI(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(e.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),e}function dI(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function hv(n,t){let e,s;return n.weightsManifest!=null&&([e,s]=await t(n.weightsManifest)),dI(n,e,s)}function ef(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:F2(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:F2(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Da(n.weightData).byteLength}}function u1(n){const t=[];for(const e of n)t.push(...e.weights);return t}function Uz(){const n=e=>{let s=e<<13,a=0;for(;(s&8388608)===0;)a-=8388608,s<<=1;return s&=-8388609,a+=947912704,s|a},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function Wz(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}function Gz(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}function Hz(){const n=Uz(),t=Wz(),e=Gz();return s=>{const a=new ArrayBuffer(4*s.length),r=new Uint32Array(a);for(let i=0;i<s.length;i++){const l=s[i],u=n[e[l>>10]+(l&1023)]+t[l>>10];r[i]=u}return new Float32Array(a)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oe{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Oe.instance==null&&(Oe.instance=new Oe),Oe.instance}static registerSaveRouter(t){Oe.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Oe.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Oe.getHandlers(t,"save")}static getLoadHandlers(t,e){return Oe.getHandlers(t,"load",e)}static getHandlers(t,e,s){const a=[];return(e==="load"?Oe.getInstance().loadRouters:Oe.getInstance().saveRouters).forEach(i=>{const l=i(t,s);l!==null&&a.push(l)}),a}}const jz=n=>Oe.registerSaveRouter(n),qz=n=>Oe.registerLoadRouter(n),fI=n=>Oe.getSaveHandlers(n),Kz=(n,t)=>Oe.getLoadHandlers(n,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c1="tensorflowjs",h1=1,Co="models_store",pi="model_info_store";function pI(){if(!at().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function d1(n){const t=n.result;t.createObjectStore(Co,{keyPath:"modelPath"}),t.createObjectStore(pi,{keyPath:"modelPath"})}class Fo{constructor(t){if(this.indexedDB=pI(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,a)=>{const r=this.indexedDB.open(c1,h1);r.onupgradeneeded=()=>d1(r),r.onsuccess=()=>{const i=r.result;if(e==null){const l=i.transaction(Co,"readonly"),h=l.objectStore(Co).get(this.modelPath);h.onsuccess=()=>{if(h.result==null)return i.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(h.result.modelArtifacts)},h.onerror=d=>(i.close(),a(h.error)),l.oncomplete=()=>i.close()}else{e.weightData=Da.join(e.weightData);const l=ef(e),u=i.transaction(pi,"readwrite");let h=u.objectStore(pi),d;try{d=h.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(m){return a(m)}let p;d.onsuccess=()=>{p=i.transaction(Co,"readwrite");const m=p.objectStore(Co);let y;try{y=m.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:l})}catch(b){return a(b)}y.onsuccess=()=>s({modelArtifactsInfo:l}),y.onerror=b=>{h=u.objectStore(pi);const v=h.delete(this.modelPath);v.onsuccess=()=>(i.close(),a(y.error)),v.onerror=w=>(i.close(),a(y.error))}},d.onerror=m=>(i.close(),a(d.error)),u.oncomplete=()=>{p==null?i.close():p.oncomplete=()=>i.close()}}},r.onerror=i=>a(r.error)})}}Fo.URL_SCHEME="indexeddb://";const mI=n=>at().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Fo.URL_SCHEME)?Xz(n.slice(Fo.URL_SCHEME.length)):null;Oe.registerSaveRouter(mI);Oe.registerLoadRouter(mI);function Xz(n){return new Fo(n)}function Yz(n){return n.startsWith(Fo.URL_SCHEME)?n.slice(Fo.URL_SCHEME.length):n}class Zz{constructor(){this.indexedDB=pI()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(c1,h1);s.onupgradeneeded=()=>d1(s),s.onsuccess=()=>{const a=s.result,r=a.transaction(pi,"readonly"),l=r.objectStore(pi).getAll();l.onsuccess=()=>{const u={};for(const h of l.result)u[h.modelPath]=h.modelArtifactsInfo;t(u)},l.onerror=u=>(a.close(),e(l.error)),r.oncomplete=()=>a.close()},s.onerror=a=>e(s.error)})}async removeModel(t){return t=Yz(t),new Promise((e,s)=>{const a=this.indexedDB.open(c1,h1);a.onupgradeneeded=()=>d1(a),a.onsuccess=()=>{const r=a.result,i=r.transaction(pi,"readwrite"),l=i.objectStore(pi),u=l.get(t);let h;u.onsuccess=()=>{if(u.result==null)return r.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const d=l.delete(t),p=()=>{h=r.transaction(Co,"readwrite");const y=h.objectStore(Co).delete(t);y.onsuccess=()=>e(u.result.modelArtifactsInfo),y.onerror=b=>s(u.error)};d.onsuccess=p,d.onerror=m=>(p(),r.close(),s(u.error))}},u.onerror=d=>(r.close(),s(u.error)),i.oncomplete=()=>{h==null?r.close():h.oncomplete=()=>r.close()}},a.onerror=r=>s(a.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kr="/",jl="tensorflowjs_models",gI="info",Qz="model_topology",Jz="weight_specs",tM="weight_data",eM="model_metadata";function yI(n){return{info:[jl,n,gI].join(kr),topology:[jl,n,Qz].join(kr),weightSpecs:[jl,n,Jz].join(kr),weightData:[jl,n,tM].join(kr),modelMetadata:[jl,n,eM].join(kr)}}function bI(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function nM(n){const t=n.split(kr);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(kr)}function sM(n){return n.startsWith(Lo.URL_SCHEME)?n.slice(Lo.URL_SCHEME.length):n}class Lo{constructor(t){if(!at().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=yI(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),a=ef(t),r=Da.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,Vz(r));const i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch{throw bI(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const l=JSON.parse(r);e.format=l.format,e.generatedBy=l.generatedBy,e.convertedBy=l.convertedBy,l.signature!=null&&(e.signature=l.signature),l.userDefinedMetadata!=null&&(e.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(e.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(e.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(e.trainingConfig=l.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=Pz(i),e}}Lo.URL_SCHEME="localstorage://";const xI=n=>at().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Lo.URL_SCHEME)?aM(n.slice(Lo.URL_SCHEME.length)):null;Oe.registerSaveRouter(xI);Oe.registerLoadRouter(xI);function aM(n){return new Lo(n)}class rM{constructor(){D(at().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=jl+kr,s=kr+gI;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(e)&&r.endsWith(s)){const i=nM(r);t[i]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){t=sM(t);const e=yI(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return bI(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ql="://";class Hn{constructor(){this.managers={}}static getInstance(){return Hn.instance==null&&(Hn.instance=new Hn),Hn.instance}static registerManager(t,e){D(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(ql)&&(t=t.slice(0,t.indexOf(ql))),D(t.length>0,()=>"scheme must not be an empty string.");const s=Hn.getInstance();D(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=Hn.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Hn.getInstance().managers)}}function dm(n){if(n.indexOf(ql)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Hn.getSchemes().join(",")}`);return{scheme:n.split(ql)[0],path:n.split(ql)[1]}}async function vI(n,t,e=!1){D(n!==t,()=>`Old path and new path are the same: '${n}'`);const s=Oe.getLoadHandlers(n);D(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),D(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const a=s[0],r=Oe.getSaveHandlers(t);D(r.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),D(r.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);const i=r[0],l=dm(n).scheme,u=dm(n).path,h=l===dm(n).scheme,d=await a.load();e&&h&&await Hn.getManager(l).removeModel(u);const p=await i.save(d);return e&&!h&&await Hn.getManager(l).removeModel(u),p.modelArtifactsInfo}async function iM(){const n=Hn.getSchemes(),t={};for(const e of n){const s=await Hn.getManager(e).listModels();for(const a in s){const r=e+ql+a;t[r]=s[a]}}return t}async function oM(n){const t=dm(n);return Hn.getManager(t.scheme).removeModel(t.path)}async function lM(n,t){return vI(n,t,!1)}async function uM(n,t){return vI(n,t,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cM{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!at().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const a=this.functionRefs[s.data.index];a(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return qk(t)}}if(at().get("IS_BROWSER")){at().setPlatform("browser",new cM);try{Hn.registerManager(Lo.URL_SCHEME,new rM)}catch{}try{Hn.registerManager(Fo.URL_SCHEME,new Zz)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hM={importFetch:()=>require("node-fetch")};let Dx;class dM{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return at().global.fetch!=null?at().global.fetch(t,e):(Dx==null&&(Dx=hM.importFetch()),Dx(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}at().get("IS_NODE")&&!at().get("IS_BROWSER")&&at().setPlatform("node",new dM);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wt(n,t="float32",e){return t=t||"float32",Ns(n),new tn(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(n,t){const e=F(n,"x","cast");if(!zk(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},a={dtype:t};return P.runKernel(bu,s,a)}const wt=W({cast_:fM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n){const e={x:F(n,"x","clone","string_or_numeric")};return P.runKernel(Ru,e)}const qa=W({clone_:pM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dv(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */aI();const mM={buffer:Wt,cast:wt,clone:qa,print:dv};dz(mM);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(n,t){let e=F(n,"a","add"),s=F(t,"b","add");[e,s]=Le(e,s);const a={a:e,b:s};return P.runKernel(Yo,a)}const yt=W({add_:gM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(n,t){let e=F(n,"a","floorDiv"),s=F(t,"b","floorDiv");[e,s]=Le(e,s);const a={a:e,b:s};return P.runKernel(Eu,a)}const cy=W({floorDiv_:yM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bM(n,t){let e=F(n,"a","div"),s=F(t,"b","div");if([e,s]=Le(e,s),e.dtype==="int32"&&s.dtype==="int32")return cy(e,s);const a={a:e,b:s},r={};return P.runKernel(Nu,a,r)}const At=W({div_:bM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(n,t){let e=F(n,"a","mul"),s=F(t,"b","mul");[e,s]=Le(e,s);const a={a:e,b:s};return P.runKernel(Vu,a)}const H=W({mul_:xM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vM(n){const t=F(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return P.runKernel(id,e)}else{const e={x:t};return P.runKernel(Zh,e)}}const Qe=W({abs_:vM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(n){const e={x:F(n,"x","acos")};return P.runKernel(hu,e)}const fv=W({acos_:wM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(n){const e={x:F(n,"x","acosh")};return P.runKernel(du,e)}const pv=W({acosh_:SM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NM(n){D(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),D(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const t=n.map((a,r)=>F(a,`tensors${r}`,"addN")),e=t[0];t.forEach(a=>{if(a.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!Zt(a.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=t;return P.runKernel(Qh,s)}const wI=W({addN_:NM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n,t=null,e=!1){const a={x:F(n,"x","all","bool")},r={axis:t,keepDims:e};return P.runKernel(sg,a,r)}const hy=W({all_:TM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(n,t=null,e=!1){const a={x:F(n,"x","any","bool")},r={axis:t,keepDims:e};return P.runKernel(ag,a,r)}const Bh=W({any_:CM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(n,t=0){const s={x:F(n,"x","argMax")},a={axis:t};return P.runKernel(Jh,s,a)}const $i=W({argMax_:$M});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(n,t=0){const s={x:F(n,"x","argMin")},a={axis:t};return P.runKernel(td,s,a)}const mv=W({argMin_:kM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(n){const e={x:F(n,"x","asin")};return P.runKernel(fu,e)}const gv=W({asin_:IM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(n){const e={x:F(n,"x","asinh")};return P.runKernel(pu,e)}const yv=W({asinh_:EM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AM(n){const e={x:F(n,"x","atan")};return P.runKernel(mu,e)}const bv=W({atan_:AM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n,t){let e=F(n,"a","atan2"),s=F(t,"b","atan2");[e,s]=Le(e,s);const a={a:e,b:s};return P.runKernel(yu,a)}const xv=W({atan2_:RM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n){const e={x:F(n,"x","atanh")};return P.runKernel(gu,e)}const vv=W({atanh_:DM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nf(n,t,e,s,a="NHWC",r){const i=n[3],l=[...t,i],u=zr(a);return vn(n,l,e,r,s,null,null,u)}function ha(n,t,e,s,a,r,i="channelsLast"){const[l,u]=Vh(t);let h;if(i==="channelsLast")h=[l,u,n[3],n[3]];else if(i==="channelsFirst")h=[l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return vn(n,h,e,s,a,r,!1,i)}function Lr(n,t,e,s,a,r,i="NDHWC"){const[l,u,h]=f1(t);let d,p;if(i==="NDHWC")p="channelsLast",d=[l,u,h,n[4],n[4]];else if(i==="NCDHW")p="channelsFirst",d=[l,u,h,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return zi(n,d,e,s,a,!1,p,r)}function vn(n,t,e,s,a,r,i=!1,l="channelsLast"){let[u,h,d,p]=[-1,-1,-1,-1];if(l==="channelsLast")[u,h,d,p]=n;else if(l==="channelsFirst")[u,p,h,d]=n;else throw new Error(`Unknown dataFormat ${l}`);const[m,y,,b]=t,[v,w]=Vh(e),[S,T]=Vh(s),$=Kl(m,S),C=Kl(y,T),{padInfo:I,outHeight:R,outWidth:L}=FM(a,h,d,v,w,$,C,r,l),M=i?b*p:b;let O;return l==="channelsFirst"?O=[u,M,R,L]:l==="channelsLast"&&(O=[u,R,L,M]),{batchSize:u,dataFormat:l,inHeight:h,inWidth:d,inChannels:p,outHeight:R,outWidth:L,outChannels:M,padInfo:I,strideHeight:v,strideWidth:w,filterHeight:m,filterWidth:y,effectiveFilterHeight:$,effectiveFilterWidth:C,dilationHeight:S,dilationWidth:T,inShape:n,outShape:O,filterShape:t}}function zi(n,t,e,s,a,r=!1,i="channelsLast",l){let[u,h,d,p,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,h,d,p,m]=n;else if(i==="channelsFirst")[u,m,h,d,p]=n;else throw new Error(`Unknown dataFormat ${i}`);const[y,b,v,,w]=t,[S,T,$]=f1(e),[C,I,R]=f1(s),L=Kl(y,C),M=Kl(b,I),O=Kl(v,R),{padInfo:_,outDepth:A,outHeight:G,outWidth:X}=LM(a,h,d,p,S,T,$,L,M,O,l),tt=r?w*m:w;let Q;return i==="channelsFirst"?Q=[u,tt,A,G,X]:i==="channelsLast"&&(Q=[u,A,G,X,tt]),{batchSize:u,dataFormat:i,inDepth:h,inHeight:d,inWidth:p,inChannels:m,outDepth:A,outHeight:G,outWidth:X,outChannels:tt,padInfo:_,strideDepth:S,strideHeight:T,strideWidth:$,filterDepth:y,filterHeight:b,filterWidth:v,effectiveFilterDepth:L,effectiveFilterHeight:M,effectiveFilterWidth:O,dilationDepth:C,dilationHeight:I,dilationWidth:R,inShape:n,outShape:Q,filterShape:t}}function OM(n,t,e,s,a){s==null&&(s=wv(n,t,e));const r=n[0],i=n[1],l=Ph((r-t+2*s)/e+1,a),u=Ph((i-t+2*s)/e+1,a);return[l,u]}function _M(n,t,e,s,a,r){a==null&&(a=wv(n,t[0],s[0]));const i=[0,0,0,e];for(let l=0;l<3;l++)n[l]+2*a>=t[l]&&(i[l]=Ph((n[l]-t[l]+2*a)/s[l]+1,r));return i}function wv(n,t,e,s=1){const a=Kl(t,s);return Math.floor((n[0]*(e-1)-e+a)/2)}function Vh(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function f1(n){return typeof n=="number"?[n,n,n]:n}function Kl(n,t){return t<=1?n:n+(n-1)*(t-1)}function FM(n,t,e,s,a,r,i,l,u){let h,d,p;if(typeof n=="number"){h={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const y=OM([t,e],r,s,n,l);d=y[0],p=y[1]}else if(n==="same"){d=Math.ceil(t/s),p=Math.ceil(e/a);const m=Math.max(0,(d-1)*s+r-t),y=Math.max(0,(p-1)*a+i-e),b=Math.floor(m/2),v=m-b,w=Math.floor(y/2),S=y-w;h={top:b,bottom:v,left:w,right:S,type:"SAME"}}else if(n==="valid")h={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-r+1)/s),p=Math.ceil((e-i+1)/a);else if(typeof n=="object"){const m=u==="channelsLast"?n[1][0]:n[2][0],y=u==="channelsLast"?n[1][1]:n[2][1],b=u==="channelsLast"?n[2][0]:n[3][0],v=u==="channelsLast"?n[2][1]:n[3][1];h={top:m,bottom:y,left:b,right:v,type:m===0&&y===0&&b===0&&v===0?"VALID":"EXPLICIT"},d=Ph((t-r+m+y)/s+1,l),p=Ph((e-i+b+v)/a+1,l)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outHeight:d,outWidth:p}}function LM(n,t,e,s,a,r,i,l,u,h,d){let p,m,y,b;if(n==="valid"&&(n=0),typeof n=="number"){p={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const w=_M([t,e,s,1],[l,u,h],1,[a,r,i],n,d);m=w[0],y=w[1],b=w[2]}else if(n==="same"){m=Math.ceil(t/a),y=Math.ceil(e/r),b=Math.ceil(s/i);const v=(m-1)*a+l-t,w=(y-1)*r+u-e,S=(b-1)*i+h-s,T=Math.floor(v/2),$=v-T,C=Math.floor(w/2),I=w-C,R=Math.floor(S/2),L=S-R;p={top:C,bottom:I,left:R,right:L,front:T,back:$,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:p,outDepth:m,outHeight:y,outWidth:b}}function Ph(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function ki(n){const[t,e,s]=Vh(n);return t===1&&e===1&&s===1}function Rn(n,t){return ki(n)||ki(t)}function zo(n){return Vh(n).every(t=>t>0)}function zr(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Yn(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")D(Oo(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(a=>{D(Oo(a),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${a}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zM(n,t){const s={x:F(n,"x","reshape","string_or_numeric")},a={shape:t};return P.runKernel(Vd,s,a)}const j=W({reshape_:zM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(n,t,e,s,a){const r=F(n,"x","avgPool","float32"),i=1;D(Rn(e,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let l=r,u=!1;r.rank===3&&(u=!0,l=j(r,[1,r.shape[0],r.shape[1],r.shape[2]])),D(l.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`),Yn("avgPool",s,a);const h={x:l},d={filterSize:t,strides:e,pad:s,dimRoundingMode:a};let p=P.runKernel(ed,h,d);return p=wt(p,r.dtype),u?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const sf=W({avgPool_:MM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n,t,e,s,a,r="NDHWC"){const i=F(n,"x","avgPool3d","float32");let l=i,u=!1;i.rank===4&&(u=!0,l=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),D(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),D(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Yn("avgPool3d",s,a);const h={x:l},d={filterSize:t,strides:e,pad:s,dimRoundingMode:a,dataFormat:r};let p=P.runKernel(nd,h,d);return p=wt(p,l.dtype),u?j(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Sv=W({avgPool3d_:BM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(n,t=0){D(n.length>=1,()=>"Pass at least one tensor to concat");const e=Mh(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),e.length===1)return qa(e[0]);const s=e,a={axis:t};return P.runKernel(od,s,a)}const Pe=W({concat_:VM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n,t,e=!1,s=!1){let a=F(n,"a","matMul"),r=F(t,"b","matMul");[a,r]=Le(a,r);const i={a,b:r},l={transposeA:e,transposeB:s};return P.runKernel(sd,i,l)}const jt=W({matMul_:PM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(n){const e={x:F(n,"x","sigmoid","float32")};return P.runKernel(Zu,e)}const ua=W({sigmoid_:UM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(n,t,e){const s=F(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const a={x:s},r={begin:t,size:e};return P.runKernel(Hd,a,r)}const ee=W({slice_:WM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(n){const e={x:F(n,"x","tanh","float32")};return P.runKernel(sc,e)}const Ii=W({tanh_:GM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(n,t,e,s,a,r){const i=F(n,"forgetBias","basicLSTMCell"),l=F(t,"lstmKernel","basicLSTMCell"),u=F(e,"lstmBias","basicLSTMCell"),h=F(s,"data","basicLSTMCell"),d=F(a,"c","basicLSTMCell"),p=F(r,"h","basicLSTMCell"),m=Pe([h,p],1),y=jt(m,l),b=yt(y,u),v=b.shape[0],w=b.shape[1]/4,S=[v,w],T=ee(b,[0,0],S),$=ee(b,[0,w],S),C=ee(b,[0,w*2],S),I=ee(b,[0,w*3],S),R=yt(H(ua(T),Ii($)),H(d,ua(yt(i,C)))),L=H(Ii(R),ua(I));return[R,L]}const SI=W({basicLSTMCell_:HM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n,t,e){const s=F(n,"x","batchToSpaceND"),a=t.reduce((l,u)=>l*u);D(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),D(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),D(s.shape[0]%a===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);const r={x:s},i={blockShape:t,crops:e};return P.runKernel(ad,r,i)}const af=W({batchToSpaceND_:jM});function qM(n){let t;return n.rank===0||n.rank===1?t=j(n,[1,1,1,n.size]):n.rank===2?t=j(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(n,t,e,s,a,r){r==null&&(r=.001);const i=F(n,"x","batchNorm"),l=F(t,"mean","batchNorm"),u=F(e,"variance","batchNorm");let h;a!=null&&(h=F(a,"scale","batchNorm"));let d;s!=null&&(d=F(s,"offset","batchNorm")),D(l.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(d==null||l.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(h==null||l.rank===h.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const m={x:qM(i),scale:h,offset:d,mean:l,variance:u},y={varianceEpsilon:r},b=P.runKernel(gd,m,y);return j(b,i.shape)}const ic=W({batchNorm_:KM});function XM(n,t,e,s,a,r){const i=F(n,"x","batchNorm"),l=F(t,"mean","batchNorm"),u=F(e,"variance","batchNorm");let h;a!=null&&(h=F(a,"scale","batchNorm"));let d;return s!=null&&(d=F(s,"offset","batchNorm")),D(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),h!=null&&D(h.rank===2||h.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${h.rank}.`),d!=null&&D(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),ic(i,l,u,d,h,r)}const Nv=W({batchNorm2d_:XM});function YM(n,t,e,s,a,r){const i=F(n,"x","batchNorm"),l=F(t,"mean","batchNorm"),u=F(e,"variance","batchNorm");let h;a!=null&&(h=F(a,"scale","batchNorm"));let d;return s!=null&&(d=F(s,"offset","batchNorm")),D(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),h!=null&&D(h.rank===3||h.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${h.rank}.`),d!=null&&D(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),ic(i,l,u,d,h,r)}const Tv=W({batchNorm3d_:YM});function ZM(n,t,e,s,a,r){const i=F(n,"x","batchNorm"),l=F(t,"mean","batchNorm"),u=F(e,"variance","batchNorm");let h;a!=null&&(h=F(a,"scale","batchNorm"));let d;return s!=null&&(d=F(s,"offset","batchNorm")),D(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),h!=null&&D(h.rank===4||h.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${h.rank}.`),d!=null&&D(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),ic(i,l,u,d,h,r)}const Cv=W({batchNorm4d_:ZM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QM(n,t,e){const s=F(n,"x","bincount"),a=F(t,"weights","bincount");D(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(a.size===s.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${a.shape}.`);const r={x:s,weights:a},i={size:e};return P.runKernel(og,r,i)}const $v=W({bincount_:QM});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(n,t){const e=F(n,"x","bitwiseAnd"),s=F(t,"y","bitwiseAnd");if(!Zt(e.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${s.shape}`);if(e.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${s.dtype}`);const a={a:e,b:s};return P.runKernel(rd,a)}const NI=W({bitwiseAnd_:JM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n,t){const e=F(n,"s0","broadcastArgs","int32"),s=F(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const a={s0:e,s1:s};return P.runKernel(lg,a)}const TI=W({broadcastArgs_:tB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eB(n,t){let e=F(n,"broadcastTo","x");const s=e.shape;if(Ns(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const h=e.shape.slice();for(;h.length<t.length;)h.unshift(1);e=j(e,h)}const a=e.shape,r=Array.from(t);for(let h=t.length-1;h>=0;h--)if(a[h]===t[h])r[h]=1;else if(e.shape[h]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(r.map((h,d)=>h>1?d:-1).filter(h=>h>=0).length===0)return qa(e);const l={x:e},u={reps:r};return P.runKernel(ac,l,u)}const Eo=W({broadcastTo_:eB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(n){const e={x:F(n,"x","ceil","float32")};return P.runKernel(xu,e)}const kv=W({ceil_:nB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(n,t,e){Ns(n),e=e||Ko(t);const s={shape:n,value:t,dtype:e};return P.runKernel(Tg,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n,t,e){const s=F(n,"x","clipByValue");if(D(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Zo(s.shape,t,s.dtype);const a={x:s},r={clipValueMin:t,clipValueMax:e};return P.runKernel(vu,a,r)}const os=W({clipByValue_:sB});function aB(n){return Pe(n,0)}const Iv=W({concat1d_:aB});function rB(n,t){return Pe(n,t)}const Ev=W({concat2d_:rB});function iB(n,t){return Pe(n,t)}const Av=W({concat3d_:iB});function oB(n,t){return Pe(n,t)}const Rv=W({concat4d_:oB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n,t,e,s,a="NHWC",r=[1,1],i){const l=F(n,"x","conv2d","float32"),u=F(t,"filter","conv2d","float32");let h=l,d=!1;l.rank===3&&(d=!0,h=j(l,[1,l.shape[0],l.shape[1],l.shape[2]])),D(h.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${h.rank}.`),D(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Yn("conv2d",s,i);const p=a==="NHWC"?h.shape[3]:h.shape[1];D(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),D(Rn(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),D(zo(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),D(zo(e),()=>"Error in conv2D: Strides should be larger than 0.");const m={x:h,filter:u},y={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},b=P.runKernel(ld,m,y);return d?j(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const Rr=W({conv2d_:lB});function uB(n,t,e,s,a="NWC",r=1,i){const l=F(n,"x","conv1d"),u=F(t,"filter","conv1d");let h=l,d=!1;l.rank===2&&(d=!0,h=j(l,[1,l.shape[0],l.shape[1]])),D(h.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${h.rank}.`),D(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Yn("conv1d",s,i),D(h.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${h.shape[2]}) must match input depth for filter ${u.shape[1]}.`),D(Rn(e,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${r}'`),D(zo(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),D(zo(e),()=>"Error in conv1D: Stride should be larger than 0."),D(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const p=j(u,[1,u.shape[0],u.shape[1],u.shape[2]]),m=j(h,[h.shape[0],1,h.shape[1],h.shape[2]]),w=Rr(m,p,[1,e],s,"NHWC",[1,r],i);return d?j(w,[w.shape[2],w.shape[3]]):j(w,[w.shape[0],w.shape[2],w.shape[3]])}const dy=W({conv1d_:uB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(n,t,e,s,a,r="NHWC",i){D(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let l=n,u=t,h=!1;t.rank===3&&(h=!0,u=j(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,n[0],n[1],n[2]]),D(l.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`),D(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),D(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const d=r==="NHWC"?l[3]:l[1],p=r==="NHWC"?u.shape[3]:u.shape[1];D(d===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${e.shape[2]}.`),D(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),Yn("conv2dDerInput",a,i);const m={dy:u,filter:e},y={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,inputShape:l},b=P.runKernel(ud,m,y);return h?j(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const Dv=W({conv2DBackpropInput_:cB});function hB(n,t,e,s,a,r){const i=F(n,"x","conv2dTranspose"),l=F(t,"filter","conv2dTranspose");return Dv(e,i,l,s,a,"NHWC",r)}const fy=W({conv2dTranspose_:hB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(n,t,e,s,a="NDHWC",r=[1,1,1]){const i=F(n,"x","conv3d"),l=F(t,"filter","conv3d");let u=i,h=!1;i.rank===4&&(h=!0,u=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),D(l.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`),D(u.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${l.shape[3]}.`),D(Rn(e,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),D(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),D(zo(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),D(zo(e),()=>"Error in conv3D: Strides should be larger than 0.");const d={x:u,filter:l},p={strides:e,pad:s,dataFormat:a,dilations:r},m=P.runKernel(cd,d,p);return h?j(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const Ov=W({conv3d_:dB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(n,t,e,s,a){D(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let r=n,i=t,l=!1;t.rank===4&&(l=!0,i=j(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,n[0],n[1],n[2],n[3]]);const u=r[4],h=i.shape[4];D(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),D(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),D(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),D(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),D(h===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[4]}.`);const d={dy:i,filter:e},p={pad:a,strides:s,inputShape:r},m=P.runKernel(dg,d,p);return l?j(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const CI=W({conv3DBackpropInput_:fB});function pB(n,t,e,s,a){const r=F(n,"x","conv3dTranspose"),i=F(t,"filter","conv3dTranspose");return CI(e,r,i,s,a)}const _v=W({conv3dTranspose_:pB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(n){const e={x:F(n,"x","cos","float32")};return P.runKernel(wu,e)}const rf=W({cos_:mB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(n){const e={x:F(n,"x","cosh","float32")};return P.runKernel(Su,e)}const py=W({cosh_:gB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(n,t=0,e=!1,s=!1){const r={x:F(n,"x","cumprod")},i={axis:t,exclusive:e,reverse:s};return P.runKernel(fg,r,i)}const Uh=W({cumprod_:yB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n,t=0,e=!1,s=!1){const r={x:F(n,"x","cumsum")},i={axis:t,exclusive:e,reverse:s};return P.runKernel(hd,r,i)}const my=W({cumsum_:bB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xB(n,t,e,s=!1){const a=F(n,"x","denseBincount"),r=F(t,"weights","denseBincount");D(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),D(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(r.size===a.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${r.shape}.`);const i={x:a,weights:r},l={size:e,binaryOutput:s};return P.runKernel(mg,i,l)}const Am=W({denseBincount_:xB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(n,t,e="NHWC"){const s=F(n,"x","depthToSpace","float32"),a=e==="NHWC"?s.shape[1]:s.shape[2],r=e==="NHWC"?s.shape[2]:s.shape[3],i=e==="NHWC"?s.shape[3]:s.shape[1];D(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),D(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${s.shape}`),D(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t} for depthToSpace with input shape
        ${s.shape}`),D(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`);const l={x:s},u={blockSize:t,dataFormat:e};return P.runKernel(gg,l,u)}const Fv=W({depthToSpace_:vB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n,t,e,s,a="NHWC",r=[1,1],i){const l=F(n,"x","depthwiseConv2d","float32"),u=F(t,"filter","depthwiseConv2d","float32");let h=l,d=!1;l.rank===3&&(d=!0,h=j(l,[1,l.shape[0],l.shape[1],l.shape[2]])),D(h.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),D(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const p=a==="NHWC"?h.shape[3]:h.shape[1];D(p===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${u.shape[2]}.`),Yn("depthwiseConv2d",s,i);const m={x:h,filter:u},y={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},b=P.runKernel(dd,m,y);return d?j(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const oc=W({depthwiseConv2d_:wB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SB(n){const e={x:F(n,"x","diag")};return P.runKernel(xg,e)}const $I=W({diag_:SB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n,t,e,s,a=[1,1],r="NHWC"){const i=F(n,"x","dilation2d"),l=F(t,"filter","dilation2d");D(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),D(l.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`),D(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let u=i,h=!1;i.rank===3&&(u=j(i,[1,i.shape[0],i.shape[1],i.shape[2]]),h=!0),D(u.shape[3]===l.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${l.shape[2]}`);const d={x:u,filter:l},p={strides:e,pad:s,dilations:a},m=P.runKernel(fd,d,p);return h?j(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Lv=W({dilation2d_:NB});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mo(n,t){const e=n.length,s=[];for(let a=0;a<e;a++){const r=e-1-a,i=n[r]||1;(t[t.length-1-a]||1)>1&&i===1&&s.unshift(r)}return s}function en(n,t){const e=[];for(let s=0;s<t.length;s++){const a=n[n.length-s-1],r=t.length-s-1,i=t[r];(a==null||a===1&&i>1)&&e.unshift(r)}return e}function Pt(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let a=0;a<e;a++){let r=n[n.length-a-1];r==null&&(r=1);let i=t[t.length-a-1];if(i==null&&(i=1),r===1)s[e-a-1]=i;else if(i===1)s[e-a-1]=r;else if(r!==i){const l=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(l)}else s[e-a-1]=r}return s}const TB=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:Pt,getBroadcastDims:Mo,getReductionAxes:en},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n,t){let e=F(n,"a","equal","string_or_numeric"),s=F(t,"b","equal","string_or_numeric");[e,s]=Le(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(pd,a)}const ca=W({equal_:CB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n,t,e){const s=F(t,"a","where"),a=F(e,"b","where"),r=F(n,"condition","where","bool"),i=Pt(Pt(r.shape,s.shape),a.shape),l=Eo(r,i),u=Eo(s,i),h=Eo(a,i),d={condition:l,t:u,e:h};return P.runKernel(Gd,d)}const In=W({where_:$B});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(n){const e={x:F(n,"x","zerosLike")};return P.runKernel(Jd,e)}const ne=W({zerosLike_:kB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(n,t){let e=F(n,"a","div"),s=F(t,"b","div");[e,s]=Le(e,s);const a=At(e,s),r=ne(a),i=ca(s,r);return In(i,r,a)}const zv=W({divNoNan_:IB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EB(n,t){const e=F(n,"t1","dot"),s=F(t,"t2","dot");D((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const a=e.rank===1?e.size:e.shape[1],r=s.rank===1?s.size:s.shape[0];if(D(a===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${r}.`),e.rank===1&&s.rank===1){const i=j(e,[1,-1]),l=j(s,[-1,1]),u=jt(i,l);return j(u,[])}else if(e.rank===1&&s.rank===2){const i=j(e,[1,-1]),l=j(s,[s.shape[0],s.shape[1]]),u=jt(i,l);return j(u,[u.size])}else if(e.rank===2&&s.rank===1){const i=j(s,[-1,1]),l=jt(e,i);return j(l,[l.size])}else{const i=j(s,[s.shape[0],s.shape[1]]);return jt(e,i)}}const Mv=W({dot_:EB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n,...t){const e=t.map((a,r)=>F(a,`tensors${r}`,"einsum")),s={equation:n};return P.runKernel(wg,e,s)}const wo=W({einsum_:AB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n){const e={x:F(n,"x","elu","float32")};return P.runKernel(Tu,e)}const lc=W({elu_:RB});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(n,t){const e=F(n,"x","ensureShape","string_or_numeric");if(!Fk(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return n}const kI=W({ensureShape_:DB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(n){let t=F(n,"x","erf");D(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=wt(t,"float32"));const e={x:t};return P.runKernel(Cu,e)}const gy=W({erf_:OB});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bv(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function II(n,t,e){const s=n.length+t.length,a=[];let r=0,i=0;for(let l=0;l<s;l++)e.indexOf(l)===-1?a.push(n[r++]):a.push(t[i++]);return a}function wn(n,t){const e=[],s=n.length;for(let r=0;r<s;r++)t.indexOf(r)===-1&&e.push(n[r]);const a=t.map(r=>n[r]);return[e,a]}function qe(n,t){const e=t.map(s=>1);return II(n,e,t)}function Dn(n,t,e){D(Bv(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function ze(n,t){if(Bv(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function Mi(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function Ke(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(n,t=null,e=!1){const a={x:F(n,"x","max")},r={reductionIndices:t,keepDims:e};return P.runKernel($d,a,r)}const zs=W({max_:_B});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(n,t=null,e=!1){const a={x:F(n,"x","min")},r={axis:t,keepDims:e};return P.runKernel(Ad,a,r)}const Jl=W({min_:FB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n,t){let e=F(n,"base","pow"),s=F(t,"exp","pow");[e,s]=Le(e,s);const a={a:e,b:s};return P.runKernel(Pu,a)}const Ja=W({pow_:LB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _t(n,t){if((gn(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&gn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Li(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n){const e={x:F(n,"x","sqrt","float32")};return P.runKernel(Ju,e)}const xn=W({sqrt_:zB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(n){const t=F(n,"x","square"),e={};return P.runKernel("Square",{x:t},e)}const be=W({square_:MB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n,t=null,e=!1){let s=F(n,"x","sum");s.dtype==="bool"&&(s=wt(s,"int32"));const a={x:s},r={axis:t,keepDims:e};return P.runKernel(jd,a,r)}const Et=W({sum_:BB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n,t="euclidean",e=null,s=!1){n=F(n,"x","norm");const a=EI(n,t,e);let r=a.shape;if(s){const i=Kt(e,n.shape);r=qe(a.shape,i)}return j(a,r)}function EI(n,t,e=null){if(n.rank===0)return Qe(n);if(n.rank!==1&&e===null)return EI(j(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return Et(Qe(n),e);if(t===1/0)return zs(Qe(n),e);if(t===-1/0)return Jl(Qe(n),e);if(t==="euclidean"||t===2)return xn(Et(Ja(Qe(n),_t(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return zs(Et(Qe(n),e[0]),e[1]-1);if(t===1/0)return zs(Et(Qe(n),e[1]),e[0]);if(t===-1/0)return Jl(Et(Qe(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return xn(Et(be(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const uc=W({norm_:VB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(n,t=null,e=!1){return uc(n,"euclidean",t,e)}const Vv=W({euclideanNorm_:PB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n){const e={x:F(n,"x","exp")};return P.runKernel($u,e)}const ls=W({exp_:UB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n,t=0){const e=F(n,"x","expandDims","string_or_numeric");D(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},a={dim:t};return P.runKernel(md,s,a)}const rn=W({expandDims_:WB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n){const e={x:F(n,"x","expm1")};return P.runKernel(ku,e)}const Pv=W({expm1_:GB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(n,t){const e=F(n,"x","tile","string_or_numeric");D(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},a={reps:t};return P.runKernel(ac,s,a)}const _s=W({tile_:HB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(n,t,e,s="float32"){t==null&&(t=n);const a=Wt([n,t],s),r=n<=t?n:t;for(let l=0;l<r;++l)a.set(1,l,l);const i=j(a.toTensor(),[n,t]);if(e==null)return i;if(e.length===1)return _s(rn(i,0),[e[0],1,1]);if(e.length===2)return _s(rn(rn(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return _s(rn(rn(rn(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const yy=W({eye_:jB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(n){const e={x:F(n,"x","floor","float32")};return P.runKernel(Iu,e)}const cc=W({floor_:qB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(n,t,e=0,s=0){const a=F(n,"x","gather"),r=F(t,"indices","gather","int32"),i={x:a,indices:r},l={axis:e,batchDims:s};return P.runKernel(yd,i,l)}const hc=W({gather_:KB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n,t){let e=F(n,"a","greater","string_or_numeric"),s=F(t,"b","greater","string_or_numeric");[e,s]=Le(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(bd,a)}const hs=W({greater_:XB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n,t){let e=F(n,"a","greaterEqual","string_or_numeric"),s=F(t,"b","greaterEqual","string_or_numeric");[e,s]=Le(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(Au,a)}const Mr=W({greaterEqual_:YB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n){const e={input:F(n,"input","imag")};return P.runKernel(Ig,e)}const of=W({imag_:ZB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(n){const e={x:F(n,"x","isFinite")};return P.runKernel(Du,e)}const Uv=W({isFinite_:QB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n){const e={x:F(n,"x","isInf")};return P.runKernel(Ou,e)}const Wv=W({isInf_:JB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(n){const e={x:F(n,"x","isNaN")};return P.runKernel(_u,e)}const Gv=W({isNaN_:t4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(n,t=.2){const s={x:F(n,"x","leakyRelu")},a={alpha:t};return P.runKernel(xd,s,a)}const lf=W({leakyRelu_:e4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n,t){let e=F(n,"a","less","string_or_numeric"),s=F(t,"b","less","string_or_numeric");[e,s]=Le(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(vd,a)}const tu=W({less_:n4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(n,t){let e=F(n,"a","lessEqual","string_or_numeric"),s=F(t,"b","lessEqual","string_or_numeric");[e,s]=Le(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(wd,a)}const Bi=W({lessEqual_:s4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AI(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:t,num:e};return P.runKernel(Eg,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(n,t=5,e=1,s=1,a=.5){const r=F(n,"x","localResponseNormalization");D(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),D(Oo(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=r,l=!1;r.rank===3&&(l=!0,i=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const u={x:i},h={depthRadius:t,bias:e,alpha:s,beta:a},d=P.runKernel(Cd,u,h);return l?j(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Hv=W({localResponseNormalization_:a4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(n){const e={x:F(n,"x","log","float32")};return P.runKernel(Fu,e)}const xs=W({log_:r4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(n){const e={x:F(n,"x","log1p")};return P.runKernel(Lu,e)}const uf=W({log1p_:i4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(n){return D(Ni(n),()=>"The f passed in grad(f) must be a function"),(t,e)=>{const s=F(t,"x","tf.grad","string_or_numeric"),a=e!=null?F(e,"dy","tf.grad"):null;return P.tidy(()=>{const{value:r,grads:i}=P.gradients(()=>n(s),[s],a);return a!=null&&An(r.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),by(i),i[0]})}}function l4(n){return D(Ni(n),()=>"The f passed in grads(f) must be a function"),(t,e)=>{D(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const s=Mh(t,"args","tf.grads","string_or_numeric"),a=e!=null?F(e,"dy","tf.grads"):null;return P.tidy(()=>{const{value:r,grads:i}=P.gradients(()=>n(...s),s,a);return a!=null&&An(r.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),by(i),i})}}function u4(n){return D(Ni(n),()=>"The f passed in valueAndGrad(f) must be a function"),(t,e)=>{D(t instanceof he,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),D(e==null||e instanceof he,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:a}=P.gradients(()=>n(t),[t],e);return by(s),{grad:s[0],value:a}}}function c4(n){return D(Ni(n),()=>"The f passed in valueAndGrads(f) must be a function"),(t,e)=>{D(Array.isArray(t)&&t.every(a=>a instanceof he),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),D(e==null||e instanceof he,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=P.gradients(()=>n(...t),t,e);return e!=null&&An(s.value.shape,e.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),by(s.grads),s}}function RI(n,t){D(Ni(n),()=>"The f passed in variableGrads(f) must be a function"),D(t==null||Array.isArray(t)&&t.every(h=>h instanceof zh),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const h in P.registeredVariables)t.push(P.registeredVariables[h])}const s=e?t.filter(h=>!h.trainable):null,a=t.length;t=t.filter(h=>h.trainable),D(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const r=!0,{value:i,grads:l}=P.gradients(n,t,null,r);D(l.some(h=>h!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const u={};return t.forEach((h,d)=>{l[d]!=null&&(u[h.name]=l[d])}),s!=null&&s.forEach(h=>u[h.name]=null),{value:i,grads:u}}function tr(n){return P.customGrad(n)}function by(n){if(n.filter(e=>e==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(n){const e={x:F(n,"x","neg")};return P.runKernel(Dd,e)}const ke=W({neg_:h4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(n){const e={x:F(n,"x","softplus")};return P.runKernel(Qu,e)}const Qo=W({softplus_:d4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n){const t=F(n,"x","logSigmoid");return tr(s=>({value:ke(Qo(ke(s))),gradFunc:i=>H(i,ua(ke(s)))}))(t)}const jv=W({logSigmoid_:f4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n,t){let e=F(n,"a","sub"),s=F(t,"b","sub");[e,s]=Le(e,s);const a={a:e,b:s};return P.runKernel(ec,a)}const kt=W({sub_:p4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(n,t=-1){const e=F(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return tr((a,r)=>{const l=zs(a,t,!0),u=kt(a,l),h=kt(wt(u,"float32"),xs(Et(ls(u),t,!0)));return r([h]),{value:h,gradFunc:(p,m)=>{const[y]=m,b=!0,v=ls(y);return kt(p,H(Et(p,t,b),v))}}})(e)}const xy=W({logSoftmax_:m4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g4(n,t=null,e=!1){const s=F(n,"x","logSumExp"),a=Kt(t,s.shape),r=zs(s,a,!0),i=kt(s,r),l=ls(i),u=Et(l,a),h=xs(u),d=yt(j(r,h.shape),h);if(e){const p=qe(d.shape,a);return j(d,p)}return d}const cf=W({logSumExp_:g4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(n,t){const e=F(n,"a","logicalAnd","bool"),s=F(t,"b","logicalAnd","bool");Pt(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(Sd,a)}const Ia=W({logicalAnd_:y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n){const e={x:F(n,"x","logicalNot","bool")};return P.runKernel(Nd,e)}const hf=W({logicalNot_:b4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(n,t){const e=F(n,"a","logicalOr","bool"),s=F(t,"b","logicalOr","bool");Pt(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(Td,a)}const vy=W({logicalOr_:x4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(n,t){const e=F(n,"a","logicalXor","bool"),s=F(t,"b","logicalXor","bool");return Pt(e.shape,s.shape),Ia(vy(n,t),hf(Ia(n,t)))}const qv=W({logicalXor_:v4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yp=2147483648;function w4(n,t,e="left"){const s=F(n,"sortedSequence","searchSorted"),a=F(t,"values","searchSorted"),r=s.shape[s.shape.length-1],i=a.shape[a.shape.length-1],l=j(s,[-1,r]),u=j(a,[-1,i]);if(l.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(l.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ht(u.shape)>=Yp)throw new Error(`values tensor size must less than ${Yp}`);if(l.shape[1]>=Yp)throw new Error(`trailing dim_size must less than ${Yp} for int32 output type, was ${l.shape[1]}`);const h={sortedSequence:l,values:u},d={side:e};return P.runKernel(qg,h,d)}const wy=W({searchSorted_:w4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DI(n,t){return wy(n,t,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n,t,e,s,a){const r=F(n,"x","maxPool"),i=1;let l=r,u=!1;r.rank===3&&(u=!0,l=j(r,[1,r.shape[0],r.shape[1],r.shape[2]])),D(l.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`),D(Rn(e,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),Yn("maxPool",s,a);const h={x:l},d={filterSize:t,strides:e,pad:s,dimRoundingMode:a},p=P.runKernel(kd,h,d);return u?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const df=W({maxPool_:S4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(n,t=[1,1,1],e,s,a,r="NDHWC"){const i=F(n,"x","maxPool3d");let l=i,u=!1;i.rank===4&&(u=!0,l=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),D(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Yn("maxPool3d",s,a);const h={x:l},d={filterSize:t,strides:e,pad:s,dimRoundingMode:a,dataFormat:r},p=P.runKernel(Id,h,d);return u?j(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Kv=W({maxPool3d_:N4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n,t,e,s,a=!1){const i={x:F(n,"x","maxPoolWithArgmax")},l={filterSize:t,strides:e,pad:s,includeBatchInIndex:a},u=P.runKernel(Og,i,l);return{result:u[0],indexes:u[1]}}const OI=W({maxPoolWithArgmax_:T4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(n,t){let e=F(n,"a","maximum"),s=F(t,"b","maximum");[e,s]=Le(e,s),e.dtype==="bool"&&(e=wt(e,"int32"),s=wt(s,"int32")),Pt(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(zu,a)}const sr=W({maximum_:C4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $4(n,t=null,e=!1){const a={x:F(n,"x","mean")},r={axis:t,keepDims:e};return P.runKernel(Ed,a,r)}const _e=W({mean_:$4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Je(n,t="float32"){if(Ns(n),t==="complex64"){const s=Je(n,"float32"),a=Je(n,"float32");return Ar(s,a)}const e=En(ht(n),t);return P.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ss(n,t="float32"){if(Ns(n),t==="complex64"){const s=ss(n,"float32"),a=Je(n,"float32");return Ar(s,a)}const e=ng(ht(n),t);return P.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _I(n,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=F(n,"x","meshgrid",n instanceof he?n.dtype:"float32");if(t===void 0)return[s];let a=F(t,"y","meshgrid",t instanceof he?t.dtype:"float32");const r=ht(s.shape),i=ht(a.shape);return e==="xy"?(s=j(s,[1,-1]),a=j(a,[-1,1]),[jt(ss([i,1],s.dtype),s),jt(a,ss([1,r],a.dtype))]):(s=j(s,[-1,1]),a=j(a,[1,-1]),[jt(s,ss([1,i],s.dtype)),jt(ss([r,1],a.dtype),a)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(n,t){let e=F(n,"a","minimum"),s=F(t,"b","minimum");[e,s]=Le(e,s),e.dtype==="bool"&&(e=wt(e,"int32"),s=wt(s,"int32")),Pt(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(Mu,a)}const Ei=W({minimum_:k4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(n,t,e){D(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=F(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const a=e==="reflect"?1:0;for(let l=0;l<s.rank;l++)D(t[l].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(t[l][0]>=0&&t[l][0]<=s.shape[l]-a&&t[l][1]>=0&&t[l][1]<=s.shape[l]-a,()=>`Padding in dimension ${l} cannot be greater than or equal to ${s.shape[l]-a} or less than 0 for input of shape ${s.shape}`);const r={paddings:t,mode:e},i={x:s};return P.runKernel(Rd,i,r)}const Xv=W({mirrorPad_:I4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(n,t){let e=F(n,"a","mod"),s=F(t,"b","mod");[e,s]=Le(e,s);const a={a:e,b:s};return P.runKernel(Bu,a)}const Yv=W({mod_:E4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n,t=null,e=!1){n=F(n,"x","moments");const s=Kt(t,n.shape),a=_e(n,s,e);let r=a.shape;e||(r=qe(a.shape,s));const i=be(kt(wt(n,"float32"),j(a,r))),l=_e(i,s,e);return{mean:a,variance:l}}const ff=W({moments_:A4});function R4(n,t,e,s){const a=F(t,"data","multiRNNCell"),r=Mh(e,"c","multiRNNCell"),i=Mh(s,"h","multiRNNCell");let l=a;const u=[];for(let p=0;p<n.length;p++){const m=n[p](l,r[p],i[p]);u.push(m[0]),u.push(m[1]),l=m[1]}const h=[],d=[];for(let p=0;p<u.length;p+=2)h.push(u[p]),d.push(u[p+1]);return[h,d]}const FI=W({multiRNNCell_:R4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(n,t,e,s=!1){const a=F(n,"logits","multinomial"),r=a.size,i=a.rank;if(r<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${r}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);e=e||Math.random();const u={logits:i===1?j(a,[1,-1]):a},h={numSamples:t,seed:e,normalized:s},d=P.runKernel(_g,u,h);return i===1?j(d,[d.size]):d}const LI=W({multinomial_:D4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(n,t){let e=F(n,"a","notEqual","string_or_numeric"),s=F(t,"b","notEqual","string_or_numeric");[e,s]=Le(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(Od,a)}const Bo=W({notEqual_:O4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(n,t,e=1,s=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:F(n,"indices","oneHot","int32")},l={dtype:a,depth:t,onValue:e,offValue:s};return P.runKernel(Fd,i,l)}const eu=W({oneHot_:_4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F4(n){const e={x:F(n,"x","onesLike")};return P.runKernel(_d,e)}const vs=W({onesLike_:F4});function L4(n,t){const e=F(n,"v1","outerProduct"),s=F(t,"v2","outerProduct");D(e.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${s.rank}.`);const a=j(e,[-1,1]),r=j(s,[1,-1]);return jt(a,r)}const zI=W({outerProduct_:L4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z4(n,t,e=0){const s=F(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:e},r={x:s};return P.runKernel(zd,r,a)}const Br=W({pad_:z4});function M4(n,t,e=0){return D(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Br(n,[t],e)}const MI=W({pad1d_:M4});function B4(n,t,e=0){return D(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Br(n,t,e)}const BI=W({pad2d_:B4});function V4(n,t,e=0){return D(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Br(n,t,e)}const Zv=W({pad3d_:V4});function P4(n,t,e=0){return D(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Br(n,t,e)}const VI=W({pad4d_:P4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(n,t,e){const s=F(n,"x","spaceToBatchND");D(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),D(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),D(s.shape.reduce((i,l,u)=>u>0&&u<=t.length?i&&(l+e[u-1][0]+e[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const a={x:s},r={blockShape:t,paddings:e};return P.runKernel(qd,a,r)}const pf=W({spaceToBatchND_:U4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(n,t,e,s,a,r,i){a==null&&(a=[1,1]),r==null&&(r=1),s===0&&(s="valid");const l=F(n,"x","maxPool");let u=l,h=!1;l.rank===3&&(h=!0,u=j(l,[1,l.shape[0],l.shape[1],l.shape[2]])),D(Rn(r,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`);const d=ha(u.shape,t,r,a,s),p=[d.dilationHeight,d.dilationWidth];let m;s==="same"?m=H4([d.filterHeight,d.filterWidth],p):m=[[0,0],[0,0]];const y=p[0]===1&&p[1]===1,[b,v]=G4([d.inHeight,d.inWidth],p,m),w=y?s:"valid",S=y?u:pf(u,p,b),$=(e==="avg"?()=>sf(S,t,r,w,i):()=>df(S,t,r,w,i))(),C=y?$:af($,p,v);return h?j(C,[C.shape[1],C.shape[2],C.shape[3]]):C}function G4(n,t,e){const s=e.map(d=>d[0]),a=e.map(d=>d[1]),r=n.concat(s,a),i=t.map((d,p)=>(d-r[p]%d)%d),l=a.map((d,p)=>d+i[p]),u=t.map((d,p)=>[s[p],l[p]]),h=t.map((d,p)=>[0,i[p]]);return[u,h]}function H4(n,t){const s=n.map((i,l)=>i+(i-1)*(t[l]-1)).map(i=>i-1),a=s.map(i=>Math.floor(i/2)),r=s.map((i,l)=>i-a[l]);return s.map((i,l)=>[a[l],r[l]])}const Qv=W({pool_:W4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(n,t){const e=F(n,"x","prelu"),s=F(t,"alpha","prelu"),a={x:e,alpha:s};return P.runKernel(Md,a)}const mf=W({prelu_:j4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4(n,t=null,e=!1){let s=F(n,"x","prod");s.dtype==="bool"&&(s=wt(s,"int32"));const a={x:s},r={axis:t,keepDims:e};return P.runKernel(Bd,a,r)}const Jv=W({prod_:q4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(n,t,e,s){const a=n.map((d,p)=>F(d,`tensors${p}`,"raggedGather","int32")),r=F(t,"paramsDenseValues","raggedGather"),i=F(e,"indices","raggedGather","int32"),l={paramsNestedSplits:a,paramsDenseValues:r,indices:i},u={outputRaggedRank:s},h=P.runKernel(Mg,l,u);return{outputNestedSplits:h.slice(0,h.length-1),outputDenseValues:h[h.length-1]}}const PI=W({raggedGather_:K4});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(n,t,e){const s=F(n,"starts","raggedRange"),a=F(t,"limits","raggedRange",s.dtype),r=F(e,"deltas","raggedRange",s.dtype),i={starts:s,limits:a,deltas:r},l=P.runKernel(Bg,i);return{rtNestedSplits:l[0],rtDenseValues:l[1]}}const UI=W({raggedRange_:X4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(n,t,e,s,a){const r=F(n,"shape","raggedTensorToTensor","int32"),i=F(t,"values","raggedTensorToTensor"),l=F(e,"defaultValue","raggedTensorToTensor",i.dtype),u=s.map((p,m)=>F(p,`tensors${m}`,"raggedTensorToTensor","int32")),h={shape:r,values:i,defaultValue:l,rowPartitionTensors:u},d={rowPartitionTypes:a};return P.runKernel(Vg,h,d)}const WI=W({raggedTensorToTensor_:Y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(n,t,e){Ns(n);const s=ht(n);let a=null;if(e==null||e==="float32")a=new Float32Array(s);else if(e==="int32")a=new Int32Array(s);else if(e==="bool")a=new Uint8Array(s);else throw new Error(`Unknown data type ${e}`);for(let r=0;r<s;r++)a[r]=t();return P.makeTensor(a,n,e)}const GI=W({rand_:Z4});var fm={exports:{}},Q4=fm.exports,z2;function J4(){return z2||(z2=1,function(n){(function(t,e,s){function a(u){var h=this,d=l();h.next=function(){var p=2091639*h.s0+h.c*23283064365386963e-26;return h.s0=h.s1,h.s1=h.s2,h.s2=p-(h.c=p|0)},h.c=1,h.s0=d(" "),h.s1=d(" "),h.s2=d(" "),h.s0-=d(u),h.s0<0&&(h.s0+=1),h.s1-=d(u),h.s1<0&&(h.s1+=1),h.s2-=d(u),h.s2<0&&(h.s2+=1),d=null}function r(u,h){return h.c=u.c,h.s0=u.s0,h.s1=u.s1,h.s2=u.s2,h}function i(u,h){var d=new a(u),p=h&&h.state,m=d.next;return m.int32=function(){return d.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,p&&(typeof p=="object"&&r(p,d),m.state=function(){return r(d,{})}),m}function l(){var u=4022871197,h=function(d){d=String(d);for(var p=0;p<d.length;p++){u+=d.charCodeAt(p);var m=.02519603282416938*u;u=m>>>0,m-=u,m*=u,u=m>>>0,m-=u,u+=m*4294967296}return(u>>>0)*23283064365386963e-26};return h}e&&e.exports?e.exports=i:this.alea=i})(Q4,n)}(fm)),fm.exports}var pm={exports:{}},tV=pm.exports,M2;function eV(){return M2||(M2=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var p=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^p^p>>>8},l===(l|0)?u.x=l:h+=l;for(var d=0;d<h.length+64;d++)u.x^=h.charCodeAt(d)|0,u.next()}function r(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function i(l,u){var h=new a(l),d=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,d&&(typeof d=="object"&&r(d,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xor128=i})(tV,n)}(pm)),pm.exports}var mm={exports:{}},nV=mm.exports,B2;function sV(){return B2||(B2=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.next=function(){var p=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(p^p<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:h+=l;for(var d=0;d<h.length+64;d++)u.x^=h.charCodeAt(d)|0,d==h.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function r(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function i(l,u){var h=new a(l),d=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,d&&(typeof d=="object"&&r(d,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xorwow=i})(nV,n)}(mm)),mm.exports}var gm={exports:{}},aV=gm.exports,V2;function rV(){return V2||(V2=1,function(n){(function(t,e,s){function a(l){var u=this;u.next=function(){var d=u.x,p=u.i,m,y;return m=d[p],m^=m>>>7,y=m^m<<24,m=d[p+1&7],y^=m^m>>>10,m=d[p+3&7],y^=m^m>>>3,m=d[p+4&7],y^=m^m<<7,m=d[p+7&7],m=m^m<<13,y^=m^m<<9,d[p]=y,u.i=p+1&7,y};function h(d,p){var m,y=[];if(p===(p|0))y[0]=p;else for(p=""+p,m=0;m<p.length;++m)y[m&7]=y[m&7]<<15^p.charCodeAt(m)+y[m+1&7]<<13;for(;y.length<8;)y.push(0);for(m=0;m<8&&y[m]===0;++m);for(m==8?y[7]=-1:y[m],d.x=y,d.i=0,m=256;m>0;--m)d.next()}h(u,l)}function r(l,u){return u.x=l.x.slice(),u.i=l.i,u}function i(l,u){l==null&&(l=+new Date);var h=new a(l),d=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,d&&(d.x&&r(d,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xorshift7=i})(aV,n)}(gm)),gm.exports}var ym={exports:{}},iV=ym.exports,P2;function oV(){return P2||(P2=1,function(n){(function(t,e,s){function a(l){var u=this;u.next=function(){var d=u.w,p=u.X,m=u.i,y,b;return u.w=d=d+1640531527|0,b=p[m+34&127],y=p[m=m+1&127],b^=b<<13,y^=y<<17,b^=b>>>15,y^=y>>>12,b=p[m]=b^y,u.i=m,b+(d^d>>>16)|0};function h(d,p){var m,y,b,v,w,S=[],T=128;for(p===(p|0)?(y=p,p=null):(p=p+"\0",y=0,T=Math.max(T,p.length)),b=0,v=-32;v<T;++v)p&&(y^=p.charCodeAt((v+32)%p.length)),v===0&&(w=y),y^=y<<10,y^=y>>>15,y^=y<<4,y^=y>>>13,v>=0&&(w=w+1640531527|0,m=S[v&127]^=y+w,b=m==0?b+1:0);for(b>=128&&(S[(p&&p.length||0)&127]=-1),b=127,v=4*128;v>0;--v)y=S[b+34&127],m=S[b=b+1&127],y^=y<<13,m^=m<<17,y^=y>>>15,m^=m>>>12,S[b]=y^m;d.w=w,d.X=S,d.i=b}h(u,l)}function r(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function i(l,u){l==null&&(l=+new Date);var h=new a(l),d=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,d&&(d.X&&r(d,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xor4096=i})(iV,n)}(ym)),ym.exports}var bm={exports:{}},lV=bm.exports,U2;function uV(){return U2||(U2=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.next=function(){var p=u.b,m=u.c,y=u.d,b=u.a;return p=p<<25^p>>>7^m,m=m-y|0,y=y<<24^y>>>8^b,b=b-p|0,u.b=p=p<<20^p>>>12^m,u.c=m=m-y|0,u.d=y<<16^m>>>16^b,u.a=b-p|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):h+=l;for(var d=0;d<h.length+20;d++)u.b^=h.charCodeAt(d)|0,u.next()}function r(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function i(l,u){var h=new a(l),d=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,d&&(typeof d=="object"&&r(d,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.tychei=i})(lV,n)}(bm)),bm.exports}var xm={exports:{}};const cV={},hV=Object.freeze(Object.defineProperty({__proto__:null,default:cV},Symbol.toStringTag,{value:"Module"})),dV=mL(hV);var fV=xm.exports,W2;function pV(){return W2||(W2=1,function(n){(function(t,e,s){var a=256,r=6,i=52,l="random",u=s.pow(a,r),h=s.pow(2,i),d=h*2,p=a-1,m;function y(C,I,R){var L=[];I=I==!0?{entropy:!0}:I||{};var M=S(w(I.entropy?[C,$(e)]:C??T(),3),L),O=new b(L),_=function(){for(var A=O.g(r),G=u,X=0;A<h;)A=(A+X)*a,G*=a,X=O.g(1);for(;A>=d;)A/=2,G/=2,X>>>=1;return(A+X)/G};return _.int32=function(){return O.g(4)|0},_.quick=function(){return O.g(4)/4294967296},_.double=_,S($(O.S),e),(I.pass||R||function(A,G,X,tt){return tt&&(tt.S&&v(tt,O),A.state=function(){return v(O,{})}),X?(s[l]=A,G):A})(_,M,"global"in I?I.global:this==s,I.state)}function b(C){var I,R=C.length,L=this,M=0,O=L.i=L.j=0,_=L.S=[];for(R||(C=[R++]);M<a;)_[M]=M++;for(M=0;M<a;M++)_[M]=_[O=p&O+C[M%R]+(I=_[M])],_[O]=I;(L.g=function(A){for(var G,X=0,tt=L.i,Q=L.j,U=L.S;A--;)G=U[tt=p&tt+1],X=X*a+U[p&(U[tt]=U[Q=p&Q+G])+(U[Q]=G)];return L.i=tt,L.j=Q,X})(a)}function v(C,I){return I.i=C.i,I.j=C.j,I.S=C.S.slice(),I}function w(C,I){var R=[],L=typeof C,M;if(I&&L=="object")for(M in C)try{R.push(w(C[M],I-1))}catch{}return R.length?R:L=="string"?C:C+"\0"}function S(C,I){for(var R=C+"",L,M=0;M<R.length;)I[p&M]=p&(L^=I[p&M]*19)+R.charCodeAt(M++);return $(I)}function T(){try{var C;return m&&(C=m.randomBytes)?C=C(a):(C=new Uint8Array(a),(t.crypto||t.msCrypto).getRandomValues(C)),$(C)}catch{var I=t.navigator,R=I&&I.plugins;return[+new Date,t,R,t.screen,$(e)]}}function $(C){return String.fromCharCode.apply(0,C)}if(S(s.random(),e),n.exports){n.exports=y;try{m=dV}catch{}}else s["seed"+l]=y})(typeof self<"u"?self:fV,[],Math)}(xm)),xm.exports}var Ox,G2;function mV(){if(G2)return Ox;G2=1;var n=J4(),t=eV(),e=sV(),s=rV(),a=oV(),r=uV(),i=pV();return i.alea=n,i.xor128=t,i.xorwow=e,i.xorshift7=s,i.xor4096=a,i.tychei=r,Ox=i,Ox}var Sy=mV();/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gV=.001,HI=.1;function yV(n,t,e){return e==null&&(e=tw()),p1(n,t,(s,a)=>ew(s,a,e))}function tw(){return P.backend.floatPrecision()===32?gV:HI}function p1(n,t,e){let s=!0;if((gn(n)||gn(t))&&(s=!1),gn(n)&&gn(t)&&(s=!0),s){const i=n.constructor.name,l=t.constructor.name;if(i!==l)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${l}`)}if(Array.isArray(n)&&Array.isArray(t)){const i=Qa(n),l=Qa(t);if(!Zt(i,l))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${l}]`)}const a=gn(n)?n:Za(n),r=gn(t)?t:Za(t);if(a.length!==r.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${r.length}.
Actual:   ${a}.
Expected: ${r}.`);for(let i=0;i<r.length;++i){const l=a[i],u=r[i];if(!e(l,u))throw new Error(`Arrays differ: actual[${i}] = ${l}, expected[${i}] = ${u}.
Actual:   ${a}.
Expected: ${r}.`)}typeof expect<"u"&&expect().nothing()}function bV(n,t){n().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function xV(n,t){const e=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ga(n)||Ga(n[0])||Ga(t)||Ga(t[0])?p1(n,e,(s,a)=>s==a):p1(n,t,(s,a)=>ew(s,a,0))}function vV(n,t,e){if(e==null&&(e=tw()),!ew(n,t,e))throw new Error(`Numbers differ: actual === ${n}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function ew(n,t,e){return!isFinite(n)&&!isFinite(t)?!0:!(isNaN(n)||isNaN(t)||Math.abs(n-t)>e)}function wV(n,t,e){for(let s=0;s<n.length;s++)if(n[s]<t||n[s]>e)throw new Error(`Value out of range:${n[s]} low: ${t}, high: ${e}`)}function SV(n,t){const e=new Float32Array(n),s=new Float32Array(t);if(e.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${e.length}`);for(let a=0;a<s.length;a++)if(e[a]!==s[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${s[a]} but got ${e[a]} instead`)}function jI(n){for(let t=0;t<n.length;t++){const e=n[t];Array.isArray(e)?jI(e):n[t]=ja(e)}return n}function NV(n){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(n),new Promise(e=>{t.addEventListener("loadeddata",s=>e(t)),t.load()})}async function TV(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(t=>{n.requestVideoFrameCallback(t)})}const CV=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:HI,createVideoElement:NV,encodeStrings:jI,expectArrayBuffersEqual:SV,expectArraysClose:yV,expectArraysEqual:xV,expectNumbersClose:vV,expectPromiseToFail:bV,expectValuesInRange:wV,play:TV,testEpsilon:tw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nw{constructor(t,e,s,a,r){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=r||Math.random();this.random=Sy.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const a=this.nextVal;return this.nextVal=NaN,a}let t,e,s=!1;for(;!s;){let a,r,i;do a=2*this.random()-1,r=2*this.random()-1,i=a*a+r*r;while(i>=1||i===0);const l=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*a*l,e=this.mean+this.stdDev*r*l,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class $V{constructor(t,e,s,a){this.alpha=t,this.beta=1/e,this.dtype=s;const r=a||Math.random();this.randu=Sy.alea(r.toString()),this.randn=new nw(0,1,s,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,s,a,r,i;for(;;){do a=this.randn.nextValue(),i=1+this.c*a;while(i<=0);if(i*=i*i,t=a*a,e=1-.331*t*t,s=.5*t+this.d*(1-i+Math.log(i)),r=this.randu(),r<e||Math.log(r)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}}class kV{constructor(t=0,e=1,s,a){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,a==null&&(a=Math.random()),typeof a=="number"&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Sy.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(n,t,e=1,s="float32",a){if(Ns(n),e==null&&(e=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const r=new $V(t,e,s,a),i=Wt(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const qI=W({randomGamma_:IV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(n,t=0,e=1,s,a){if(Ns(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new nw(t,e,s,!1,a),i=Wt(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const Ny=W({randomNormal_:EV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(n,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return Ny(n,0,1,t,e)}const KI=W({randomStandardNormal_:AV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n,t=0,e=1,s="float32",a){Ns(n);const r=Wt(n,s),i=new kV(t,e,null,a);for(let l=0;l<r.values.length;l++)r.values[l]=i.nextValue();return r.toTensor()}const Vi=W({randomUniform_:RV});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n,t,e,s){return Vi(n,t,e,"int32",s)}const XI=W({randomUniformInt_:DV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vo(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const a={start:n,stop:t,step:e,dtype:s};return P.runKernel(Pg,{},a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(n){const e={input:F(n,"input","real")};return P.runKernel(Ug,e)}const nu=W({real_:OV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(n){const e={x:F(n,"x","reciprocal")};return P.runKernel(Uu,e)}const sw=W({reciprocal_:_V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(n){const e={x:F(n,"x","relu")};return P.runKernel(Wu,e)}const Oa=W({relu_:FV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(n){const e={x:F(n,"x","relu6")};return P.runKernel(Gu,e)}const Ty=W({relu6_:LV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(n,t){const s={x:F(n,"x","reverse")},a={dims:t};return P.runKernel(Wd,s,a)}const Ms=W({reverse_:zV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n){const t=F(n,"x","reverse");return D(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Ms(t,0)}const YI=W({reverse1d_:MV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(n,t){const e=F(n,"x","reverse");return D(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),Ms(e,t)}const ZI=W({reverse2d_:BV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(n,t){const e=F(n,"x","reverse");return D(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),Ms(e,t)}const QI=W({reverse3d_:VV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n,t){const e=F(n,"x","reverse");return D(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),Ms(e,t)}const JI=W({reverse4d_:PV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n){const e={x:F(n,"x","round")};return P.runKernel(Hu,e)}const Cy=W({round_:UV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(n){const e={x:F(n,"x","rsqrt","float32")};return P.runKernel(ju,e)}const $y=W({rsqrt_:WV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(n){const e={x:F(n,"x","selu")};return P.runKernel(qu,e)}const ky=W({selu_:GV});function HV(n,t,e,s,a,r=[1,1],i="NHWC"){const l=F(n,"x","separableConv2d"),u=F(t,"depthwiseFilter","separableConv2d"),h=F(e,"pointwiseFilter","separableConv2d");let d=l,p=!1;if(l.rank===3&&(p=!0,d=j(l,[1,l.shape[0],l.shape[1],l.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(d.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),D(h.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),D(h.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${h.shape[0]}.`),D(h.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${h.shape[1]}.`);const m=u.shape[2],y=u.shape[3];D(h.shape[2]===m*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*y}, but got ${h.shape[2]}.`);const b=oc(d,u,s,a,i,r),w=Rr(b,h,1,"valid",i);return p?j(w,[w.shape[1],w.shape[2],w.shape[3]]):w}const Iy=W({separableConv2d_:HV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function jV(n,t){const e=F(n,"x","setdiff1d"),s=F(t,"y","setdiff1d");D(e.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${s.dtype}).`),D(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),D(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const a=await e.data(),r=await s.data(),i=new Set(r);let l=0;for(let d=0;d<a.length;d++)i.has(a[d])||l++;const u=new tn([l],e.dtype),h=new tn([l],"int32");for(let d=0,p=0;d<a.length;d++)i.has(a[d])||(u.values[p]=a[d],h.values[p]=d,p++);return[u.toTensor(),h.toTensor()]}const tE=jV;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(n){const e={x:F(n,"x","sign")};return P.runKernel(Yu,e)}const aw=W({sign_:qV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(n){const e={x:F(n,"x","sin","float32")};return P.runKernel(Ku,e)}const Ey=W({sin_:KV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const e={x:F(n,"x","sinh")};return P.runKernel(Xu,e)}const Ay=W({sinh_:XV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n,t,e){const s=F(n,"x","slice1d");return D(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),ee(s,[t],[e])}const gf=W({slice1d_:YV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n,t,e){const s=F(n,"x","slice2d");return D(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),ee(s,t,e)}const Ry=W({slice2d_:ZV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(n,t,e){const s=F(n,"x","slice3d");return D(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),ee(s,t,e)}const yf=W({slice3d_:QV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n,t,e){const s=F(n,"x","slice4d");return D(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),ee(s,t,e)}const su=W({slice4d_:JV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(n,t=-1){const e=F(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},a={dim:t};return P.runKernel(Xd,s,a)}const bf=W({softmax_:tP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eP(n){D(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return P.runKernel(Ng,t)}const xf=W({fft_:eP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nP(n){D(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return P.runKernel(kg,t)}const au=W({ifft_:nP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const a=j(n,[e,t]);s=au(a)}else{const a=[e,2*(t-1)],r=j(nu(n),[e,t]),i=j(of(n),[e,t]),l=Ms(ee(r,[0,1],[e,t-2]),1),u=H(Ms(ee(i,[0,1],[e,t-2]),1),_t(-1)),h=Pe([r,l],1),d=Pe([i,u],1),p=j(Ar(h,d),[a[0],a[1]]);s=au(p)}if(s=nu(s),n.rank===3&&n.shape[0]!==0){const a=s,r=n.shape[0];s=j(s,[r,s.shape[0]/r,s.shape[1]]),a.dispose()}return s}const Dy=W({irfft_:sP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n,t,e=0){const a={x:F(n,"x","split")},r={numOrSizeSplits:t,axis:e};return P.runKernel(Kd,a,r)}const as=W({split_:aP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rP(n,t){D(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let a;if(t!=null&&t<e){const b=n.shape.map(w=>0),v=n.shape.map(w=>w);v[n.shape.length-1]=t,a=ee(n,b,v),e=t}else if(t!=null&&t>e){const b=n.shape.map(v=>v);b[n.shape.length-1]=t-e,a=Pe([n,Je(b)],n.shape.length-1),e=t}else a=n;const r=ne(a),i=j(Ar(a,r),[s,e]),l=xf(i),u=Math.floor(e/2)+1,h=nu(l),d=of(l),p=as(h,[u,e-u],h.shape.length-1),m=as(d,[u,e-u],d.shape.length-1),y=a.shape.slice();return y[a.shape.length-1]=u,j(Ar(p[0],m[0]),y)}const vf=W({rfft_:rP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP(n,t){let e=F(n,"a","squaredDifference"),s=F(t,"b","squaredDifference");[e,s]=Le(e,s),Pt(e.shape,s.shape);const a={a:e,b:s},r={};return P.runKernel(tc,a,r)}const Oy=W({squaredDifference_:iP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(n,t){const e=F(n,"x","squeeze","string_or_numeric");return j(e,_r(e.shape,t).newShape)}const Vr=W({squeeze_:oP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n,t=0){const e=Mh(n,"tensors","stack","string_or_numeric");D(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&D(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,a={axis:t};return P.runKernel(Ld,s,a)}const us=W({stack_:lP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n,t=0){const s={x:F(n,"x","step")},a={alpha:t};return P.runKernel(rc,s,a)}const Jo=W({step_:uP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cP(n,t,e,s,a=0,r=0,i=0,l=0,u=0){const d={x:F(n,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:s,beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:l,shrinkAxisMask:u};return P.runKernel(ty,d,p)}const rw=W({stridedSlice_:cP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hP(n){const e={x:F(n,"x","tan","float32")};return P.runKernel(nc,e)}const iw=W({tan_:hP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mn(n,t){qo(n);const e=Qa(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Li(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ao(n,t,e){if(qo(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Qa(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Li(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ow(n,t,e){if(qo(n),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Qa(n,e);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Li(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eE(n,t,e){if(qo(n),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=Qa(n,e);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Li(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(n,t,e){if(qo(n),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=Qa(n,e);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Li(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sE(n,t,e){if(qo(n),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=Qa(n,e);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Li(n,t,s,e)}function lw(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${a}.`;if(e.rank<a)throw new Error(r+` update.rank < ${a}. `);if(n.length<s+(e.rank-a))throw new Error(r+` Output shape length < ${s+(e.rank-a)}`);if(e.rank!==a+n.length-s)throw new Error(r+` update.rank != ${a+n.length-s}`);for(let i=0;i<a;++i)if(e.shape[i]!==t.shape[i])throw new Error(r+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-a;++i)if(e.shape[i+a]!==n[i+s])throw new Error(r+` updates.shape[${i+a}] (${e.shape[i+a]}) != shape[${i+a}] (${n[i+a]})`)}function _y(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}lw(e,t,n)}function Pi(n,t,e){const s=t.shape.length,a=s>1?t.shape[s-1]:1,r=e.length;let i=1;for(let p=a;p<r;++p)i*=e[p];const l=a<1?1:a,u=ht(t.shape)/l,h=[...Lt(e.slice(0,a)),1],d=ht(e);return{sliceRank:a,numUpdates:u,sliceSize:i,strides:h,outputSize:d}}const dP=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:Pi,validateInput:_y,validateUpdateShape:lw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n,t,e){const s=F(n,"tensor","tensorScatterupdate"),a=F(t,"indices","tensorScatterupdate","int32"),r=F(e,"updates","tensorScatterupdate");if(_y(r,a,s.shape),s.dtype!==r.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${r.dtype}.`);const i={tensor:s,indices:a,updates:r},l={};return P.runKernel(jg,i,l)}const aE=W({tensorScatterUpdate_:fP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pP(n,t=1,e=!0){const s=F(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const a=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const r={x:s},i={k:t,sorted:e},[l,u]=P.runKernel(ay,r,i);return{values:l,indices:u}}const uw=W({topk_:pP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(n,t=0,e=1,s,a){if(Ns(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new nw(t,e,s,!0,a),i=Wt(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const Fy=W({truncatedNormal_:mP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n,t=0){const e=F(n,"x","unique","string_or_numeric");D(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},a={axis:t},[r,i]=P.runKernel(iy,s,a);return{values:r,indices:i}}const cw=W({unique_:gP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(n,t,e){const s=F(n,"x","unsortedSegmentSum"),a=F(t,"segmentIds","unsortedSegmentSum","int32");D(Oo(e),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:a},i={numSegments:e};return P.runKernel(Qd,r,i)}const Ly=W({unsortedSegmentSum_:yP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bP(n,t=0){const e=F(n,"x","unstack","string_or_numeric");D(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},a={axis:t};return P.runKernel(Zd,s,a)}const Bs=W({unstack_:bP});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(n,t){return wy(n,t,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hw(n,t=!0,e,s){return P.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zy(n,t){const e=[];for(let r=0;r<t.length;r++)t[r]&&e.push(r);const s=Wt(n,"int32"),a=Wt([e.length,n.length],"int32");for(let r=0;r<e.length;r++){const i=s.indexToLoc(e[r]),l=r*n.length;a.values.set(i,l)}return a.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xP(n){const t=F(n,"condition","whereAsync","bool"),e=await t.data(),s=zy(t.shape,e);return n!==t&&t.dispose(),s}const dw=xP;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function vP(n,t,e){const s=F(n,"tensor","boolMask"),a=F(t,"mask","boolMask","bool"),r=e??0,i=a.rank,l=s.shape;D(i>0,()=>"mask cannot be scalar"),An(l.slice(r,r+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let v=r;v<r+i;v++)u*=l[v];const h=l.slice(0,r).concat([u],l.slice(r+i)),d=j(s,h),p=j(a,[-1]),m=await dw(p),y=Vr(m,[1]),b=hc(d,y,r);return n!==s&&s.dispose(),t!==a&&a.dispose(),y.dispose(),d.dispose(),p.dispose(),m.dispose(),b}const iE=vP;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(n,t,e){const s=F(n,"x","transpose");if(t==null&&(t=s.shape.map((i,l)=>l).reverse()),D(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(i=>{D(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const a={x:s},r={perm:t};return s.dtype==="complex64"?nt(()=>{let i=nu(s),l=of(s);return i=P.runKernel(Io,{x:i},r),l=P.runKernel(Io,{x:l},r),e&&(l=ke(l)),Ar(i,l)}):P.runKernel(Io,a,r)}const Jt=W({transpose_:wP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(n,t,e,s,a=!0){const r=F(n,"v","movingAverage"),i=F(t,"x","movingAverage"),l=F(e,"decay","movingAverage");nI(r,i),D(Zt(r.shape,i.shape),()=>"Shape mismatch in v and x");const u=_t(1),h=kt(u,l);let d=H(kt(i,r),h);if(a){D(s!=null,()=>"When using zeroDebias: true, step is required.");const p=F(s,"step","movingAverage");d=At(d,kt(u,Ja(l,p)))}return yt(r,d)}const oE=W({movingAverage_:SP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NP(n,t,e){Ns(e);const s=F(n,"indices","scatterND","int32"),a=F(t,"updates","scatterND");_y(a,s,e);const r={indices:s,updates:a},i={shape:e};return P.runKernel(Hg,r,i)}const lE=W({scatterND_:NP});function TP(n,t,e,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const a=n.rank>0?n.shape[0]:1,r=n.rank>1?n.shape[1]:1;if(e.length!==r)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${r}.`);const i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CP(n,t,e,s=0){Ns(e);const a=F(n,"sparseIndices","sparseToDense","int32"),r=F(t,"sparseValues","sparseToDense","string_or_numeric"),i=F(s,"defaultValue","sparseToDense",r.dtype);TP(a,r,e,i);const l={sparseIndices:a,sparseValues:r,defaultValue:i},u={outputShape:e};return P.runKernel(Qg,l,u)}const uE=W({sparseToDense_:CP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $P(n,t){const e=F(t,"indices","gatherND","int32"),a={params:F(n,"x","gatherND","string_or_numeric"),indices:e};return P.runKernel($g,a)}const cE=W({gatherND_:$P});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kP(n,t){if(t==null)return n.shape.slice();if(Zt(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IP(n,t,e,s){const a=F(n,"x","dropout");if(D(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),D(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof he?a.clone():a;const r=kP(a,e),i=1-t,l=At(cc(yt(Vi(r,0,1,"float32",s),i)),i);return H(a,l)}const fw=W({dropout_:IP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pw(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function My(n,t,e){const s=1-n%2,a=new Float32Array(n);for(let r=0;r<n;++r){const i=2*Math.PI*r/(n+s-1);a[r]=t-e*Math.cos(i)}return Mn(a,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function EP(n,t,e=1){const s=F(n,"predictions","inTopK"),a=F(t,"targets","inTopK");D(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),D(s.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${a.rank}`),An(s.shape.slice(0,s.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=s.shape[s.shape.length-1];D(e>0&&e<=r,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${r}), but got ${e}`);const i=await s.data(),l=await a.data(),[u,h]=[i.length/r,r],d=bn("bool",u);for(let p=0;p<u;p++){const m=p*h,y=i.subarray(m,m+h),b=[];for(let v=0;v<y.length;v++)b.push({value:y[v],index:v});b.sort((v,w)=>w.value-v.value),d[p]=0;for(let v=0;v<e;v++)if(b[v].index===l[p]){d[p]=1;break}}return n!==s&&s.dispose(),t!==a&&a.dispose(),la(d,a.shape,"bool")}const hE=EP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AP(n,t,e,s,a,r="NHWC",i){let l=n;n.rank===3&&(l=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=j(t,[1,t.shape[0],t.shape[1],t.shape[2]])),D(l.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`),D(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),D(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const h=r==="NHWC"?l.shape[3]:l.shape[1],d=r==="NHWC"?u.shape[3]:u.shape[1];D(h===e[2],()=>`Error in conv2dDerFilter: depth of input ${h}) must match input depth in filter (${e[2]}.`),D(d===e[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${e[3]}).`),Yn("conv2dDerFilter",a,i);const p={x:l,dy:u},m={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,filterShape:e};return P.runKernel(cg,p,m)}const mw=W({conv2DBackpropFilter_:AP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function By(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return H(n,Jo(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Vy(n,t){let e=t;const s=en(n.shape,t.shape);return s.length>0&&(e=Et(e,s)),j(e,n.shape)}function Py(n,t,e,s){if(t==="linear")return n;if(t==="relu")return Oa(n);if(t==="elu")return lc(n);if(t==="relu6")return Ty(n);if(t==="prelu")return mf(n,e);if(t==="leakyrelu")return lf(n,s);if(t==="sigmoid")return ua(n);throw new Error(`Unknown fused activation ${t}.`)}const Uy=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RP({x:n,filter:t,strides:e,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:h,leakyreluAlpha:d}){if(u=u||"linear",Uy(P.state.gradientDepth,u)===!1){D(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let R=Rr(n,t,e,s,a,r,i);return l!=null&&(R=yt(R,l)),Py(R,u,h,d)}const p=F(n,"x","conv2d","float32"),m=F(t,"filter","conv2d","float32");let y=p,b=!1;p.rank===3&&(b=!0,y=j(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(y.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${y.rank}.`),D(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),Yn("fused conv2d",s,i);const v=a==="NHWC"?y.shape[3]:y.shape[1];D(m.shape[2]===v,()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${m.shape[2]}.`),D(Rn(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const w=vn(y.shape,m.shape,e,r,s,i);let S;l!=null&&(S=F(l,"bias","fused conv2d"),[S]=Le(S,p),a==="NHWC"?Pt(w.outShape,S.shape):(D(S.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${S.shape.length}.`),D(S.shape.length===0||S.shape[0]===w.outChannels||S.shape[0]===1,()=>`Error in fused conv2d: bias shape (${S.shape}) is not compatible with the number of output channels (${w.outChannels})`)));let T;if(h!=null){const R=h.shape;if(D(R.length<=1||R.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${R.length}.`),R.length===1)D(R[0]===1||R[0]===w.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${R}) is not compatible with the number of output channels (${w.outChannels}).`);else if(R.length===3)try{Pt(R,w.outShape)}catch{const M=`Error in fused conv2d: PReLU activation weights (${R}) is not compatible with the output shape of the conv2d (${w.outShape}).`;throw Error(M)}T=F(h,"prelu weights","fused conv2d")}const $=(R,L)=>{D(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);const[M,O,_,A]=L,G=By(R,_,u);D(ki(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const X=Dv(O.shape,G,M,e,s),tt=mw(O,G,M.shape,e,s),Q=[X,tt];if(A!=null){const U=Vy(A,G);Q.push(U)}return Q},C={x:y,filter:m,bias:S,preluActivationWeights:T},I={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:u,leakyreluAlpha:d};return l==null?tr((L,M,O)=>{let _=P.runKernel(Oh,C,I);return O([M,L,_]),b&&(_=j(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:$}})(y,m):tr((L,M,O,_)=>{let A=P.runKernel(Oh,C,I);return _([M,L,A,O]),b&&(A=j(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:$}})(y,m,S)}const dE=W({fusedConv2d_:RP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(n,t,e,s,a,r=[1,1],i){let l=n;n.rank===3&&(l=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=j(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:l,dy:u},d={strides:s,pad:a,dimRoundingMode:i,dilations:r,filterShape:e};return P.runKernel(yg,h,d)}const fE=W({depthwiseConv2dNativeBackpropFilter_:DP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OP(n,t,e,s,a,r=[1,1],i){let l=t,u=!1;t.rank===3&&(u=!0,l=j(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:l,filter:e},d={strides:s,pad:a,dimRoundingMode:i,dilations:r,inputShape:n},p=P.runKernel(bg,h,d);return u?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const pE=W({depthwiseConv2dNativeBackpropInput_:OP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P({x:n,filter:t,strides:e,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:h,leakyreluAlpha:d}){if(Uy(P.state.gradientDepth,u)===!1){let I=oc(n,t,e,s,a,r,i);return l!=null&&(I=yt(I,l)),Py(I,u,h,d)}const p=F(n,"x","depthwiseConv2d","float32"),m=F(t,"filter","depthwiseConv2d","float32");let y=p,b=!1;p.rank===3&&(b=!0,y=j(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(y.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${y.rank}.`),D(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),D(y.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${y.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),r==null&&(r=[1,1]),D(Rn(e,r),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),Yn("fused depthwiseConv2d",s,i);const v=vn(y.shape,m.shape,e,r,s,i,!0);let w;l!=null&&(w=F(l,"bias","fused conv2d"),[w]=Le(w,p),Pt(v.outShape,w.shape));let S;h!=null&&(S=F(h,"prelu weights","fused depthwiseConv2d"));const T=(I,R)=>{D(ki(r),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${r}'`);const[L,M,O,_]=R,A=By(I,O,u),G=pE(M.shape,A,L,e,s,r,i),X=fE(M,A,L.shape,e,s,r,i);if(_!=null){const tt=Vy(w,A);return[G,X,tt]}return[G,X]},$={x:y,filter:m,bias:w,preluActivationWeights:S},C={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:u,leakyreluAlpha:d};return l==null?tr((R,L,M)=>{let O=P.runKernel(_h,$,C);return M([L,R,O]),b&&(O=j(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:T}})(y,m):tr((R,L,M,O)=>{let _=P.runKernel(_h,$,C);return O([L,R,_,M]),b&&(_=j(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:T}})(y,m,w)}const FP=W({fusedDepthwiseConv2d_:_P});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LP({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:a,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:l=.2}){if(Uy(P.state.gradientDepth,r)===!1){let A=jt(n,t,e,s);return a!=null&&(A=yt(A,a)),Py(A,r,i,l)}let u=F(n,"a","fused matMul"),h=F(t,"b","fused matMul");[u,h]=Le(u,h);const d=e?u.shape[u.rank-2]:u.shape[u.rank-1],p=s?h.shape[h.rank-1]:h.shape[h.rank-2],m=e?u.shape[u.rank-1]:u.shape[u.rank-2],y=s?h.shape[h.rank-2]:h.shape[h.rank-1],b=u.shape.slice(0,-2),v=h.shape.slice(0,-2),w=ht(b),S=ht(v);D(d===p,()=>`Error in fused matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${u.shape} and ${h.shape} and transposeA=${e} and transposeB=${s} must match.`);const $=Pt(u.shape.slice(0,-2),h.shape.slice(0,-2)).concat([m,y]),C=e?j(u,[w,d,m]):j(u,[w,m,d]),I=s?j(h,[S,y,p]):j(h,[S,p,y]);let R;a!=null&&(R=F(a,"bias","fused matMul"),[R]=Le(R,u),Pt($,R.shape));let L;i!=null&&(L=F(i,"prelu weights","fused matMul"));const M=(A,G)=>{const[X,tt,Q,U]=G,et=By(j(A,Q.shape),Q,r);let Y,rt;if(!e&&!s?(Y=jt(et,tt,!1,!0),rt=jt(X,et,!0,!1)):!e&&s?(Y=jt(et,tt,!1,!1),rt=jt(et,X,!0,!1)):e&&!s?(Y=jt(tt,et,!1,!0),rt=jt(X,et,!1,!1)):(Y=jt(tt,et,!0,!0),rt=jt(et,X,!0,!0)),a!=null){const B=Vy(U,et);return[Y,rt,B]}else return[Y,rt]},O={a:C,b:I,bias:R,preluActivationWeights:L},_={transposeA:e,transposeB:s,activation:r,leakyreluAlpha:l};return a==null?tr((G,X,tt)=>{const Q=P.runKernel(Dh,O,_);return tt([G,X,Q]),{value:j(Q,$),gradFunc:M}})(C,I):tr((G,X,tt,Q)=>{const U=P.runKernel(Dh,O,_);return Q([G,X,U,tt]),{value:j(U,$),gradFunc:M}})(C,I,R)}const m1=W({fusedMatMul_:LP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mE=Object.freeze(Object.defineProperty({__proto__:null,conv2d:dE,depthwiseConv2d:FP,matMul:m1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zP(n){return My(n,.54,.46)}const MP=W({hammingWindow_:zP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BP(n){return My(n,.5,.5)}const gE=W({hannWindow_:BP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(n,t,e,s=!1,a=0){let r=0;const i=[];for(;r+t<=n.size;)i.push(ee(n,r,t)),r+=e;if(s)for(;r<n.size;){const l=r+t-n.size,u=Pe([ee(n,r,t-l),Zo([l],a)]);i.push(u),r+=e}return i.length===0?Ao([],[0,t]):j(Pe(i),[i.length,t])}const yE=W({frame_:VP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PP(n,t,e,s,a=gE){s==null&&(s=pw(t));const r=yE(n,t,e),i=H(r,a(t));return vf(i,s)}const UP=W({stft_:PP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WP(n,t,e,s,a="bilinear",r=0){const i=F(n,"image","cropAndResize"),l=F(t,"boxes","cropAndResize","float32"),u=F(e,"boxInd","cropAndResize","int32"),h=l.shape[0];D(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),D(l.rank===2&&l.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${l.shape}.`),D(u.rank===1&&u.shape[0]===h,()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${l.shape}.`),D(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),D(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),D(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);const d={image:i,boxes:l,boxInd:u},p={method:a,extrapolationValue:r,cropSize:s};return P.runKernel(pg,d,p)}const GP=W({cropAndResize_:WP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HP(n){const t=F(n,"image","flipLeftRight","float32");D(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return P.runKernel(Cg,e,{})}const jP=W({flipLeftRight_:HP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qP(n){const t=F(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];D(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),D(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const a=new Array(t.rank);return a.fill(1,0,e),a[e]=3,_s(t,a)}const KP=W({grayscaleToRGB_:qP});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XP(n){const t=F(n,"image","RGBToGrayscale"),e=t.rank-1,s=t.shape[e];D(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),D(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const a=t.dtype,r=wt(t,"float32"),i=Mn([.2989,.587,.114]);let l;switch(t.rank){case 2:l=wo("ij,j->i",r,i);break;case 3:l=wo("ijk,k->ij",r,i);break;case 4:l=wo("ijkl,l->ijk",r,i);break;case 5:l=wo("ijklm,m->ijkl",r,i);break;case 6:l=wo("ijklmn,n->ijklm",r,i);break;default:throw new Error("Not a valid tensor rank.")}return l=rn(l,-1),wt(l,a)}const YP=W({rgbToGrayscale_:XP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n,t,e=0,s=.5){const a=F(n,"image","rotateWithOffset","float32");D(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const r={image:a},i={radians:t,fillValue:e,center:s};return P.runKernel(oy,r,i)}const QP=W({rotateWithOffset_:ZP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dc(n,t,e,s,a,r){s==null&&(s=.5),a==null&&(a=Number.NEGATIVE_INFINITY),r==null&&(r=0);const i=n.shape[0];return e=Math.min(e,i),D(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),D(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),D(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),D(t.rank===1,()=>"scores must be a 1D tensor"),D(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),D(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:a,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JP(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY){const r=F(n,"boxes","nonMaxSuppression","float32"),i=F(t,"scores","nonMaxSuppression","float32"),l=dc(r,i,e,s,a);e=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold;const u={maxOutputSize:e,iouThreshold:s,scoreThreshold:a};return P.runKernel(Fg,{boxes:r,scores:i},u)}const tU=W({nonMaxSuppression_:JP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(n,t,e){const s=nU(n,t,e),a=s<0?-(s+1):s;n.splice(a,0,t)}function nU(n,t,e){return aU(n,t,e||sU)}function sU(n,t){return n>t?1:n<t?-1:0}function aU(n,t,e){let s=0,a=n.length,r=0,i=!1;for(;s<a;){r=s+(a-s>>>1);const l=e(t,n[r]);l>0?s=r+1:(a=r,i=!l)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wy(n,t,e,s,a){return gw(n,t,e,s,a,0)}function Gy(n,t,e,s,a,r){return gw(n,t,e,s,a,0,!1,r,!0)}function Hy(n,t,e,s,a,r){return gw(n,t,e,s,a,r,!0)}function gw(n,t,e,s,a,r,i=!1,l=!1,u=!1){const h=[];for(let w=0;w<t.length;w++)t[w]>a&&h.push({score:t[w],boxIndex:w,suppressBeginIndex:0});h.sort(H2);const d=r>0?-.5/r:0,p=[],m=[];for(;p.length<e&&h.length>0;){const w=h.pop(),{score:S,boxIndex:T,suppressBeginIndex:$}=w;if(S<a)break;let C=!1;for(let I=p.length-1;I>=$;--I){const R=rU(n,T,p[I]);if(R>=s){C=!0;break}if(w.score=w.score*iU(s,d,R),w.score<=a)break}w.suppressBeginIndex=p.length,C||(w.score===S?(p.push(T),m.push(w.score)):w.score>a&&eU(h,w,H2))}const y=p.length,b=e-y;l&&b>0&&(p.push(...new Array(b).fill(0)),m.push(...new Array(b).fill(0)));const v={selectedIndices:p};return i&&(v.selectedScores=m),u&&(v.validOutputs=y),v}function rU(n,t,e){const s=n.subarray(t*4,t*4+4),a=n.subarray(e*4,e*4+4),r=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),l=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),h=Math.min(a[0],a[2]),d=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),m=Math.max(a[1],a[3]),y=(l-r)*(u-i),b=(p-h)*(m-d);if(y<=0||b<=0)return 0;const v=Math.max(r,h),w=Math.max(i,d),S=Math.min(l,p),T=Math.min(u,m),$=Math.max(S-v,0)*Math.max(T-w,0);return $/(y+b-$)}function iU(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function H2(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function oU(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY){const r=F(n,"boxes","nonMaxSuppressionAsync"),i=F(t,"scores","nonMaxSuppressionAsync"),l=dc(r,i,e,s,a);e=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold;const u=await Promise.all([r.data(),i.data()]),h=u[0],d=u[1],{selectedIndices:p}=Wy(h,d,e,s,a);return r!==n&&r.dispose(),i!==t&&i.dispose(),Mn(p,"int32")}const lU=oU;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=F(n,"boxes","nonMaxSuppression"),l=F(t,"scores","nonMaxSuppression"),u=dc(i,l,e,s,a,r);e=u.maxOutputSize,s=u.iouThreshold,a=u.scoreThreshold,r=u.softNmsSigma;const h={boxes:i,scores:l},d={maxOutputSize:e,iouThreshold:s,scoreThreshold:a,softNmsSigma:r},p=P.runKernel(zg,h,d);return{selectedIndices:p[0],selectedScores:p[1]}}const cU=W({nonMaxSuppressionWithScore_:uU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function hU(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=F(n,"boxes","nonMaxSuppressionAsync"),l=F(t,"scores","nonMaxSuppressionAsync"),u=dc(i,l,e,s,a,r);e=u.maxOutputSize,s=u.iouThreshold,a=u.scoreThreshold,r=u.softNmsSigma;const h=await Promise.all([i.data(),l.data()]),d=h[0],p=h[1],{selectedIndices:m,selectedScores:y}=Hy(d,p,e,s,a,r);return i!==n&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Mn(m,"int32"),selectedScores:Mn(y)}}const dU=hU;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fU(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=F(n,"boxes","nonMaxSuppression"),l=F(t,"scores","nonMaxSuppression"),u=dc(i,l,e,s,a,null),h=u.maxOutputSize,d=u.iouThreshold,p=u.scoreThreshold,m={boxes:i,scores:l},y={maxOutputSize:h,iouThreshold:d,scoreThreshold:p,padToMaxOutputSize:r},b=P.runKernel(Lg,m,y);return{selectedIndices:b[0],validOutputs:b[1]}}const pU=W({nonMaxSuppressionPadded_:fU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function mU(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=F(n,"boxes","nonMaxSuppressionAsync"),l=F(t,"scores","nonMaxSuppressionAsync"),u=dc(i,l,e,s,a,null),h=u.maxOutputSize,d=u.iouThreshold,p=u.scoreThreshold,[m,y]=await Promise.all([i.data(),l.data()]),{selectedIndices:b,validOutputs:v}=Gy(m,y,h,d,p,r);return i!==n&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Mn(b,"int32"),validOutputs:_t(v,"int32")}}const gU=mU;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(n,t,e=!1,s=!1){const a=F(n,"images","resizeBilinear");D(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),D(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),D(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=j(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={images:r},u={alignCorners:e,halfPixelCenters:s,size:t},h=P.runKernel(Ud,l,u);return i?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const bE=W({resizeBilinear_:yU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bU(n,t,e=!1,s=!1){const a=F(n,"images","resizeNearestNeighbor");D(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),D(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),D(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=j(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={images:r},u={alignCorners:e,halfPixelCenters:s,size:t},h=P.runKernel(Pd,l,u);return i?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const xE=W({resizeNearestNeighbor_:bU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xU(n,t="binary",e=!1,s=.5){const a=F(n,"image","threshold"),r=.2989,i=.587,l=.114,u=a.shape[0]*a.shape[1];let h=H(Mn([s]),255),d,p,m,y;if(D(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),D(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),D(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),D(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[d,p,m]=as(a,[1,1,1],-1);const w=H(d,r),S=H(p,i),T=H(m,l);y=yt(yt(w,S),T)}else y=n;if(t==="otsu"){const w=$v(wt(Cy(y),"int32"),la([]),256);h=vU(w,u)}const b=e?Bi(y,h):hs(y,h);return wt(H(b,255),"int32")}function vU(n,t){let e=Mn([-1]),s=Mn([0]),a=Mn([0]),r,i,l,u,h,d;for(let p=0;p<n.size-1;p++){r=ee(n,0,p+1),i=ee(n,p+1),h=At(Et(r),t),d=At(Et(i),t);const m=Et(H(r,Vo(0,r.size)));l=At(m,Et(r));const y=Zo(i.shape,r.size),b=yt(Vo(0,i.size),y),v=H(i,b);u=At(Et(v),Et(i));const w=kt(l,u),S=kt(l,u),T=H(h,d);a=H(H(T,w),S);const $=hs(a,s);s=In($,a,s),e=In($,Mn([p]),e)}return e}const wU=W({threshold_:xU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(n,t,e="nearest",s="constant",a=0,r){const i=F(n,"image","transform","float32"),l=F(t,"transforms","transform","float32");D(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),D(l.rank===2&&(l.shape[0]===i.shape[0]||l.shape[0]===1)&&l.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const u={image:i,transforms:l},h={interpolation:e,fillMode:s,fillValue:a,outputShape:r};return P.runKernel(ry,u,h)}const NU=W({transform_:SU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TU(n,t,e){const s=F(n,"a","bandPart");D(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const a=s.shape,[r,i]=s.shape.slice(-2);let l,u;typeof t=="number"?(D(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),D(t<=r,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`),l=F(t<0?r:t,"numLower","bandPart")):(D(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),l=In(tu(t,0),r,Ei(t,r))),typeof e=="number"?(D(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),D(e<=i,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`),u=F(e<0?i:e,"numUpper","bandPart")):(D(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=In(tu(e,0),i,Ei(e,i)));const h=j(Vo(0,r,1,"int32"),[-1,1]),d=Vo(0,i,1,"int32"),p=kt(h,d),m=Ia(Bi(p,l),Mr(p,ke(u))),y=Je([r,i],s.dtype);return j(us(Bs(j(s,[-1,r,i])).map(b=>In(m,b,y))),a)}const CU=W({bandPart_:TU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $U(n){let t;if(Array.isArray(n)){t=!1,D(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const a=n[0].shape[0];for(let r=1;r<n.length;++r)D(n[r].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[r].shape[0]} vs. ${a})`)}else t=!0,n=as(n,n.shape[0],0).map(a=>Vr(a,[0]));D(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let a=0;a<n.length;++a)e.push(P.tidy(()=>{let r=s[a];if(a>0)for(let i=0;i<a;++i){const l=H(Et(H(e[i],r)),e[i]);r=kt(r,l)}return At(r,uc(r,"euclidean"))}));return t?us(e,0):e}const kU=W({gramSchmidt_:$U});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(n,t=!1){if(D(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return j2(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((u,h)=>u*h),s=Bs(j(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),a=[],r=[];s.forEach(u=>{const[h,d]=j2(u,t);a.push(h),r.push(d)});const i=j(us(a,0),n.shape),l=j(us(r,0),n.shape);return[i,l]}}function j2(n,t=!1){return P.tidy(()=>{D(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let a=yy(e),r=qa(n);const i=Ao([[1]],[1,1]);let l=qa(i);const u=e>=s?s:e;for(let h=0;h<u;++h){const d=r,p=l,m=a;[l,r,a]=P.tidy(()=>{const y=ee(r,[h,h],[e-h,1]),b=uc(y),v=ee(r,[h,h],[1,1]),w=In(hs(v,0),Ao([[-1]]),Ao([[1]])),S=kt(v,H(w,b)),T=At(y,S);T.shape[0]===1?l=qa(i):l=Pe([i,ee(T,[1,0],[T.shape[0]-1,T.shape[1]])],0);const $=ke(At(jt(w,S),b)),C=ee(r,[h,0],[e-h,s]),I=H($,l),R=Jt(l);if(h===0)r=kt(C,jt(I,jt(R,C)));else{const O=kt(C,jt(I,jt(R,C)));r=Pe([ee(r,[0,0],[h,s]),O],0)}const L=Jt(I),M=ee(a,[0,h],[e,a.shape[1]-h]);if(h===0)a=kt(M,jt(jt(M,l),L));else{const O=kt(M,jt(jt(M,l),L));a=Pe([ee(a,[0,0],[e,h]),O],1)}return[l,r,a]}),qt([d,p,m])}return!t&&e>s&&(a=ee(a,[0,0],[e,s]),r=ee(r,[0,0],[s,s])),[a,r]})}const EU=W({qr_:IU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qn;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(qn||(qn={}));function AU(n,t,e=qn.SUM_BY_NONZERO_WEIGHTS){const s=F(n,"losses","computeWeightedLoss");let a=null;t!=null&&(a=F(t,"weights","computeWeightedLoss"));const r=a==null?s:H(s,a);if(e===qn.NONE)return r;if(e===qn.SUM)return Et(r);if(e===qn.MEAN){if(a==null)return _e(r);{const i=s.size/a.size,l=At(Et(r),Et(a));return i>1?At(l,_t(i)):l}}if(e===qn.SUM_BY_NONZERO_WEIGHTS){if(a==null)return At(Et(r),_t(s.size));{const i=H(a,ss(s.shape)),l=wt(Et(Bo(i,_t(0))),"float32");return At(Et(r),l)}}throw Error(`Unknown reduction: ${e}`)}const Pr=W({computeWeightedLoss_:AU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RU(n,t,e,s=qn.SUM_BY_NONZERO_WEIGHTS){const a=F(n,"labels","absoluteDifference"),r=F(t,"predictions","absoluteDifference");let i=null;e!=null&&(i=F(e,"weights","absoluteDifference")),An(a.shape,r.shape,"Error in absoluteDifference: ");const l=Qe(kt(a,r));return Pr(l,i,s)}const DU=W({absoluteDifference_:RU});function OU(n,t,e,s,a=qn.SUM_BY_NONZERO_WEIGHTS){const r=F(n,"labels","cosineDistance"),i=F(t,"predictions","cosineDistance");let l=null;s!=null&&(l=F(s,"weights","cosineDistance")),An(r.shape,i.shape,"Error in cosineDistance: ");const u=_t(1),h=kt(u,Et(H(r,i),e,!0));return Pr(h,l,a)}const _U=W({cosineDistance_:OU});function FU(n,t,e,s=qn.SUM_BY_NONZERO_WEIGHTS){let a=F(n,"labels","hingeLoss");const r=F(t,"predictions","hingeLoss");let i=null;e!=null&&(i=F(e,"weights","hingeLoss")),An(a.shape,r.shape,"Error in hingeLoss: ");const l=_t(1);a=kt(H(_t(2),a),l);const u=Oa(kt(l,H(a,r)));return Pr(u,i,s)}const LU=W({hingeLoss_:FU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(n,t,e,s=1,a=qn.SUM_BY_NONZERO_WEIGHTS){const r=F(n,"labels","huberLoss"),i=F(t,"predictions","huberLoss");let l=null;e!=null&&(l=F(e,"weights","huberLoss")),An(r.shape,i.shape,"Error in huberLoss: ");const u=_t(s),h=Qe(kt(i,r)),d=Ei(h,u),p=kt(h,d),m=yt(H(_t(.5),be(d)),H(u,p));return Pr(m,l,a)}const MU=W({huberLoss_:zU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(n,t,e,s=1e-7,a=qn.SUM_BY_NONZERO_WEIGHTS){const r=F(n,"labels","logLoss"),i=F(t,"predictions","logLoss");let l=null;e!=null&&(l=F(e,"weights","logLoss")),An(r.shape,i.shape,"Error in logLoss: ");const u=_t(1),h=_t(s),d=ke(H(r,xs(yt(i,h)))),p=H(kt(u,r),xs(yt(kt(u,i),h))),m=kt(d,p);return Pr(m,l,a)}const VU=W({logLoss_:BU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(n,t,e,s=qn.SUM_BY_NONZERO_WEIGHTS){const a=F(n,"labels","meanSquaredError"),r=F(t,"predictions","meanSquaredError");let i=null;e!=null&&(i=F(e,"weights","meanSquaredError")),An(a.shape,r.shape,"Error in meanSquaredError: ");const l=Oy(a,r);return Pr(l,i,s)}const UU=W({meanSquaredError_:PU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(n,t){const e=F(n,"labels","sigmoidCrossEntropyWithLogits"),s=F(t,"logits","sigmoidCrossEntropyWithLogits");An(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Oa(s),r=H(s,e),i=uf(ls(ke(Qe(s))));return yt(kt(a,r),i)}function GU(n,t,e,s=0,a=qn.SUM_BY_NONZERO_WEIGHTS){let r=F(n,"multiClassLabels","sigmoidCrossEntropy");const i=F(t,"logits","sigmoidCrossEntropy");let l=null;if(e!=null&&(l=F(e,"weights","sigmoidCrossEntropy")),An(r.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const h=_t(s),d=_t(1),p=_t(.5);r=yt(H(r,kt(d,h)),H(p,h))}const u=WU(r,i);return Pr(u,l,a)}const HU=W({sigmoidCrossEntropy_:GU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jU(n,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return tr((a,r,i)=>{const u=cf(r,[e],!0),h=kt(wt(r,"float32"),u);i([a,h]);const d=ke(H(h,a));return{value:Et(d,[e]),gradFunc:(y,b)=>{const[v,w]=b,S=qe(y.shape,[e]);return[H(j(y,S),kt(wt(v,"float32"),ls(w))),H(j(y,S),kt(ls(w),wt(v,"float32")))]}}})(n,t)}function qU(n,t,e,s=0,a=qn.SUM_BY_NONZERO_WEIGHTS){let r=F(n,"onehotLabels","softmaxCrossEntropy");const i=F(t,"logits","softmaxCrossEntropy");let l=null;if(e!=null&&(l=F(e,"weights","softmaxCrossEntropy")),An(r.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const h=_t(s),d=_t(1),p=_t(r.shape[1]);r=yt(H(r,kt(d,h)),At(h,p))}const u=jU(r,i);return Pr(u,l,a)}const KU=W({softmaxCrossEntropy_:qU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XU(n,t,e,s){const a=F(n,"indices","sparseFillEmptyRows","int32"),r=F(t,"values","sparseFillEmptyRows"),i=F(e,"denseShape","sparseFillEmptyRows","int32"),l=F(s,"defaultValue","sparseFillEmptyRows",r.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(l.rank!==0)throw new Error(`Default value should be a scalar but received shape ${l.shape}`);const u={indices:a,values:r,denseShape:i,defaultValue:l},h=P.runKernel(Kg,u);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}const YU=W({sparseFillEmptyRows_:XU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZU(n,t,e){const s=F(n,"inputIndices","sparseReshape","int32"),a=F(t,"inputShape","sparseReshape","int32"),r=F(e,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const i={inputIndices:s,inputShape:a,newShape:r},l=P.runKernel(Xg,i);return{outputIndices:l[0],outputShape:l[1]}}const QU=W({sparseReshape_:ZU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(n,t,e){const s=F(n,"data","sparseSegmentMean"),a=F(t,"indices","sparseSegmentMean","int32"),r=F(e,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return P.runKernel(Yg,i)}const tW=W({sparseSegmentMean_:JU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(n,t,e){const s=F(n,"data","sparseSegmentSum"),a=F(t,"indices","sparseSegmentSum","int32"),r=F(e,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return P.runKernel(Zg,i)}const nW=W({sparseSegmentSum_:eW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(n,t,e,s,a,r,i,l){const u=F(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const h=F(t,"dataSplits","stringNGrams");if(h.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const d={separator:e,nGramWidths:s,leftPad:a,rightPad:r,padWidth:i,preserveShortSequences:l},p={data:u,dataSplits:h},m=P.runKernel(ey,p,d);return{nGrams:m[0],nGramsSplits:m[1]}}const aW=W({stringNGrams_:sW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(n,t,e=!0){const s=F(n,"input","stringSplit","string"),a=F(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const r={skipEmpty:e},i={input:s,delimiter:a},l=P.runKernel(ny,i,r);return{indices:l[0],values:l[1],shape:l[2]}}const iW=W({stringSplit_:rW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(n,t){const e=F(n,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:e};return P.runKernel(sy,a,s)}const lW=W({stringToHashBucketFast_:oW});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uW(n,t,e,s=!0){const a=F(n,"input","staticRegexReplace","string"),r={pattern:t,rewrite:e,replaceGlobal:s};return P.runKernel(Yd,{x:a},r)}const cW=W({staticRegexReplace_:uW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vE={fft:xf,ifft:au,rfft:vf,irfft:Dy},wE={hammingWindow:MP,hannWindow:gE,frame:yE,stft:UP},ra={flipLeftRight:jP,grayscaleToRGB:KP,resizeNearestNeighbor:xE,resizeBilinear:bE,rgbToGrayscale:YP,rotateWithOffset:QP,cropAndResize:GP,nonMaxSuppression:tU,nonMaxSuppressionAsync:lU,nonMaxSuppressionWithScore:cU,nonMaxSuppressionWithScoreAsync:dU,nonMaxSuppressionPadded:pU,nonMaxSuppressionPaddedAsync:gU,threshold:wU,transform:NU},yw={bandPart:CU,gramSchmidt:kU,qr:EU},SE={absoluteDifference:DU,computeWeightedLoss:Pr,cosineDistance:_U,hingeLoss:LU,huberLoss:MU,logLoss:VU,meanSquaredError:UU,sigmoidCrossEntropy:HU,softmaxCrossEntropy:KU},NE={sparseFillEmptyRows:YU,sparseReshape:QU,sparseSegmentMean:tW,sparseSegmentSum:nW},TE={stringNGrams:aW,stringSplit:iW,stringToHashBucketFast:lW,staticRegexReplace:cW};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW=new Map,g1=new Map;class tl{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Os{constructor(){this.classNameMap={}}static getMap(){return Os.instance==null&&(Os.instance=new Os),Os.instance}static register(t){Os.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function xt(n,t,e){D(n.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),D(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=n.className);const s=e,a=t+">"+s;return Os.register(n),hW.set(a,n),g1.set(n,a),n}function dW(n){return g1.has(n)?g1.get(n):n.className}const fW=Object.freeze(Object.defineProperty({__proto__:null,Serializable:tl,SerializationMap:Os,getRegisteredName:dW,registerClass:xt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ur extends tl{minimize(t,e=!1,s){const{value:a,grads:r}=this.computeGradients(t,s);if(s!=null){const i=s.map(l=>({name:l.name,tensor:r[l.name]}));this.applyGradients(i)}else this.applyGradients(r);return qt(r),e?a:(a.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return RI(t,e)}dispose(){this.iterations_!=null&&qt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:_t(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Ur,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bw extends Ur{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=P.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=P.registeredVariables[s],i=!1;this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accum_grad`,variable:nt(()=>ne(r).variable(i))}),this.accumulatedUpdates[a]==null&&(this.accumulatedUpdates[a]={originalName:`${s}/accum_var`,variable:nt(()=>ne(r).variable(i))});const l=Array.isArray(t)?t[a].tensor:t[s];if(l==null)return;const u=this.accumulatedGrads[a].variable,h=this.accumulatedUpdates[a].variable;nt(()=>{const d=yt(H(u,this.rho),H(be(l),1-this.rho)),p=H(At(xn(yt(h,this.epsilon)),xn(yt(u,this.epsilon))),l),m=yt(H(h,this.rho),H(be(p),1-this.rho));u.assign(d),h.assign(m);const y=yt(H(p,-this.learningRate),r);r.assign(y)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(qt(this.accumulatedGrads.map(t=>t.variable)),qt(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xw extends Ur{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=P.registeredVariables[s];this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accumulator`,variable:nt(()=>Zo(r.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(t)?t[a].tensor:t[s];if(i==null)return;const l=this.accumulatedGrads[a].variable;nt(()=>{const u=yt(l,be(i));l.assign(u);const h=yt(H(At(i,xn(yt(u,P.backend.epsilon()))),-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&qt(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vw extends Ur{static get className(){return"Adam"}constructor(t,e,s,a=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],nt(()=>{this.accBeta1=_t(e).variable(),this.accBeta2=_t(s).variable()}),a==null&&(this.epsilon=P.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);nt(()=>{const s=kt(1,this.accBeta1),a=kt(1,this.accBeta2);e.forEach((r,i)=>{const l=P.registeredVariables[r],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:nt(()=>ne(l).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${r}/v`,variable:nt(()=>ne(l).variable(u))});const h=Array.isArray(t)?t[i].tensor:t[r];if(h==null)return;const d=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,m=yt(H(d,this.beta1),H(h,1-this.beta1)),y=yt(H(p,this.beta2),H(be(h),1-this.beta2)),b=At(m,s),v=At(y,a);d.assign(m),p.assign(y);const w=yt(H(At(b,yt(xn(v),this.epsilon)),-this.learningRate),l);l.assign(w)}),this.accBeta1.assign(H(this.accBeta1,this.beta1)),this.accBeta2.assign(H(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&qt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&qt(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),nt(()=>{this.accBeta1.assign(Ja(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ja(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ww extends Ur{static get className(){return"Adamax"}constructor(t,e,s,a=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],nt(()=>{this.iteration=_t(0).variable(),this.accBeta1=_t(e).variable()}),a==null&&(this.epsilon=P.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);nt(()=>{const s=kt(1,this.accBeta1),a=At(-this.learningRate,yt(H(this.iteration,this.decay),1));e.forEach((r,i)=>{const l=P.registeredVariables[r],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:ne(l).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${r}/v`,variable:ne(l).variable(u)});const h=Array.isArray(t)?t[i].tensor:t[r];if(h==null)return;const d=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,m=yt(H(d,this.beta1),H(h,1-this.beta1)),y=H(p,this.beta2),b=Qe(h),v=sr(y,b);d.assign(m),p.assign(v);const w=yt(H(At(a,s),At(m,yt(v,this.epsilon))),l);l.assign(w)}),this.iteration.assign(yt(this.iteration,1)),this.accBeta1.assign(H(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&qt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&qt(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jy extends Ur{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=Array.isArray(t)?t[a].tensor:t[s];if(r==null)return;const i=P.registeredVariables[s];nt(()=>{const l=yt(H(this.c,r),i);i.assign(l)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=on(_t(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sw extends jy{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=_t(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=P.registeredVariables[s];this.accumulations[a]==null&&(this.accumulations[a]={originalName:`${s}/momentum`,variable:nt(()=>ne(r).variable(!1))});const i=this.accumulations[a].variable,l=Array.isArray(t)?t[a].tensor:t[s];l!=null&&nt(()=>{let u;const h=yt(H(this.m,i),l);this.useNesterov?u=yt(H(this.c,yt(l,H(h,this.m))),r):u=yt(H(this.c,h),r),i.assign(h),r.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&qt(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nw extends Ur{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,a=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,a==null&&(this.epsilon=P.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=P.registeredVariables[s],i=!1;this.accumulatedMeanSquares[a]==null&&(this.accumulatedMeanSquares[a]={originalName:`${s}/rms`,variable:nt(()=>ne(r).variable(i))}),this.accumulatedMoments[a]==null&&(this.accumulatedMoments[a]={originalName:`${s}/momentum`,variable:nt(()=>ne(r).variable(i))}),this.accumulatedMeanGrads[a]==null&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${s}/mg`,variable:nt(()=>ne(r).variable(i))});const l=Array.isArray(t)?t[a].tensor:t[s];if(l==null)return;const u=this.accumulatedMeanSquares[a].variable,h=this.accumulatedMoments[a].variable;nt(()=>{const d=yt(H(u,this.decay),H(be(l),1-this.decay));if(this.centered){const p=this.accumulatedMeanGrads[a].variable,m=yt(H(p,this.decay),H(l,1-this.decay)),y=At(H(l,this.learningRate),xn(kt(d,yt(be(m),this.epsilon)))),b=yt(H(h,this.momentum),y);u.assign(d),p.assign(m),h.assign(b);const v=kt(r,b);r.assign(v)}else{const p=yt(H(u,this.decay),H(be(l),1-this.decay)),m=yt(H(h,this.momentum),At(H(l,this.learningRate),xn(yt(p,this.epsilon))));u.assign(p),h.assign(m);const y=kt(r,m);r.assign(y)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&qt(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&qt(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&qt(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pW=[bw,xw,vw,ww,Sw,Nw,jy];function mW(){for(const n of pW)xt(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gW="model",yW=".json",bW=".weights.bin";function q2(n){return new Promise(t=>setTimeout(t)).then(n)}class Po{constructor(t){if(!at().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Po.URL_SCHEME)&&(t=t.slice(Po.URL_SCHEME.length)),(t==null||t.length===0)&&(t=gW),this.modelJsonFileName=t+yW,this.weightDataFileName=t+bW}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=Da.join(t.weightData),s=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const a=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r=hI(t,a),i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=i,await q2(()=>l.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=s,await q2(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ef(t)}}}}Po.URL_SCHEME="downloads://";class xW{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{const s=new FileReader;s.onload=a=>{const r=JSON.parse(a.target.result),i=r.modelTopology;if(i==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}const u=hv(r,h=>this.loadWeights(h));t(u)},s.onerror=a=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(t){const e=[],s=[];for(const i of t)e.push(...i.weights),s.push(...i.paths);const a=this.checkManifestAndWeightFiles(t),r=s.map(i=>this.loadWeightsFile(i,a[i]));return Promise.all(r).then(i=>[e,i])}loadWeightsFile(t,e){return new Promise((s,a)=>{const r=new FileReader;r.onload=i=>{const l=i.target.result;s(l)},r.onerror=i=>a(`Failed to weights data from file of path '${t}'.`),r.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],s=this.weightsFiles.map(r=>L2(r.name)),a={};for(const r of t)r.paths.forEach(i=>{const l=L2(i);if(e.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(e.push(l),s.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);a[i]=this.weightsFiles[s.indexOf(l)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}}const vW=n=>at().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Po.URL_SCHEME)?wW(n.slice(Po.URL_SCHEME.length)):null;Oe.registerSaveRouter(vW);function wW(n="model"){return new Po(n)}function SW(n){return new xW(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n,t,e,s){i(n),e=e??0,s=s??1,l(e,s);let a=0;const r=u=>(u.then(h=>{const d=e+ ++a/n.length*(s-e);return t(d),h}),u);function i(u){D(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function l(u,h){D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),D(h>=0&&h<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${h}`),D(h>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${h}`)}return Promise.all(n.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function CE(n,t){t==null&&(t={});const e=t.fetchFunc==null?at().platform.fetch:t.fetchFunc,s=n.map(p=>e(p,t.requestInit,{isBinary:!0})),l=(t.onProgress==null?await Promise.all(s):await K2(s,t.onProgress,0,.5)).map(p=>p.arrayBuffer());return t.onProgress==null?await Promise.all(l):await K2(l,t.onProgress,.5,1)}function NW(n,t){var e;const s=t.fetchFunc==null?at().platform.fetch:t.fetchFunc;let a=0,r;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:async i=>{for(var l;a<n.length;){r||(r=(await s(n[a],t.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:h}=await r.read();if(u){a++,r=void 0,(l=t.onProgress)===null||l===void 0||l.call(t,a/n.length);continue}i.enqueue(h);return}i.close()}})}async function TW(n,t="",e,s){return $E(i=>CE(i,{requestInit:s}))(n,t,e)}function $E(n){return async(t,e="",s)=>{const a=t.map(()=>!1),r={},i=s!=null?s.map(()=>!1):[],l=[];if(t.forEach((y,b)=>{let v=0;y.weights.forEach(w=>{const S="quantization"in w?w.quantization.dtype:w.dtype,T=_o[S]*ht(w.shape),$=()=>{a[b]=!0,r[b]==null&&(r[b]=[]),r[b].push({manifestEntry:w,groupOffset:v,sizeBytes:T})};s!=null?s.forEach((C,I)=>{C===w.name&&($(),i[I]=!0)}):$(),l.push(w.name),v+=T})}),!i.every(y=>y)){const y=s.filter((b,v)=>!i[v]);throw new Error(`Could not find weights in manifest with names: ${y.join(", ")}. 
Manifest JSON has weights with names: ${l.join(", ")}.`)}const u=a.reduce((y,b,v)=>(b&&y.push(v),y),[]),h=[];u.forEach(y=>{t[y].paths.forEach(b=>{const v=e+(e.endsWith("/")?"":"/")+b;h.push(v)})});const d=await n(h),p={};let m=0;return u.forEach(y=>{const b=t[y].paths.length,v=new Da(d.slice(m,m+b));r[y].forEach(S=>{const T=v.slice(S.groupOffset,S.groupOffset+S.sizeBytes),$=oI(T,[S.manifestEntry]);for(const C in $)p[C]=$[C]}),m+=b}),p}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CW="application/octet-stream",$W="application/json";class Tw{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(D(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=at().platform.fetch,D(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&D(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],a=hI(t,s);if(e.body.append("model.json",new Blob([JSON.stringify(a)],{type:$W}),"model.json"),t.weightData!=null){const i=Da.join(t.weightData);e.body.append("model.weights.bin",new Blob([i],{type:CW}),"model.weights.bin")}const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:ef(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=e.modelTopology,a=e.weightsManifest;if(s==null&&a==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const t=await this.loadModelJSON();return hv(t,e=>this.loadWeights(e))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),s=u1(t.weightsManifest),a=()=>NW(e,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:s,getWeightStream:a})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[s,a]=kW(e),r=this.weightPathPrefix||s,i=[],l=[];for(const u of t)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):i.push(r+h+a);return this.weightUrlConverter&&i.push(...await Promise.all(l)),i}async loadWeights(t){const e=await this.getWeightUrls(t),s=u1(t),a=await CE(e,this.loadOptions);return[s,a]}}Tw.URL_SCHEME_REGEX=/^https?:\/\//;function kW(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),s=n.substring(0,t),a=e>t?n.substring(e):"";return[s+"/",a]}function y1(n){return n.match(Tw.URL_SCHEME_REGEX)!=null}const kE=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(s=>y1(s)):e=y1(n),e)return Cw(n,t)}return null};Oe.registerSaveRouter(kE);Oe.registerLoadRouter(kE);function Cw(n,t){return new Tw(n,t)}function IW(n,t){return Cw(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _x{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class IE{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class EW{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function AW(n,t,e,s){const a=arguments;return new EW(EE(...a))}function EE(n,t,e,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new _x(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _x({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _x({modelTopology:n,weightSpecs:t,weightData:e,trainingConfig:s}))}function RW(n){return new IE(n)}function DW(n){return new IE(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $w=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Da,browserFiles:SW,browserHTTPRequest:IW,concatenateArrayBuffers:cI,copyModel:lM,decodeWeights:oI,decodeWeightsStream:uI,encodeWeights:l1,fromMemory:AW,fromMemorySync:EE,getLoadHandlers:Kz,getModelArtifactsForJSON:hv,getModelArtifactsForJSONSync:dI,getModelArtifactsInfoForJSON:ef,getSaveHandlers:fI,getWeightSpecs:u1,http:Cw,isHTTPScheme:y1,listModels:iM,loadWeights:TW,moveModel:uM,registerLoadRouter:qz,registerSaveRouter:jz,removeModel:oM,weightsLoaderFactory:$E,withSaveHandler:RW,withSaveHandlerSync:DW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(n,t,e){const s=F(n,"labels","confusionMatrix"),a=F(t,"predictions","confusionMatrix");D(e==null||e>0&&Number.isInteger(e),()=>`If provided, numClasses must be a positive integer, but got ${e}`),D(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),D(a.rank===1,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),D(s.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),D(e>0&&Number.isInteger(e),()=>`numClasses is required to be a positive integer, but got ${e}`);const r=eu(wt(s,"int32"),e),i=eu(wt(a,"int32"),e),l=Jt(r),u=jt(l,i);return wt(u,"int32")}const _W=W({confusionMatrix_:OW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:_W},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mo,X2=!1;function AE(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,s=!1,a=!1,r=!1,i=!1,l=!1;if(n.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)r=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)l=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Lh(Im,P.backendName)!=null){const b={pixels:n},v={numChannels:t};return P.runKernel(Im,b,v)}const[h,d]=a?[n.videoWidth,n.videoHeight]:[n.width,n.height];let p;if(i)p=n.getContext("2d").getImageData(0,0,h,d).data;else if(s||e)p=n.data;else if(r||a||l){if(mo==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")mo=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else mo=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});mo.canvas.width=h,mo.canvas.height=d,mo.drawImage(n,0,0,h,d),p=mo.getImageData(0,0,h,d).data}let m;if(t===4)m=new Int32Array(p);else{const b=h*d;m=new Int32Array(b*t);for(let v=0;v<b;v++)for(let w=0;w<t;++w)m[v*t+w]=p[v*4+w]}return ow(m,[d,h,t],"int32")}function LW(n){return n!=null&&n.data instanceof Uint8Array}function zW(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function MW(n){return n!=null&&n.width!==0&&n.height!==0}function BW(n){return zW()&&!(n instanceof ImageBitmap)&&MW(n)&&!LW(n)}async function VW(n,t=3){let e=null;if(at().getBool("WRAP_TO_IMAGEBITMAP")&&BW(n)){let s;try{s=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===n.width&&s.height===n.height?e=s:e=n}else e=n;return AE(e,t)}function RE(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const t=n.rank===2?1:n.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function PW(n){const t=(n==null?void 0:n.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function UW(n,t){let e=F(n,"img","toPixels");if(!(n instanceof he)){const h=e;e=wt(h,"int32"),h.dispose()}RE(e);const[s,a]=e.shape.slice(0,2),r=e.rank===2?1:e.shape[2],i=await e.data(),l=e.dtype==="float32"?255:1,u=new Uint8ClampedArray(a*s*4);for(let h=0;h<s*a;++h){const d=[0,0,0,255];for(let m=0;m<r;m++){const y=i[h*r+m];if(e.dtype==="float32"){if(y<0||y>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${y}.`)}else if(e.dtype==="int32"&&(y<0||y>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${y}.`);r===1?(d[0]=y*l,d[1]=y*l,d[2]=y*l):d[m]=y*l}const p=h*4;u[p+0]=Math.round(d[0]),u[p+1]=Math.round(d[1]),u[p+2]=Math.round(d[2]),u[p+3]=Math.round(d[3])}if(t!=null){X2||Lh(vg,P.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),X2=!0),t.width=a,t.height=s;const h=t.getContext("2d"),d=new ImageData(u,a,s);h.putImageData(d,0,0)}return e!==n&&e.dispose(),u}function WW(n,t,e){let s=F(n,"img","draw");if(!(n instanceof he)){const i=s;s=wt(i,"int32"),i.dispose()}RE(s),PW(e==null?void 0:e.imageOptions);const a={image:s},r={canvas:t,options:e};P.runKernel(vg,a,r)}const DE=W({fromPixels_:AE}),GW=Object.freeze(Object.defineProperty({__proto__:null,draw:WW,fromPixels:DE,fromPixelsAsync:VW,toPixels:UW},Symbol.toStringTag,{value:"Module"}));function qy(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(ht(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const a=t.shape,r=a[a.length-1];let i=1;for(let p=0;p<a.length-1;++p)i*=a[p];const l=n.shape,u=a.slice();u.pop();let h=1;for(let p=r;p<e;++p)h*=l[p],u.push(l[p]);const d=[...Lt(n.shape).map(p=>p/h),1].slice(0,r);return[u,i,h,d]}const HW=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:qy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b1=-2,jW=-1;function kw(n,t,e){const s=n.shape.length;D(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),D(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let a=0;a<s;++a)D(t[a]+e[a]<=n.shape[a],()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${t[a]+e[a]}) would overflow input.shape[${a}] (${n.shape[a]})`)}function qW(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function Iw(n,t,e){const s=[];for(let a=0;a<n.length;a++)s[a]=Math.ceil((t[a]-n[a])/e[a]);return s}function OE(n,t,e,s){const a=[...n];for(let r=a.length;r<s.length;r++)a.push(1);for(let r=0;r<e;r++)r===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function _E(n,t,e){return e<=n?e:e-(t-1)}function FE(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function KW(n,t,e,s,a,r,i,l,u){const h=n.length;let d=new Array(h),p=new Array(h),m=new Array(h);if(t.length&&e>0){const y=t[0],b=e+1;d=LE(i,y,b,s,n),p=zE(l,y,b,a,n),m=OE(r,y,b,n)}else for(let y=0;y<h;y++)d[y]=BE(i,s,r,n,y,u),p[y]=VE(l,a,r,n,y,u),m[y]=ME(r,y,u);return{begin:d,end:p,strides:m}}function LE(n,t,e,s,a){const r=[...a],i=FE(e,t);for(let l=0;l<r.length;l++)if(i.indexOf(l)>-1)r[l]=0;else{const u=_E(t,e,l);let h=s[u];n&1<<u&&(h=0),r[l]=h}return r}function zE(n,t,e,s,a){const r=[...a],i=FE(e,t);for(let l=0;l<r.length;l++)if(i.indexOf(l)>-1)r[l]=Number.MAX_SAFE_INTEGER;else{const u=_E(t,e,l);let h=s[u];n&1<<u&&(h=Number.MAX_SAFE_INTEGER),r[l]=h}for(let l=0;l<r.length;l++){const u=a[l];r[l]<0&&(r[l]+=u),r[l]=Si(0,r[l],a[l])}return r}function ME(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function BE(n,t,e,s,a,r){let i=t[a];const l=e[a]||1;(n&1<<a||r&1<<a||i==null)&&(l>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const u=s[a];return i<0&&(i+=u),i=Si(0,i,u-1),i}function VE(n,t,e,s,a,r){let i=t[a];const l=e[a]||1;(n&1<<a||r&1<<a||i==null)&&(l>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const u=s[a];return i<0&&(i+=u),l>0?i=Si(0,i,u):i=Si(-1,i,u-1),i}function Ew(n,t,e){let s=e.length;for(let a=0;a<e.length;a++)if(e[a]>1){s=a;break}for(let a=s+1;a<e.length;a++)if(t[a]>0||e[a]!==n[a])return!1;return!0}function Aw(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Ky(n,t,e){let s;const a=n.shape.length;typeof t=="number"?s=[t,...new Array(a-1).fill(0)]:t.length<a?s=t.concat(new Array(a-t.length).fill(0)):s=t.slice(),s.forEach(i=>{D(i!==-1,()=>"slice() does not support negative begin indexing.")});let r;return e==null?r=new Array(a).fill(-1):typeof e=="number"?r=[e,...new Array(a-1).fill(-1)]:e.length<a?r=e.concat(new Array(a-e.length).fill(-1)):r=e,r=r.map((i,l)=>i>=0?i:(D(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${l}.`),n.shape[l]-s[l])),[s,r]}function Rw(n,t,e,s,a,r,i,l,u){let h;if(s==null?(h=new Array(t.length),h.fill(1)):h=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const p={dims:h.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:h.slice(),beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:l,shrinkAxisMask:u};for(let $=0;$<p.dims;$++)d&&(1<<$&l)!==0&&p.numAddAxisAfterEllipsis++,1<<$&i&&(d=!0);d||(p.ellipsisMask|=1<<p.dims,p.dims++);const m={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};XW(p,m);let y=!0,b=!0,v=!0;const w=[],S=[];for(let $=0;$<n.length;++$){if(m.strides[$]===0)throw Error(`strides[${$}] must be non-zero`);const C=!!(m.shrinkAxisMask&1<<$),I=n[$];if(I===-1){w.push(C?1:-1);continue}const R=[m.beginMask&1<<$,m.endMask&1<<$],L=[m.strides[$]>0?0:-1,m.strides[$]>0?I:I-1];if(C&&m.strides[$]<=0)throw Error("only stride 1 allowed on non-range indexing.");v=v&&m.strides[$]===1;const M=!!(m.beginMask&1<<$&&m.endMask&1<<$);if(m.beginValid&&m.endValid){if(C){const G=m.begin[$]<0?I+m.begin[$]:m.begin[$];if(m.begin[$]=G,m.end[$]=m.begin[$]+1,G<0||G>=I)throw Error(`slice index ${m.begin[$]} of dimension ${$} out of bounds.`)}else m.begin[$]=Y2(m.begin[$],0,m.strides[$],I,R,L),m.end[$]=Y2(m.end[$],1,m.strides[$],I,R,L);const A=m.strides[$]===1&&m.begin[$]===0&&m.end[$]===I;y=y&&A,b=b&&($===0&&m.strides[$]===1||A)}else y=y&&m.strides[$]===1&&M,b=b&&($===0&&m.strides[$]===1||M);let O,_=!1;if(m.beginValid&&m.endValid?(O=m.end[$]-m.begin[$],_=!0):C?(O=1,_=!0):M&&I>=0&&(m.strides[$]<0?O=-I:O=I,_=!0),_){let A;O===0||O<0!=m.strides[$]<0?A=0:A=Math.trunc(O/m.strides[$])+(O%m.strides[$]!==0?1:0),w.push(A)}else w.push(-1)}for(let $=0;$<m.finalShapeGatherIndices.length;++$){const C=m.finalShapeGatherIndices[$];C>=0?S.push(w[C]):C===b1&&S.push(1)}return{finalShapeSparse:S.filter(($,C)=>m.finalShapeGatherIndices[C]!==b1),finalShape:S,isIdentity:y,sliceDim0:b,isSimpleSlice:v,begin:m.begin,end:m.end,strides:m.strides}}function XW(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const a=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<a;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(b1),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(jW),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function Y2(n,t,e,s,a,r){if(a[t])return e>0?r[t]:r[t+1&1];{const i=n<0?s+n:n;return i<r[0]?r[0]:i>r[1]?r[1]:i}}const PE=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:kw,computeFlatOffset:Aw,computeOutShape:Iw,getNormalizedAxes:KW,isSliceContinous:Ew,maskToAxes:qW,parseSliceParams:Ky,sliceInfo:Rw,startForAxis:BE,startIndicesWithElidedDims:LE,stopForAxis:VE,stopIndicesWithElidedDims:zE,stridesForAxis:ME,stridesWithElidedDims:OE},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const YW="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UE{static sgd(t){return new jy(t)}static momentum(t,e,s=!1){return new Sw(t,e,s)}static rmsprop(t,e=.9,s=0,a=null,r=!1){return new Nw(t,e,s,a,r)}static adam(t=.001,e=.9,s=.999,a=null){return new vw(t,e,s,a)}static adadelta(t=.001,e=.95,s=null){return new bw(t,e,s)}static adamax(t=.002,e=.9,s=.999,a=null,r=0){return new ww(t,e,s,a,r)}static adagrad(t,e=.1){return new xw(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xo=UE;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZW=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function Dw(){return new Promise(n=>ZW(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ow(n,t){const e=n[0].length;n.forEach((a,r)=>{D(a.length===e,()=>`Error in concat${e}D: rank of tensors[${r}] must be the same as the rank of the rest (${e})`)}),D(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((a,r)=>{for(let i=0;i<e;i++)D(i===t||a[i]===s[i],()=>`Error in concat${e}D: Shape of tensors[${r}] (${a}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function Ka(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ca;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Ca||(Ca={}));function WE(n,t,e){let s=new Array;if(e==null&&t==null)return s;if(t==null)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(e==null)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let a=1;a<e.length;++a){const r=e[a],i=s[s.length-e.length+a],l=s[i];if(r>=0)if(l>=0){if(l!==r)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+n}] = ${r} but shape[${a+n}] = ${l}`)}else s[i]=r}return s}function GE(n){const t={FIRST_DIM_SIZE:Ca.FIRST_DIM_SIZE,VALUE_ROWIDS:Ca.VALUE_ROWIDS,ROW_LENGTHS:Ca.ROW_LENGTHS,ROW_SPLITS:Ca.ROW_SPLITS,ROW_LIMITS:Ca.ROW_LIMITS,ROW_STARTS:Ca.ROW_STARTS},e=[];for(const s of n)if(s in t)e.push(t[s]);else break;return e}function HE(n){return n.length===0?0:n[0]===Ca.FIRST_DIM_SIZE?n.length-1:n.length}function jE(n,t){if(n==null||t==null)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let a=0;a<Math.min(e,s-1);++a){const r=n[a],i=t[a+1];if(r>=0&&i>=0&&r!==1&&r!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-n.length}] = ${r} but ragged tensor input.flatValues.shape[${a-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _w=30;function Xy(n){return n<=_w?n:Cm(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fw(n,t,e){const s=e*(typeof n=="number"?n:n[0]),a=t*(typeof n=="number"?n:n[1]);return[s,a]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wf(n,t,e,s=!0){let a=[];if(s)a=a.concat(t.slice(0)),a.push(n[0]/e),a=a.concat(n.slice(1));else{a=a.concat(n[0]);const r=t.length;for(let i=0;i<r;++i)a=a.concat([n[i+1]/t[i],t[i]]);a=a.concat(n.slice(r+1))}return a}function Sf(n,t,e=!0){const s=[];if(e){s.push(t);for(let a=t+1;a<n;++a)a<=2*t?(s.push(a),s.push(a-(t+1))):s.push(a)}else{const a=[],r=[];for(let i=1;i<n;++i)i>=t*2+1||i%2===1?r.push(i):a.push(i);s.push(...a),s.push(0),s.push(...r)}return s}function Nf(n,t,e,s=!0){const a=[];s?a.push(n[0]/e):a.push(n[0]*e);for(let r=1;r<n.length;++r)r<=t.length?s?a.push(t[r-1]*n[r]):a.push(n[r]/t[r-1]):a.push(n[r]);return a}function Lw(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function zw(n,t,e){const s=n.slice(0,1);for(let a=0;a<e;++a)s.push(n[a+1]-t[a][0]-t[a][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yy=1.7580993408473768,Zy=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mw=.3275911,Bw=.254829592,Vw=-.284496736,Pw=1.421413741,Uw=-1.453152027,Ww=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function qE(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function KE(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let a=0;a<n.length;a+=4)e[Math.floor(a/4)]=n[a],s[Math.floor(a/4)]=n[a+1];return{real:e,imag:s}}function XE(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let a=2;a<n.length;a+=4)e[Math.floor(a/4)]=n[a],s[Math.floor(a/4)]=n[a+1];return{real:e,imag:s}}function Gw(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function YE(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function ZE(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let a=0;a<Math.ceil(n/2);a++){const r=(t?2:-2)*Math.PI*(a/n);e[a]=Math.cos(r),s[a]=Math.sin(r)}return{real:e,imag:s}}function QE(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),a=Math.cos(s),r=Math.sin(s);return{real:a,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fx="->",QW=/->/g,Z2=",",Q2="...";function Hw(n,t){n=n.replace(/\s/g,"");const e=(n.length-n.replace(QW,"").length)/Fx.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${Fx}").`);const[s,a]=n.split(Fx);D(s.indexOf(Q2)===-1,()=>`The ellipsis notation ("${Q2}") is not supported yet.`);const r=s.split(Z2),i=r.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let m=0;m<a.length;++m){const y=a[m];if(!r.some(b=>b.indexOf(y)!==-1))throw new Error(`Output subscripts contain the label ${y} not present in the input subscripts.`);l.indexOf(y)===-1&&l.push(y)}for(let m=0;m<s.length;++m){const y=s[m];l.indexOf(y)===-1&&y!==Z2&&l.push(y)}const u=new Array(r.length);for(let m=0;m<i;++m){if(new Set(r[m].split("")).size!==r[m].length)throw new Error(`Found duplicate axes in input component ${r[m]}. Support for duplicate axes in input is not implemented yet.`);u[m]=[];for(let y=0;y<r[m].length;++y)u[m].push(l.indexOf(r[m][y]))}const h=l.length,d=a.length,p=[];for(let m=d;m<h;++m)p.push(m);return{allDims:l,summedDims:p,idDims:u}}function jw(n,t){let e=new Array(n);e.fill(-1);for(let a=0;a<t.length;++a)e[t[a]]=a;const s=[];for(let a=0;a<n;++a)e[a]===-1&&s.push(a);return e=e.filter(a=>a!==-1),{permutationIndices:e,expandDims:s}}function qw(n,t,e){const s=new Array(n);for(let a=0;a<e.length;++a){const r=e[a].shape;for(let i=0;i<t[a].length;++i)s[t[a][i]]===void 0?s[t[a][i]]=r[i]:D(s[t[a][i]]===r[i],()=>`Expected dimension ${s[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(r)}, but got dimension ${r[i]}`)}}function Kw(n,t){const e=n,s=[];let a=0;n.length===0&&e.push(-1),a=n.length+1;for(let i=0;i<a;++i)s.push([]);const r=[];for(let i=0;i<e.length;++i){const l=e[i],u=JW(t,l);for(const h of u)r.indexOf(h)===-1&&(s[i].push(h),r.push(h))}return{path:e,steps:s}}function Xw(n){return n.every((t,e)=>t===e)}function JW(n,t){const e=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(t)!==-1||t===-1)&&e.push(s);return e}function Yw(n,t,e=0){let s=[];if(typeof t=="number")D(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const a=t.reduce((i,l)=>(l===-1&&(i+=1),i),0);D(a<=1,()=>"There should be only one negative value in split array.");const r=t.indexOf(-1);if(r!==-1){const i=t.reduce((l,u)=>u>0?l+u:l);t[r]=n.shape[e]-i}D(n.shape[e]===t.reduce((i,l)=>i+l),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JE(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function tA(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function eA(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function sA(n,t){return`size ${n} must be non-negative, not ${t}`}function aA(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function rA(n,t){const e=ht(n),s=ht(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function iA(n,t){const e=ht(n),s=ht(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x1(){return"segment ids must be >= 0"}function oA(){return"segment ids are not increasing"}function lA(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function uA(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(n,t){let e=!1,s;for(n<=_w?(s=n,e=!0):s=Cm(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=Cm(n,s+1);return s}function hA(n,t,e){const s=[],a=n.length;for(let r=0;r<a;r++)r!==t?s.push(n[r]):s.push(e);return s}function Zw(n,t,e,s){const a=t.shape.length,r=n.shape.length;if(s!==0&&(s<-a||s>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${s}`);if(s<0&&(s+=a),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let p=0;p<s;++p)if(n.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${n.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);const i=n.shape[e],l=[];let u=1,h=1,d=1;for(let p=0;p<s;++p)l.push(n.shape[p]),u*=n.shape[p];for(let p=s;p<e;p++)l.push(n.shape[p]),h*=n.shape[p];for(let p=s;p<a;p++)l.push(t.shape[p]);for(let p=e+1;p<r;p++)l.push(n.shape[p]),d*=n.shape[p];return{batchSize:u,sliceSize:d,outerSize:h,dimSize:i,outputShape:l}}const tG=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Zw,computeOutShape:hA,segOpComputeOptimalWindowSize:cA},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Or(n){try{return n.map(t=>Er(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function dA(n){return n.map(t=>ja(t))}const fA=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Bw,ERF_A2:Vw,ERF_A3:Pw,ERF_A4:Uw,ERF_A5:Ww,ERF_P:Mw,PARALLELIZE_THRESHOLD:_w,get RowPartitionType(){return Ca},SELU_SCALE:Zy,SELU_SCALEALPHA:Yy,applyActivation:Py,assertAndGetBroadcastShape:Pt,assertAxesAreInnerMostDims:Dn,assertParamsConsistent:Ow,assignToTypedArray:YE,axesAreInnerMostDims:Bv,calculateShapes:Pi,checkEinsumDimSizes:qw,checkPadOnDimRoundingMode:Yn,combineLocations:II,combineRaggedTensorToTensorShapes:WE,complexWithEvenIndex:KE,complexWithOddIndex:XE,computeConv2DInfo:vn,computeConv3DInfo:zi,computeDefaultPad:wv,computeDilation2DInfo:nf,computeOptimalWindowSize:Xy,computeOutAndReduceShapes:wn,computeOutShape:Ka,computePool2DInfo:ha,computePool3DInfo:Lr,convertConv2DDataFormat:zr,decodeEinsumEquation:Hw,eitherStridesOrDilationsAreOne:Rn,expandShapeToKeepDim:qe,exponent:QE,exponents:ZE,fromStringArrayToUint8:dA,fromUint8ToStringArray:Or,getAxesPermutation:ze,getBroadcastDims:Mo,getComplexWithIndex:Gw,getEinsumComputePath:Kw,getEinsumPermutation:jw,getFusedBiasGradient:Vy,getFusedDyActivation:By,getImageCenter:Fw,getInnerMostAxes:Ke,getPermuted:Sf,getRaggedRank:HE,getReductionAxes:en,getReshaped:wf,getReshapedPermuted:Nf,getRowPartitionTypesHelper:GE,getSliceBeginCoords:Lw,getSliceSize:zw,getSparseFillEmptyRowsIndicesDenseShapeMismatch:JE,getSparseFillEmptyRowsNegativeIndexErrorMessage:tA,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:eA,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:aA,getSparseReshapeInputOutputMismatchErrorMessage:iA,getSparseReshapeInputOutputMultipleErrorMessage:rA,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:nA,getSparseReshapeNegativeOutputDimErrorMessage:sA,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:uA,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:x1,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:oA,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:lA,getUndoAxesPermutation:Mi,isIdentityPermutation:Xw,log:HL,mergeRealAndImagArrays:Dr,prepareAndValidate:qy,prepareSplitSize:Yw,segment_util:tG,shouldFuse:Uy,slice_util:PE,splitRealAndImagArrays:qE,stridesOrDilationsArePositive:zo,tupleValuesAreOne:ki,upcastType:rs,validateDefaultValueShape:jE,validateInput:_y,validateUpdateShape:lw,warn:Ds},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Wy,nonMaxSuppressionV4Impl:Gy,nonMaxSuppressionV5Impl:Hy,whereImpl:zy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mW();const pA=Object.freeze(Object.defineProperty({__proto__:null,Abs:Zh,Acos:hu,Acosh:du,AdadeltaOptimizer:bw,AdagradOptimizer:xw,AdamOptimizer:vw,AdamaxOptimizer:ww,Add:Yo,AddN:Qh,All:sg,Any:ag,ArgMax:Jh,ArgMin:td,Asin:fu,Asinh:pu,Atan:mu,Atan2:yu,Atanh:gu,AvgPool:ed,AvgPool3D:nd,AvgPool3DGrad:ig,AvgPoolGrad:rg,BatchMatMul:sd,BatchToSpaceND:ad,Bincount:og,BitwiseAnd:rd,BroadcastArgs:lg,BroadcastTo:Gk,Cast:bu,Ceil:xu,ClipByValue:vu,Complex:ug,ComplexAbs:id,Concat:od,Conv2D:ld,Conv2DBackpropFilter:cg,Conv2DBackpropInput:ud,Conv3D:cd,Conv3DBackpropFilterV2:hg,Conv3DBackpropInputV2:dg,Cos:wu,Cosh:Su,CropAndResize:pg,Cumprod:fg,Cumsum:hd,DataStorage:Y1,DenseBincount:mg,DepthToSpace:gg,DepthwiseConv2dNative:dd,DepthwiseConv2dNativeBackpropFilter:yg,DepthwiseConv2dNativeBackpropInput:bg,Diag:xg,Dilation2D:fd,Dilation2DBackpropFilter:km,Dilation2DBackpropInput:$m,Draw:vg,get ENV(){return ev},Einsum:wg,Elu:Tu,EluGrad:Sg,Environment:Uk,Equal:pd,Erf:Cu,Exp:$u,ExpandDims:md,Expm1:ku,FFT:Ng,Fill:Tg,FlipLeftRight:Cg,Floor:Iu,FloorDiv:Eu,FromPixels:Im,FusedBatchNorm:gd,FusedConv2D:Oh,FusedDepthwiseConv2D:_h,GatherNd:$g,GatherV2:yd,Greater:bd,GreaterEqual:Au,IFFT:kg,Identity:Ru,Imag:Ig,IsFinite:Du,IsInf:Ou,IsNan:_u,KernelBackend:tg,LRN:Cd,LRNGrad:Ag,LeakyRelu:xd,Less:vd,LessEqual:wd,LinSpace:Eg,Log:Fu,Log1p:Lu,LogSoftmax:Hk,LogicalAnd:Sd,LogicalNot:Nd,LogicalOr:Td,LogicalXor:VL,LowerBound:PL,MatrixBandPart:UL,Max:$d,MaxPool:kd,MaxPool3D:Id,MaxPool3DGrad:Dg,MaxPoolGrad:Rg,MaxPoolWithArgmax:Og,Maximum:zu,Mean:Ed,Min:Ad,Minimum:Mu,MirrorPad:Rd,Mod:Bu,MomentumOptimizer:Sw,Multinomial:_g,Multiply:Vu,Neg:Dd,NonMaxSuppressionV3:Fg,NonMaxSuppressionV4:Lg,NonMaxSuppressionV5:zg,NotEqual:Od,OP_SCOPE_SUFFIX:ov,OneHot:Fd,OnesLike:_d,Optimizer:Ur,OptimizerConstructors:UE,Pack:Ld,PadV2:zd,Pool:WL,Pow:Pu,Prelu:Md,Prod:Bd,RMSPropOptimizer:Nw,RaggedGather:Mg,RaggedRange:Bg,RaggedTensorToTensor:Vg,Range:Pg,get Rank(){return e1},Real:Ug,RealDiv:Nu,Reciprocal:Uu,get Reduction(){return qn},Relu:Wu,Relu6:Gu,Reshape:Vd,ResizeBilinear:Ud,ResizeBilinearGrad:Gg,ResizeNearestNeighbor:Pd,ResizeNearestNeighborGrad:Wg,Reverse:Wd,RotateWithOffset:oy,Round:Hu,Rsqrt:ju,SGDOptimizer:jy,ScatterNd:Hg,SearchSorted:qg,Select:Gd,Selu:qu,Sigmoid:Zu,Sign:Yu,Sin:Ku,Sinh:Xu,Slice:Hd,Softmax:Xd,Softplus:Qu,SpaceToBatchND:qd,SparseFillEmptyRows:Kg,SparseReshape:Xg,SparseSegmentMean:Yg,SparseSegmentSum:Zg,SparseToDense:Qg,SplitV:Kd,Sqrt:Ju,Square:Jg,SquaredDifference:tc,StaticRegexReplace:Yd,Step:rc,StridedSlice:ty,StringNGrams:ey,StringSplit:ny,StringToHashBucketFast:sy,Sub:ec,Sum:jd,Tan:nc,Tanh:sc,Tensor:he,TensorBuffer:tn,TensorScatterUpdate:jg,Tile:ac,TopK:ay,Transform:ry,Transpose:Io,Unique:iy,Unpack:Zd,UnsortedSegmentSum:Qd,UpperBound:GL,Variable:zh,ZerosLike:Jd,_FusedMatMul:Dh,abs:Qe,acos:fv,acosh:pv,add:yt,addN:wI,all:hy,any:Bh,argMax:$i,argMin:mv,asin:gv,asinh:yv,atan:bv,atan2:xv,atanh:vv,avgPool:sf,avgPool3d:Sv,backend:uv,backend_util:fA,basicLSTMCell:SI,batchNorm:ic,batchNorm2d:Nv,batchNorm3d:Tv,batchNorm4d:Cv,batchToSpaceND:af,bincount:$v,bitwiseAnd:NI,booleanMaskAsync:iE,broadcastArgs:TI,broadcastTo:Eo,broadcast_util:TB,browser:GW,buffer:Wt,cast:wt,ceil:kv,clipByValue:os,clone:qa,complex:Ar,concat:Pe,concat1d:Iv,concat2d:Ev,concat3d:Av,concat4d:Rv,conv1d:dy,conv2d:Rr,conv2dTranspose:fy,conv3d:Ov,conv3dTranspose:_v,copyRegisteredKernels:KL,cos:rf,cosh:py,cosineWindow:My,cumprod:Uh,cumsum:my,customGrad:tr,denseBincount:Am,deprecationWarn:kz,depthToSpace:Fv,depthwiseConv2d:oc,device_util:wz,diag:$I,dilation2d:Lv,disableDeprecationWarnings:$z,dispose:qt,disposeVariables:Iz,div:At,divNoNan:zv,dot:Mv,dropout:fw,einsum:wo,elu:lc,enableDebugMode:Cz,enableProdMode:Tz,enclosingPowerOfTwo:pw,engine:Na,ensureShape:kI,env:at,equal:ca,erf:gy,euclideanNorm:Vv,exp:ls,expandDims:rn,expm1:Pv,eye:yy,fft:xf,fill:Zo,findBackend:_z,findBackendFactory:Fz,floor:cc,floorDiv:cy,fused:mE,gather:hc,gatherND:cE,gather_util:HW,getBackend:iI,getGradient:Jx,getKernel:Lh,getKernelsForBackend:Em,grad:o4,grads:l4,greater:hs,greaterEqual:Mr,ifft:au,imag:of,image:ra,inTopKAsync:hE,io:$w,irfft:Dy,isFinite:Uv,isInf:Wv,isNaN:Gv,keep:on,kernel_impls:eG,leakyRelu:lf,less:tu,lessEqual:Bi,linalg:yw,linspace:AI,localResponseNormalization:Hv,log:xs,log1p:uf,logSigmoid:jv,logSoftmax:xy,logSumExp:cf,logicalAnd:Ia,logicalNot:hf,logicalOr:vy,logicalXor:qv,losses:SE,lowerBound:DI,matMul:jt,math:FW,max:zs,maxPool:df,maxPool3d:Kv,maxPoolWithArgmax:OI,maximum:sr,mean:_e,memory:o1,meshgrid:_I,min:Jl,minimum:Ei,mirrorPad:Xv,mod:Yv,moments:ff,movingAverage:oE,mul:H,multiRNNCell:FI,multinomial:LI,neg:ke,nextFrame:Dw,norm:uc,notEqual:Bo,oneHot:eu,ones:ss,onesLike:vs,op:W,outerProduct:zI,pad:Br,pad1d:MI,pad2d:BI,pad3d:Zv,pad4d:VI,pool:Qv,pow:Ja,prelu:mf,print:dv,prod:Jv,profile:Ez,raggedGather:PI,raggedRange:UI,raggedTensorToTensor:WI,rand:GI,randomGamma:qI,randomNormal:Ny,randomStandardNormal:KI,randomUniform:Vi,randomUniformInt:XI,range:Vo,ready:Dz,real:nu,reciprocal:sw,registerBackend:lv,registerGradient:jk,registerKernel:ly,relu:Oa,relu6:Ty,removeBackend:Oz,reshape:j,reverse:Ms,reverse1d:YI,reverse2d:ZI,reverse3d:QI,reverse4d:JI,rfft:vf,round:Cy,rsqrt:$y,scalar:_t,scatterND:lE,scatter_util:dP,searchSorted:wy,selu:ky,separableConv2d:Iy,serialization:fW,setBackend:Rz,setPlatform:Lz,setdiff1dAsync:tE,sigmoid:ua,sign:aw,signal:wE,sin:Ey,sinh:Ay,slice:ee,slice1d:gf,slice2d:Ry,slice3d:yf,slice4d:su,slice_util:PE,softmax:bf,softplus:Qo,spaceToBatchND:pf,sparse:NE,sparseToDense:uE,spectral:vE,split:as,sqrt:xn,square:be,squaredDifference:Oy,squeeze:Vr,stack:us,step:Jo,stridedSlice:rw,string:TE,sub:kt,sum:Et,sumOutType:uy,tan:iw,tanh:Ii,tensor:la,tensor1d:Mn,tensor2d:Ao,tensor3d:ow,tensor4d:eE,tensor5d:nE,tensor6d:sE,tensorScatterUpdate:aE,tensor_util:gz,test_util:CV,tidy:nt,tile:_s,time:Az,topk:uw,train:xo,transpose:Jt,truncatedNormal:Fy,unique:cw,unregisterGradient:qL,unregisterKernel:jL,unsortedSegmentSum:Ly,unstack:Bs,upcastType:rs,upperBound:rE,util:sz,valueAndGrad:u4,valueAndGrads:c4,variable:hw,variableGrads:RI,version_core:YW,where:In,whereAsync:dw,zeros:Je,zerosLike:ne},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nG=at();nG.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var gs;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(gs||(gs={}));var J2;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(J2||(J2={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sG={};function mA(n){return sG[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k(n,t,e,s,a){const r=t.inputParams[n];if(r&&r.inputIndexStart!==void 0){const l=r.inputIndexStart,u=r.inputIndexEnd===0?void 0:r.inputIndexEnd===void 0?l+1:r.inputIndexEnd,h=l<0?t.inputNames.length+l:l;if(r.type==="tensor")return $n(t.inputNames[h],e,s,a);if(r.type==="tensors"){const m=t.inputs.slice(l,u);return t.inputNames.slice(l,u).filter((b,v)=>{var w;return((w=m[v])===null||w===void 0?void 0:w.op)!=="NoOp"}).map(b=>$n(b,e,s,a))}const d=$n(t.inputNames[h],e,s,a),p=d.dataSync();return r.type==="number"?p[0]:Ls(d.shape,p)}const i=t.attrParams[n];return i&&i.value}function $n(n,t,e,s){const[a,r]=ys(n,e);if(s!=null){const l=s.getHashTableHandleByName(a);if(l!=null)return l}const i=e.currentContextIds.find(l=>!!t[Rm(a,l)]);return i!==void 0?t[Rm(a,i)][r]:void 0}function t$(n,t,e){return t[Rm(n,e.currentContextId)]}function Nr(n,t){const[e,s,a]=ys(n,t);return[Rm(e,t&&t.currentContextId),s,a]}function Rm(n,t){return t?`${n}-${t}`:n}function ys(n,t){if(n==="")return["",0,void 0];const e=t!=null&&t.parseNodeNameCache!=null;if(e){const r=t.parseNodeNameCache.get(n);if(r!=null)return r}const s=n.split(":");let a;if(s.length===1)a=[n,0,void 0];else{const r=s[0],i=s.length===3?s[1]:void 0,l=Number(s[s.length-1]);a=[r,l,i]}return e&&t.parseNodeNameCache.set(n,a),a}function vm(n,t,e){let s=k("pad",n,t,e);if(s==="explicit"){s=k("explicitPaddings",n,t,e);const a=[[0,0],[0,0],[0,0],[0,0]];for(let r=0;r<4;r++)a[r][0]=s[r*2],a[r][1]=s[r*2+1];return a}return s}function Tr(n){return n.kept?n:qa(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aG=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],rG=Object.freeze(Object.defineProperty({__proto__:null,json:aG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iG=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],oG=Object.freeze(Object.defineProperty({__proto__:null,json:iG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lG=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],uG=Object.freeze(Object.defineProperty({__proto__:null,json:lG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cG=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],hG=Object.freeze(Object.defineProperty({__proto__:null,json:cG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dG=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],fG=Object.freeze(Object.defineProperty({__proto__:null,json:dG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pG=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mG=Object.freeze(Object.defineProperty({__proto__:null,json:pG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gG=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],yG=Object.freeze(Object.defineProperty({__proto__:null,json:gG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bG=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],xG=Object.freeze(Object.defineProperty({__proto__:null,json:bG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vG=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],wG=Object.freeze(Object.defineProperty({__proto__:null,json:vG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SG=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],NG=Object.freeze(Object.defineProperty({__proto__:null,json:SG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TG=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],CG=Object.freeze(Object.defineProperty({__proto__:null,json:TG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $G=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],kG=Object.freeze(Object.defineProperty({__proto__:null,json:$G},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IG=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],EG=Object.freeze(Object.defineProperty({__proto__:null,json:IG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AG=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],RG=Object.freeze(Object.defineProperty({__proto__:null,json:AG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DG=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],OG=Object.freeze(Object.defineProperty({__proto__:null,json:DG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _G=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],FG=Object.freeze(Object.defineProperty({__proto__:null,json:_G},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],zG=Object.freeze(Object.defineProperty({__proto__:null,json:LG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MG=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],BG=Object.freeze(Object.defineProperty({__proto__:null,json:MG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VG=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],PG=Object.freeze(Object.defineProperty({__proto__:null,json:VG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e${static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[rG,oG,uG,hG,fG,mG,yG,xG,wG,NG,CG,kG,EG,RG,OG,FG,zG,BG,PG],e=[].concat(...t.map(s=>s.json));this.opMappers=e.reduce((s,a)=>(s[a.tfOpName]=a,s),{})}transformGraph(t,e={}){const s=t.node,a=[],r=[],i=[],l=s.reduce((v,w)=>(v[w.name]=this.mapNode(w),w.op.startsWith("Placeholder")?a.push(v[w.name]):w.op==="Const"?r.push(v[w.name]):(w.input==null||w.input.length===0)&&i.push(v[w.name]),v),{});let u=[];const h=[];let d={},p={};e!=null&&(d=this.mapSignatureEntries(e.inputs),p=this.mapSignatureEntries(e.outputs));const m=Object.keys(l);m.forEach(v=>{const w=l[v];w.inputNames.forEach((S,T)=>{const[$,,C]=Nr(S),I=l[$];if(I.outputs!=null){const R=I.outputs.indexOf(C);if(R!==-1){const L=`${$}:${R}`;w.inputNames[T]=L}}w.inputs.push(I),I.children.push(w)})}),Object.keys(p).length===0?m.forEach(v=>{const w=l[v];w.children.length===0&&h.push(w)}):Object.keys(p).forEach(v=>{const[w]=Nr(v),S=l[w];S!=null&&(S.signatureKey=p[v],h.push(S))}),Object.keys(d).length>0?Object.keys(d).forEach(v=>{const[w]=Nr(v),S=l[w];S&&(S.signatureKey=d[v],u.push(S))}):u=a;let y={};t.library!=null&&t.library.function!=null&&(y=t.library.function.reduce((v,w)=>(v[w.signature.name]=this.mapFunction(w),v),{}));const b={nodes:l,inputs:u,outputs:h,weights:r,placeholders:a,signature:e,functions:y};return i.length>0&&(b.initNodes=i),b}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,s)=>(e[t[s].name]=s,e),{})}mapNode(t){const e=mA(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});const s={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(a=>a.startsWith("^")?a.slice(1):a),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(s.inputParams=e.inputs.reduce((a,r)=>(a[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},a),{})),e.attrs!=null&&(s.attrParams=e.attrs.reduce((a,r)=>{const i=r.type;let l;switch(r.type){case"string":l=v1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=v1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":l=k1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=k1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":l=S1(t.attr,r.tfName,r.defaultValue||0),l===void 0&&r.tfDeprecatedName&&(l=S1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":l=$1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=$1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":l=w1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=w1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":l=E1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=E1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":l=C1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=C1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":l=I1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=I1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":l=N1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=N1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":l=T1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=T1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":l=n$(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=n$(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${t.op}`)}return a[r.name]={value:l,type:i},a},{})),s}mapFunction(t){const e=t.nodeDef,s=[],a=[];let r={};e!=null&&(r=e.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&a.push(p[m.name]),p),{}));const i=[],l=[];t.signature.inputArg.forEach(p=>{const[m]=Nr(p.name),y={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Qw(p.type),type:"dtype"}},children:[]};y.signatureKey=p.name,i.push(y),r[m]=y}),Object.keys(r).forEach(p=>{const m=r[p];m.inputNames.forEach((y,b)=>{const[v,,w]=Nr(y),S=r[v];if(S.outputs!=null){const T=S.outputs.indexOf(w);if(T!==-1){const $=`${v}:${T}`;m.inputNames[b]=$}}m.inputs.push(S),S.children.push(m)})});const h=t.ret;t.signature.outputArg.forEach(p=>{const[m,y]=Nr(h[p.name]),b=r[m];b!=null&&(b.defaultOutput=y,l.push(b))});const d=this.mapArgsToSignature(t);return{nodes:r,inputs:i,outputs:l,weights:a,placeholders:s,signature:d}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s),e),{}),outputs:t.signature.outputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s,t.ret),e),{})}}mapArgToTensorInfo(t,e){let s=t.name;return e!=null&&(s=e[s]),{name:s,dtype:t.type}}}function UG(n){const t=at().global;if(typeof t.atob<"u")return t.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function gA(n,t){const e=Array.isArray(n)?String.fromCharCode.apply(null,n):UG(n);return t?e:e.toLowerCase()}function v1(n,t,e,s=!1){const a=n[t];return a!=null?gA(a.s,s):e}function w1(n,t,e){const s=n[t];return s?s.b:e}function S1(n,t,e){const s=n[t]||{},a=s.i!=null?s.i:s.f!=null?s.f:e;return typeof a=="number"?a:parseInt(a,10)}function Qw(n){switch(typeof n=="string"&&(n=gs[n]),n){case gs.DT_FLOAT:case gs.DT_HALF:return"float32";case gs.DT_INT32:case gs.DT_INT64:case gs.DT_INT8:case gs.DT_UINT8:return"int32";case gs.DT_BOOL:return"bool";case gs.DT_DOUBLE:return"float32";case gs.DT_STRING:return"string";case gs.DT_COMPLEX64:case gs.DT_COMPLEX128:return"complex64";default:return null}}function n$(n,t,e){const s=n[t];return s&&s.func?s.func.name:e}function N1(n,t,e){const s=n[t];return s&&s.type?Qw(s.type):e}function T1(n,t,e){const s=n[t];return s&&s.list&&s.list.type?s.list.type.map(a=>Qw(a)):e}function yA(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function C1(n,t,e){const s=n[t];return s&&s.shape?yA(s.shape):e}function $1(n,t,e){const s=n[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):e}function k1(n,t,e,s=!1){const a=n[t];return a&&a.list&&a.list.s?a.list.s.map(r=>gA(r,s)):e}function I1(n,t,e){const s=n[t];return s&&s.list&&s.list.shape?s.list.shape.map(a=>yA(a)):e}function E1(n,t,e){const s=n[t];return s&&s.list&&s.list.b?s.list.b:e}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WG{constructor(t,e,s){this.node=t,this.tensorMap=e,this.context=s,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(a=>this.getInput(a)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((a,r)=>(a[r]=this.getAttr(r),a),{}))}getInput(t){return $n(t,this.tensorMap,this.context)}getAttr(t,e){const s=this.node.rawAttrs[t];if(s.tensor!=null)return $n(t,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return S1(this.node.rawAttrs,t,e);if(s.s!=null)return v1(this.node.rawAttrs,t,e);if(s.b!=null)return w1(this.node.rawAttrs,t,e);if(s.shape!=null)return C1(this.node.rawAttrs,t,e);if(s.type!=null)return N1(this.node.rawAttrs,t,e);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return $1(this.node.rawAttrs,t,e);if(s.list.s!=null)return k1(this.node.rawAttrs,t,e);if(s.list.shape!=null)return I1(this.node.rawAttrs,t,e);if(s.list.b!=null)return E1(this.node.rawAttrs,t,e);if(s.list.type!=null)return T1(this.node.rawAttrs,t,e)}return e}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const On=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:ov,abs:Qe,acos:fv,acosh:pv,add:yt,addN:wI,all:hy,any:Bh,argMax:$i,argMin:mv,asin:gv,asinh:yv,atan:bv,atan2:xv,atanh:vv,avgPool:sf,avgPool3d:Sv,basicLSTMCell:SI,batchNorm:ic,batchNorm2d:Nv,batchNorm3d:Tv,batchNorm4d:Cv,batchToSpaceND:af,bincount:$v,bitwiseAnd:NI,booleanMaskAsync:iE,broadcastArgs:TI,broadcastTo:Eo,buffer:Wt,cast:wt,ceil:kv,clipByValue:os,clone:qa,complex:Ar,concat:Pe,concat1d:Iv,concat2d:Ev,concat3d:Av,concat4d:Rv,conv1d:dy,conv2d:Rr,conv2dTranspose:fy,conv3d:Ov,conv3dTranspose:_v,cos:rf,cosh:py,cosineWindow:My,cumprod:Uh,cumsum:my,denseBincount:Am,depthToSpace:Fv,depthwiseConv2d:oc,diag:$I,dilation2d:Lv,div:At,divNoNan:zv,dot:Mv,dropout:fw,einsum:wo,elu:lc,enclosingPowerOfTwo:pw,ensureShape:kI,equal:ca,erf:gy,euclideanNorm:Vv,exp:ls,expandDims:rn,expm1:Pv,eye:yy,fft:xf,fill:Zo,floor:cc,floorDiv:cy,fused:mE,gather:hc,gatherND:cE,greater:hs,greaterEqual:Mr,ifft:au,imag:of,image:ra,inTopKAsync:hE,irfft:Dy,isFinite:Uv,isInf:Wv,isNaN:Gv,leakyRelu:lf,less:tu,lessEqual:Bi,linalg:yw,linspace:AI,localResponseNormalization:Hv,log:xs,log1p:uf,logSigmoid:jv,logSoftmax:xy,logSumExp:cf,logicalAnd:Ia,logicalNot:hf,logicalOr:vy,logicalXor:qv,losses:SE,lowerBound:DI,matMul:jt,max:zs,maxPool:df,maxPool3d:Kv,maxPoolWithArgmax:OI,maximum:sr,mean:_e,meshgrid:_I,min:Jl,minimum:Ei,mirrorPad:Xv,mod:Yv,moments:ff,movingAverage:oE,mul:H,multiRNNCell:FI,multinomial:LI,neg:ke,norm:uc,notEqual:Bo,oneHot:eu,ones:ss,onesLike:vs,op:W,outerProduct:zI,pad:Br,pad1d:MI,pad2d:BI,pad3d:Zv,pad4d:VI,pool:Qv,pow:Ja,prelu:mf,print:dv,prod:Jv,raggedGather:PI,raggedRange:UI,raggedTensorToTensor:WI,rand:GI,randomGamma:qI,randomNormal:Ny,randomStandardNormal:KI,randomUniform:Vi,randomUniformInt:XI,range:Vo,real:nu,reciprocal:sw,relu:Oa,relu6:Ty,reshape:j,reverse:Ms,reverse1d:YI,reverse2d:ZI,reverse3d:QI,reverse4d:JI,rfft:vf,round:Cy,rsqrt:$y,scalar:_t,scatterND:lE,searchSorted:wy,selu:ky,separableConv2d:Iy,setdiff1dAsync:tE,sigmoid:ua,sign:aw,signal:wE,sin:Ey,sinh:Ay,slice:ee,slice1d:gf,slice2d:Ry,slice3d:yf,slice4d:su,softmax:bf,softplus:Qo,spaceToBatchND:pf,sparse:NE,sparseToDense:uE,spectral:vE,split:as,sqrt:xn,square:be,squaredDifference:Oy,squeeze:Vr,stack:us,step:Jo,stridedSlice:rw,string:TE,sub:kt,sum:Et,tan:iw,tanh:Ii,tensor:la,tensor1d:Mn,tensor2d:Ao,tensor3d:ow,tensor4d:eE,tensor5d:nE,tensor6d:sE,tensorScatterUpdate:aE,tile:_s,topk:uw,transpose:Jt,truncatedNormal:Fy,unique:cw,unsortedSegmentSum:Ly,unstack:Bs,upperBound:rE,variable:hw,where:In,whereAsync:dw,zeros:Je,zerosLike:ne},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GG=(n,t,e,s=On)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(k("a",n,t,e),k("b",n,t,e))];case"AddN":return[s.addN(k("tensors",n,t,e))];case"FloorMod":case"Mod":return[s.mod(k("a",n,t,e),k("b",n,t,e))];case"Mul":return[s.mul(k("a",n,t,e),k("b",n,t,e))];case"RealDiv":case"Div":return[s.div(k("a",n,t,e),k("b",n,t,e))];case"DivNoNan":return[s.divNoNan(k("a",n,t,e),k("b",n,t,e))];case"FloorDiv":return[s.floorDiv(k("a",n,t,e),k("b",n,t,e))];case"Sub":return[s.sub(k("a",n,t,e),k("b",n,t,e))];case"Minimum":return[s.minimum(k("a",n,t,e),k("b",n,t,e))];case"Maximum":return[s.maximum(k("a",n,t,e),k("b",n,t,e))];case"Pow":return[s.pow(k("a",n,t,e),k("b",n,t,e))];case"SquaredDifference":return[s.squaredDifference(k("a",n,t,e),k("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HG=(n,t,e,s=On)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(k("x",n,t,e))];case"Acos":return[s.acos(k("x",n,t,e))];case"Acosh":return[s.acosh(k("x",n,t,e))];case"Asin":return[s.asin(k("x",n,t,e))];case"Asinh":return[s.asinh(k("x",n,t,e))];case"Atan":return[s.atan(k("x",n,t,e))];case"Atan2":return[s.atan2(k("x",n,t,e),k("y",n,t,e))];case"Atanh":return[s.atanh(k("x",n,t,e))];case"Ceil":return[s.ceil(k("x",n,t,e))];case"Complex":return[s.complex(k("real",n,t,e),k("imag",n,t,e))];case"Cos":return[s.cos(k("x",n,t,e))];case"Cosh":return[s.cosh(k("x",n,t,e))];case"Elu":return[s.elu(k("x",n,t,e))];case"Erf":return[s.erf(k("x",n,t,e))];case"Exp":return[s.exp(k("x",n,t,e))];case"Expm1":return[s.expm1(k("x",n,t,e))];case"Floor":return[s.floor(k("x",n,t,e))];case"Log":return[s.log(k("x",n,t,e))];case"Log1p":return[s.log1p(k("x",n,t,e))];case"Imag":return[s.imag(k("x",n,t,e))];case"Neg":return[s.neg(k("x",n,t,e))];case"Reciprocal":return[s.reciprocal(k("x",n,t,e))];case"Real":return[s.real(k("x",n,t,e))];case"Relu":return[s.relu(k("x",n,t,e))];case"Round":return[s.round(k("x",n,t,e))];case"Selu":return[s.selu(k("x",n,t,e))];case"Sigmoid":return[s.sigmoid(k("x",n,t,e))];case"Sin":return[s.sin(k("x",n,t,e))];case"Sign":return[s.sign(k("x",n,t,e))];case"Sinh":return[s.sinh(k("x",n,t,e))];case"Softplus":return[s.softplus(k("x",n,t,e))];case"Sqrt":return[s.sqrt(k("x",n,t,e))];case"Square":return[s.square(k("x",n,t,e))];case"Tanh":return[s.tanh(k("x",n,t,e))];case"Tan":return[s.tan(k("x",n,t,e))];case"ClipByValue":return[s.clipByValue(k("x",n,t,e),k("clipValueMin",n,t,e),k("clipValueMax",n,t,e))];case"Relu6":return[s.relu6(k("x",n,t,e))];case"Rsqrt":return[s.rsqrt($n(n.inputNames[0],t,e))];case"LeakyRelu":return[s.leakyRelu(k("x",n,t,e),k("alpha",n,t,e))];case"Prelu":return[s.prelu(k("x",n,t,e),k("alpha",n,t,e))];case"IsNan":return[s.isNaN($n(n.inputNames[0],t,e))];case"IsInf":return[s.isInf($n(n.inputNames[0],t,e))];case"IsFinite":return[s.isFinite($n(n.inputNames[0],t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sa(n,t,e=""){if(!(typeof n=="number"||typeof t=="number")){D(n.length===t.length,()=>e+` Shapes ${n} and ${t} must match`);for(let s=0;s<n.length;s++){const a=n[s],r=t[s];D(a<0||r<0||a===r,()=>e+` Shapes ${n} and ${t} must match`)}}}function s$(n){return!(typeof n=="number"||n.some(t=>t<0))}function wh(n,t,e){let s=A1(n,e);const a=!s$(s);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(a&&t.forEach(r=>{s=A1(r.shape,s)}),!s$(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function A1(n,t){if(typeof n=="number")return t;if(typeof t=="number")return n;if(n.length!==t.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${t}`);const e=[];for(let s=0;s<n.length;++s){const a=n[s],r=t[s];if(a>=0&&r>=0&&a!==r)throw new Error(`Incompatible shape during merge: ${n} vs. ${t}`);e[s]=a>=0?a:r}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jG{constructor(t,e,s,a,r,i,l){this.name=t,this.dtype=e,this.maxSize=s,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=i,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=_t(0),on(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),sa(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);s.tensor=e,on(e),s.written=!0,this.tensors[t]=s}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((s,a)=>this.write(s,e[a]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let a=0;a<this.size();a++)t.push(a)}if(t.length===0)return la([],[0].concat(this.elementShape));const s=this.readMany(t);return sa(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),us(s,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return la([],[0].concat(this.elementShape));const e=[];for(let a=0;a<this.size();a++)e.push(a);const s=this.readMany(e);return sa(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Pe(s,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(t,Bs(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let s=0;const a=t.map(u=>(s+=u,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const r=s===0?0:e.size/s,i=[];nt(()=>{e=j(e,[1,s,r]);for(let u=0;u<t.length;++u){const d=[0,u===0?0:a[u-1],0],p=[1,t[u],r];i[u]=j(ee(e,d,p),this.elementShape)}return i});const l=[];for(let u=0;u<t.length;u++)l[u]=u;this.writeMany(l,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uo{get id(){return this.idTensor.id}constructor(t,e,s,a=-1){this.tensors=t,this.elementShape=e,this.elementDtype=s,t!=null&&t.forEach(r=>{if(s!==r.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${r.dtype}`);sa(e,r.shape,"TensorList shape mismatch: "),on(r)}),this.idTensor=_t(0),this.maxNumElements=a,on(this.idTensor)}copy(){return new Uo([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,s=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);sa(t,this.elementShape,"TensorList shape mismatch: ");const a=wh(this.elementShape,this.tensors,t);return nt(()=>{const r=this.tensors.map(i=>j(i,a));return us(r,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=wh(this.elementShape,this.tensors,t),a=this.tensors.pop();return a.kept=!1,sa(a.shape,t,"TensorList shape mismatch: "),j(a,s)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(sa(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");on(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new Uo([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let s=0;s<Math.min(this.tensors.length,t);++s)e.tensors[s]=this.tensors[s];return e}getItem(t,e,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);sa(this.tensors[t].shape,e,"TensorList shape mismatch: ");const a=wh(this.elementShape,this.tensors,e);return j(this.tensors[t],a)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);sa(this.elementShape,e.shape,"TensorList shape mismatch: "),on(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,s){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);sa(this.elementShape,s,"TensorList shape mismatch: "),t=t.slice(0,this.size());const a=wh(this.elementShape,this.tensors,s);return t.length===0?la([],[0].concat(a)):nt(()=>{const r=t.map(i=>j(this.tensors[i],a));return us(r,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);sa(this.elementShape,e,"TensorList shape mismatch: ");const s=wh(this.elementShape,this.tensors,e);return this.size()===0?la([],[0].concat(s)):nt(()=>{const a=this.tensors.map(r=>j(r,s));return Pe(a,0)})}}function qG(n,t,e){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==e)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${e}`);const a=n.shape.slice(1);sa(a,t,"TensorList shape mismatch: ");const r=Bs(n);return new Uo(r,t,s)}function KG(n,t,e,s){return new Uo([],n,t,s)}function XG(n,t,e,s){if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);const a=Math.max(...t);if(s!=null&&s!==-1&&a>=s)throw new Error(`Max index must be < array size (${a}  vs. ${s})`);const r=new Uo([],e,n.dtype,s),i=Bs(n,0);return t.forEach((l,u)=>{r.setItem(l,i[u])}),r}function YG(n,t,e){let s=0;const a=t.map(d=>(s+=d,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const r=n.shape.slice(1),i=A1(r,e),l=s===0?0:n.size/s,u=nt(()=>{const d=[];n=j(n,[1,s,l]);for(let p=0;p<t.length;++p){const y=[0,p===0?0:a[p-1],0],b=[1,t[p],l];d[p]=j(ee(n,y,b),i)}return n.dispose(),d}),h=new Uo([],e,n.dtype,t.length);for(let d=0;d<u.length;d++)h.setItem(d,u[d]);return h}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG=async(n,t,e)=>{switch(n.op){case"If":case"StatelessIf":{const s=k("thenBranch",n,t,e),a=k("elseBranch",n,t,e),r=k("cond",n,t,e),i=k("args",n,t,e);return(await r.data())[0]?e.functionMap[s].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap):e.functionMap[a].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{const s=k("body",n,t,e),a=k("cond",n,t,e),r=k("args",n,t,e),i=await e.functionMap[a].executeFunctionAsync(r,e.tensorArrayMap,e.tensorListMap),l=r.map(d=>d.id);let u=await i[0].data();i.forEach(d=>{!d.kept&&l.indexOf(d.id)===-1&&d.dispose()});let h=r;for(;u[0];){const d=h;h=await e.functionMap[s].executeFunctionAsync(h,e.tensorArrayMap,e.tensorListMap);const p=h.map(y=>y.id);d.forEach(y=>{!y.kept&&l.indexOf(y.id)===-1&&p.indexOf(y.id)===-1&&y.dispose()});const m=await e.functionMap[a].executeFunctionAsync(h,e.tensorArrayMap,e.tensorListMap);u=await m[0].data(),m.forEach(y=>{!y.kept&&l.indexOf(y.id)===-1&&p.indexOf(y.id)===-1&&y.dispose()})}return h}case"LoopCond":{const s=k("pred",n,t,e);return[Tr(s)]}case"Switch":{const s=k("pred",n,t,e);let a=k("data",n,t,e);return a.kept||(a=Tr(a)),(await s.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const s=n.inputNames.find(a=>$n(a,t,e)!==void 0);if(s){const a=$n(s,t,e);return[Tr(a)]}return}case"Enter":{const s=k("frameName",n,t,e),a=k("tensor",n,t,e);return e.enterFrame(s),[Tr(a)]}case"Exit":{const s=k("tensor",n,t,e);return e.exitFrame(),[Tr(s)]}case"NextIteration":{const s=k("tensor",n,t,e);return e.nextIteration(),[Tr(s)]}case"TensorArrayV3":{const s=k("size",n,t,e),a=k("dtype",n,t,e),r=k("elementShape",n,t,e),i=k("dynamicSize",n,t,e),l=k("clearAfterRead",n,t,e),u=k("identicalElementShapes",n,t,e),h=k("name",n,t,e),d=new jG(h,a,s,r,u,i,l);return e.addTensorArray(d),[d.idTensor,_t(1)]}case"TensorArrayWriteV3":{const s=k("tensorArrayId",n,t,e),a=k("index",n,t,e),r=k("tensor",n,t,e),i=e.getTensorArray(s.id);return i.write(a,r),[i.idTensor]}case"TensorArrayReadV3":{const s=k("tensorArrayId",n,t,e),a=k("index",n,t,e);return[e.getTensorArray(s.id).read(a)]}case"TensorArrayGatherV3":{const s=k("tensorArrayId",n,t,e),a=k("indices",n,t,e),r=k("dtype",n,t,e);return[e.getTensorArray(s.id).gather(a,r)]}case"TensorArrayScatterV3":{const s=k("tensorArrayId",n,t,e),a=k("indices",n,t,e),r=k("tensor",n,t,e),i=e.getTensorArray(s.id);return i.scatter(a,r),[i.idTensor]}case"TensorArrayConcatV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id),r=k("dtype",n,t,e);return[a.concat(r)]}case"TensorArraySplitV3":{const s=k("tensorArrayId",n,t,e),a=k("tensor",n,t,e),r=k("lengths",n,t,e),i=e.getTensorArray(s.id);return i.split(r,a),[i.idTensor]}case"TensorArraySizeV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id);return[_t(a.size(),"int32")]}case"TensorArrayCloseV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const s=k("tensorListId",n,t,e),a=k("index",n,t,e),r=k("tensor",n,t,e),i=e.getTensorList(s.id);return i.setItem(a,r),[i.idTensor]}case"TensorListGetItem":{const s=k("tensorListId",n,t,e),a=k("index",n,t,e),r=k("elementShape",n,t,e),i=k("elementDType",n,t,e);return[e.getTensorList(s.id).getItem(a,r,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=k("indices",n,t,e),a=k("tensor",n,t,e),r=k("elementShape",n,t,e),i=k("numElements",n,t,e),l=XG(a,s,r,i);return e.addTensorList(l),[l.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=k("elementShape",n,t,e),a=k("elementDType",n,t,e);let r;n.op==="TensorListReserve"?r="numElements":r="maxNumElements";const i=k(r,n,t,e),l=n.op==="TensorListReserve"?-1:i,u=KG(s,a,i,l);return e.addTensorList(u),[u.idTensor]}case"TensorListGather":{const s=k("tensorListId",n,t,e),a=k("indices",n,t,e),r=k("elementShape",n,t,e),i=k("elementDType",n,t,e);return[e.getTensorList(s.id).gather(a,i,r)]}case"TensorListStack":{const s=k("tensorListId",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e),i=k("numElements",n,t,e);return[e.getTensorList(s.id).stack(a,r,i)]}case"TensorListFromTensor":{const s=k("tensor",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e),i=qG(s,a,r);return e.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=k("tensorListId",n,t,e),a=e.getTensorList(s.id),r=k("dtype",n,t,e),i=k("elementShape",n,t,e);return[a.concat(r,i)]}case"TensorListPushBack":{const s=k("tensorListId",n,t,e),a=k("tensor",n,t,e),r=e.getTensorList(s.id);return r.pushBack(a),[r.idTensor]}case"TensorListPopBack":{const s=k("tensorListId",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e);return[e.getTensorList(s.id).popBack(a,r)]}case"TensorListSplit":{const s=k("tensor",n,t,e),a=k("elementShape",n,t,e),r=k("lengths",n,t,e),i=YG(s,r,a);return e.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=k("tensorListId",n,t,e),a=e.getTensorList(s.id);return[_t(a.size(),"int32")]}case"TensorListResize":{const s=k("tensorListId",n,t,e),a=k("size",n,t,e),i=e.getTensorList(s.id).resize(a);return e.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n,t,e){const[s,a]=k("fusedOps",n,t,e),r=s==="biasadd",i=!r,l=a==="prelu",u=s==="fusedbatchnorm",h=k("numArgs",n,t,e);if(r){if(l&&h!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&r&&h!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const d=k("strides",n,t,e),p=vm(n,t,e),m=k("dataFormat",n,t,e).toUpperCase(),y=k("dilations",n,t,e);let[b,v]=k("args",n,t,e);i&&(v=b,b=void 0);const w=k("leakyreluAlpha",n,t,e);return{stride:d,pad:p,dataFormat:m,dilations:y,biasArg:b,preluArg:v,activationFunc:a,leakyreluAlpha:w}}const QG=(n,t,e,s=On)=>{switch(n.op){case"Conv1D":{const a=k("stride",n,t,e),r=k("pad",n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilation",n,t,e);return[s.conv1d(k("x",n,t,e),k("filter",n,t,e),a,r,i,l)]}case"Conv2D":{const a=k("strides",n,t,e),r=vm(n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilations",n,t,e);return[s.conv2d(k("x",n,t,e),k("filter",n,t,e),[a[1],a[2]],r,i,[l[1],l[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:i,dilations:l,biasArg:u,preluArg:h,activationFunc:d,leakyreluAlpha:p}=a$(n,t,e);return[s.fused.conv2d({x:k("x",n,t,e),filter:k("filter",n,t,e),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[l[1],l[2]],bias:u,activation:d,preluActivationWeights:h,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:i,dilations:l,biasArg:u,preluArg:h,activationFunc:d,leakyreluAlpha:p}=a$(n,t,e);return[s.fused.depthwiseConv2d({x:k("x",n,t,e),filter:k("filter",n,t,e),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[l[1],l[2]],bias:u,activation:d,preluActivationWeights:h,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=k("outputShape",n,t,e),r=k("strides",n,t,e),i=vm(n,t,e);return[s.conv2dTranspose(k("x",n,t,e),k("filter",n,t,e),a,[r[1],r[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=k("strides",n,t,e),r=vm(n,t,e),i=k("dilations",n,t,e),l=k("dataFormat",n,t,e).toUpperCase();return[s.depthwiseConv2d(k("input",n,t,e),k("filter",n,t,e),[a[1],a[2]],r,l,[i[1],i[2]])]}case"Conv3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilations",n,t,e);return[s.conv3d(k("x",n,t,e),k("filter",n,t,e),[a[1],a[2],a[3]],r,i,[l[1],l[2],l[3]])]}case"AvgPool":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.avgPool(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.maxPool(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e),l=k("includeBatchInIndex",n,t,e),{result:u,indexes:h}=s.maxPoolWithArgmax(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r,l);return[u,h]}case"AvgPool3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.avgPool3d(k("x",n,t,e),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.maxPool3d(k("x",n,t,e),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("dilations",n,t,e),l=a[1],u=a[2],h=i[1],d=i[2];return[s.dilation2d(k("x",n,t,e),k("filter",n,t,e),[l,u],r,[h,d],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JG=(n,t,e,s=On)=>{switch(n.op){case"Fill":{const a=k("shape",n,t,e),r=k("dtype",n,t,e),i=k("value",n,t,e);return[s.fill(a,i,r)]}case"LinSpace":{const a=k("start",n,t,e),r=k("stop",n,t,e),i=k("num",n,t,e);return[s.linspace(a,r,i)]}case"Multinomial":{const a=k("logits",n,t,e),r=k("numSamples",n,t,e),i=k("seed",n,t,e);return[s.multinomial(a,r,i)]}case"OneHot":{const a=k("indices",n,t,e),r=k("depth",n,t,e),i=k("onValue",n,t,e),l=k("offValue",n,t,e),u=k("dtype",n,t,e);return[s.oneHot(a,r,i,l,u)]}case"Ones":return[s.ones(k("shape",n,t,e),k("dtype",n,t,e))];case"OnesLike":return[s.onesLike(k("x",n,t,e))];case"RandomStandardNormal":return[s.randomStandardNormal(k("shape",n,t,e),k("dtype",n,t,e),k("seed",n,t,e))];case"RandomUniform":return[s.randomUniform(k("shape",n,t,e),k("minval",n,t,e),k("maxval",n,t,e),k("dtype",n,t,e))];case"RandomUniformInt":return[s.randomUniformInt(k("shape",n,t,e),k("minval",n,t,e),k("maxval",n,t,e),k("seed",n,t,e))];case"Range":{const a=k("start",n,t,e),r=k("stop",n,t,e),i=k("step",n,t,e);return[s.range(a,r,i,k("dtype",n,t,e))]}case"TruncatedNormal":{const a=k("shape",n,t,e),r=k("mean",n,t,e),i=k("stdDev",n,t,e),l=k("seed",n,t,e);return[s.truncatedNormal(a,r,i,k("dtype",n,t,e),l)]}case"Zeros":return[s.zeros(k("shape",n,t,e),k("dtype",n,t,e))];case"ZerosLike":return[s.zerosLike(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lx(n,t,e){const s=k("boxes",n,t,e),a=k("scores",n,t,e),r=k("maxOutputSize",n,t,e),i=k("iouThreshold",n,t,e),l=k("scoreThreshold",n,t,e),u=k("softNmsSigma",n,t,e);return{boxes:s,scores:a,maxOutputSize:r,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}}const tH=async(n,t,e,s,a=On)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h,softNmsSigma:d}=Lx(n,t,e),p=await a.image.nonMaxSuppressionWithScoreAsync(r,i,l,u,h,d);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h}=Lx(n,t,e),d=k("padToMaxOutputSize",n,t,e),p=await a.image.nonMaxSuppressionPaddedAsync(r,i,l,u,h,d);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h}=Lx(n,t,e);return[await a.image.nonMaxSuppressionAsync(r,i,l,u,h)]}case"Where":{const r=a.cast(k("condition",n,t,e),"bool"),i=[await a.whereAsync(r)];return r.dispose(),i}case"ListDiff":return a.setdiff1dAsync(k("x",n,t,e),k("y",n,t,e));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eH=(n,t,e,s=On)=>{switch(n.op){case"LowerBound":{const a=k("sortedSequence",n,t,e),r=k("values",n,t,e);return[s.lowerBound(a,r)]}case"TopKV2":{const a=k("x",n,t,e),r=k("k",n,t,e),i=k("sorted",n,t,e),l=s.topk(a,r,i);return[l.values,l.indices]}case"UpperBound":{const a=k("sortedSequence",n,t,e),r=k("values",n,t,e);return[s.upperBound(a,r)]}case"Unique":{const a=k("x",n,t,e),r=s.unique(a);return[r.values,r.indices]}case"UniqueV2":{const a=k("x",n,t,e),r=k("axis",n,t,e),i=s.unique(a,r);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nH=(n,t,e,s=On)=>{switch(n.op){case"Const":return t[n.name];case"PlaceholderWithDefault":const a=k("default",n,t,e);return[$n(n.name,t,e)||a];case"Placeholder":return[$n(n.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const d=k("x",n,t,e);return[Tr(d)]}case"IdentityN":return k("x",n,t,e).map(d=>Tr(d));case"Snapshot":const r=k("x",n,t,e);return[Tr(r)];case"Shape":return[s.tensor1d(k("x",n,t,e).shape,"int32")];case"ShapeN":return k("x",n,t,e).map(d=>s.tensor1d(d.shape));case"Size":return[s.scalar(k("x",n,t,e).size,"int32")];case"Rank":return[s.scalar(k("x",n,t,e).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=k("x",n,t,e),l=k("data",n,t,e),u=k("message",n,t,e),h=k("summarize",n,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let d=0;d<l.length;d++)console.log(Array.prototype.slice.call(l[d].dataSync()).slice(0,h));return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sH{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=_t(0),this.tensorMap=new Map,on(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return _t(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return this.tensorMap.forEach(a=>a.dispose()),this.tensorMap.clear(),nt(()=>{const a=Bs(e),r=s.length,i=a.length;D(r===i,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${i} elements.`);for(let l=0;l<r;l++){const u=s[l],h=a[l];on(h),this.tensorMap.set(u,h)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return nt(()=>{const a=[];for(let r=0;r<s.length;r++){const i=s[r],l=this.findWithDefault(i,e);a.push(l)}return us(a)})}findWithDefault(t,e){const s=this.tensorMap.get(t);return s??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aH=async(n,t,e,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const a=s.getHashTableHandleByName(n.name);if(a!=null)return[a];{const r=k("keyDType",n,t,e),i=k("valueDType",n,t,e),l=new sH(r,i);return s.addHashTable(n.name,l),[l.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=k("tableHandle",n,t,e,s),r=k("keys",n,t,e),i=k("values",n,t,e);return[await s.getHashTableById(a.id).import(r,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=k("tableHandle",n,t,e,s),r=k("keys",n,t,e),i=k("defaultValue",n,t,e);return[await s.getHashTableById(a.id).find(r,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=k("tableHandle",n,t,e,s);return[s.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rH=(n,t,e,s=On)=>{switch(n.op){case"ResizeBilinear":{const a=k("images",n,t,e),r=k("size",n,t,e),i=k("alignCorners",n,t,e),l=k("halfPixelCenters",n,t,e);return[s.image.resizeBilinear(a,[r[0],r[1]],i,l)]}case"ResizeNearestNeighbor":{const a=k("images",n,t,e),r=k("size",n,t,e),i=k("alignCorners",n,t,e),l=k("halfPixelCenters",n,t,e);return[s.image.resizeNearestNeighbor(a,[r[0],r[1]],i,l)]}case"CropAndResize":{const a=k("image",n,t,e),r=k("boxes",n,t,e),i=k("boxInd",n,t,e),l=k("cropSize",n,t,e),u=k("method",n,t,e),h=k("extrapolationValue",n,t,e);return[s.image.cropAndResize(a,r,i,l,u,h)]}case"ImageProjectiveTransformV3":{const a=k("images",n,t,e),r=k("transforms",n,t,e),i=k("outputShape",n,t,e),l=k("fillValue",n,t,e),u=k("interpolation",n,t,e),h=k("fillMode",n,t,e);return[s.image.transform(a,r,u.toLowerCase(),h.toLowerCase(),l,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iH=(n,t,e,s=On)=>{switch(n.op){case"Equal":return[s.equal(k("a",n,t,e),k("b",n,t,e))];case"NotEqual":return[s.notEqual(k("a",n,t,e),k("b",n,t,e))];case"Greater":return[s.greater(k("a",n,t,e),k("b",n,t,e))];case"GreaterEqual":return[s.greaterEqual(k("a",n,t,e),k("b",n,t,e))];case"Less":return[s.less(k("a",n,t,e),k("b",n,t,e))];case"LessEqual":return[s.lessEqual(k("a",n,t,e),k("b",n,t,e))];case"LogicalAnd":return[s.logicalAnd(k("a",n,t,e),k("b",n,t,e))];case"LogicalNot":return[s.logicalNot(k("a",n,t,e))];case"LogicalOr":return[s.logicalOr(k("a",n,t,e),k("b",n,t,e))];case"Select":case"SelectV2":return[s.where(k("condition",n,t,e),k("a",n,t,e),k("b",n,t,e))];case"BitwiseAnd":return[s.bitwiseAnd(k("a",n,t,e),k("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oH=(n,t,e,s=On)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(k("a",n,t,e),k("b",n,t,e),k("transposeA",n,t,e),k("transposeB",n,t,e))];case"Einsum":return[s.einsum(k("equation",n,t,e),...k("tensors",n,t,e))];case"Transpose":return[s.transpose(k("x",n,t,e),k("perm",n,t,e))];case"_FusedMatMul":const[a,r]=k("fusedOps",n,t,e),i=a==="biasadd",l=r==="prelu",u=k("numArgs",n,t,e),h=k("leakyreluAlpha",n,t,e);if(i){if(l&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[d,p]=k("args",n,t,e);return[s.fused.matMul({a:k("a",n,t,e),b:k("b",n,t,e),transposeA:k("transposeA",n,t,e),transposeB:k("transposeB",n,t,e),bias:d,activation:r,preluActivationWeights:p,leakyreluAlpha:h})];case"MatrixBandPart":return[s.linalg.bandPart(k("a",n,t,e),k("numLower",n,t,e),k("numUpper",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lH=(n,t,e,s=On)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(k("x",n,t,e),k("axis",n,t,e),k("keepDims",n,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(k("x",n,t,e),k("mean",n,t,e),k("variance",n,t,e),k("offset",n,t,e),k("scale",n,t,e),k("epsilon",n,t,e))];case"FusedBatchNormV3":return[s.batchNorm(k("x",n,t,e),k("mean",n,t,e),k("variance",n,t,e),k("offset",n,t,e),k("scale",n,t,e),k("epsilon",n,t,e))];case"LRN":return[s.localResponseNormalization(k("x",n,t,e),k("radius",n,t,e),k("bias",n,t,e),k("alpha",n,t,e),k("beta",n,t,e))];case"Softmax":return[s.softmax(k("x",n,t,e))];case"LogSoftmax":return[s.logSoftmax(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uH=(n,t,e,s=On)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:r}=s.raggedGather(k("paramsNestedSplits",n,t,e),k("paramsDenseValues",n,t,e),k("indices",n,t,e),k("outputRaggedRank",n,t,e));return a.concat(r)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:r}=s.raggedRange(k("starts",n,t,e),k("limits",n,t,e),k("splits",n,t,e));return[a,r]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(k("shape",n,t,e),k("values",n,t,e),k("defaultValue",n,t,e),k("rowPartitionTensors",n,t,e),k("rowPartitionTypes",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cH=(n,t,e,s=On)=>{switch(n.op){case"Max":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.max(k("x",n,t,e),l,u)]}case"Mean":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.mean(k("x",n,t,e),l,u)]}case"Min":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.min(k("x",n,t,e),l,u)]}case"Sum":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.sum(k("x",n,t,e),l,u)]}case"All":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.all(k("x",n,t,e),l,u)]}case"Any":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.any(k("x",n,t,e),l,u)]}case"ArgMax":{const l=k("axis",n,t,e);return[s.argMax(k("x",n,t,e),l)]}case"ArgMin":{const l=k("axis",n,t,e);return[s.argMin(k("x",n,t,e),l)]}case"Prod":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.prod(k("x",n,t,e),l,u)]}case"Cumprod":{const l=k("axis",n,t,e),u=k("exclusive",n,t,e),h=k("reverse",n,t,e);return[s.cumprod(k("x",n,t,e),l,u,h)]}case"Cumsum":{const l=k("axis",n,t,e),u=k("exclusive",n,t,e),h=k("reverse",n,t,e);return[s.cumsum(k("x",n,t,e),l,u,h)]}case"Bincount":const a=k("x",n,t,e),r=k("weights",n,t,e),i=k("size",n,t,e);return[s.bincount(a,r,i)];case"DenseBincount":{const l=k("x",n,t,e),u=k("weights",n,t,e),h=k("size",n,t,e),d=k("binaryOutput",n,t,e);return[s.denseBincount(l,u,h,d)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hH=(n,t,e,s=On)=>{switch(n.op){case"ConcatV2":case"Concat":{const a=k("n",n,t,e),r=k("axis",n,t,e);let i=k("tensors",n,t,e);return i=i.slice(0,a),[s.concat(i,r)]}case"Gather":{const a=k("x",n,t,e),r=k("indices",n,t,e);return[s.gather(a,s.cast(r,"int32"),0)]}case"GatherV2":{const a=k("axis",n,t,e),r=k("batchDims",n,t,e),i=k("x",n,t,e),l=k("indices",n,t,e);return[s.gather(i,s.cast(l,"int32"),a,r)]}case"Reverse":{const a=k("dims",n,t,e),r=[];for(let l=0;l<a.length;l++)a[l]&&r.push(l);const i=k("x",n,t,e);return[s.reverse(i,r)]}case"ReverseV2":{const a=k("axis",n,t,e),r=k("x",n,t,e);return[s.reverse(r,a)]}case"Slice":{const a=k("begin",n,t,e),r=k("size",n,t,e);return[s.slice(k("x",n,t,e),a,r)]}case"StridedSlice":{const a=k("begin",n,t,e),r=k("end",n,t,e),i=k("strides",n,t,e),l=k("beginMask",n,t,e),u=k("endMask",n,t,e),h=k("ellipsisMask",n,t,e),d=k("newAxisMask",n,t,e),p=k("shrinkAxisMask",n,t,e),m=k("x",n,t,e);return[s.stridedSlice(m,a,r,i,l,u,h,d,p)]}case"Pack":return nt(()=>{const a=k("axis",n,t,e),r=k("tensors",n,t,e),i=r[0].shape,l=s.squeeze(r[0]).shape,u=r.map(h=>{const d=Zt(h.shape,i);if(!d&&!Zt(s.squeeze(h).shape,l))throw new Error("the input tensors shape does not match");return d?h:s.reshape(h,i)});return[s.stack(u,a)]});case"Unpack":{const a=k("axis",n,t,e),r=k("tensor",n,t,e);return s.unstack(r,a)}case"Tile":{const a=k("reps",n,t,e);return[s.tile(k("x",n,t,e),a)]}case"Split":case"SplitV":{const a=k("axis",n,t,e),r=k("numOrSizeSplits",n,t,e),i=k("x",n,t,e);return s.split(i,r,a)}case"ScatterNd":{const a=k("indices",n,t,e),r=k("values",n,t,e),i=k("shape",n,t,e);return[s.scatterND(a,r,i)]}case"GatherNd":{const a=k("x",n,t,e),r=k("indices",n,t,e);return[s.gatherND(a,r)]}case"SparseToDense":{const a=k("sparseIndices",n,t,e),r=k("outputShape",n,t,e),i=k("sparseValues",n,t,e),l=k("defaultValue",n,t,e);return[s.sparseToDense(a,i,r,i.dtype===l.dtype?l:s.cast(l,i.dtype))]}case"TensorScatterUpdate":{const a=k("indices",n,t,e),r=k("values",n,t,e),i=k("tensor",n,t,e);return[s.tensorScatterUpdate(i,a,r)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dH=(n,t,e,s=On)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:r,emptyRowIndicator:i,reverseIndexMap:l}=s.sparse.sparseFillEmptyRows(k("indices",n,t,e),k("values",n,t,e),k("denseShape",n,t,e),k("defaultValue",n,t,e));return[a,r,i,l]}case"SparseReshape":{const{outputIndices:a,outputShape:r}=s.sparse.sparseReshape(k("inputIndices",n,t,e),k("inputShape",n,t,e),k("newShape",n,t,e));return[a,r]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(k("data",n,t,e),k("indices",n,t,e),k("segmentIds",n,t,e))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(k("data",n,t,e),k("indices",n,t,e),k("segmentIds",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fH=(n,t,e,s=On)=>{switch(n.op){case"FFT":return[s.fft(k("x",n,t,e))];case"IFFT":return[s.ifft(k("x",n,t,e))];case"RFFT":return[s.rfft(k("x",n,t,e))];case"IRFFT":return[s.irfft(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pH=(n,t,e,s=On)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(k("input",n,t,e),k("pattern",n,t,e),k("rewrite",n,t,e),k("replaceGlobal",n,t,e))];case"StringNGrams":{const{nGrams:a,nGramsSplits:r}=s.string.stringNGrams(k("data",n,t,e),k("dataSplits",n,t,e),k("separator",n,t,e),k("nGramWidths",n,t,e),k("leftPad",n,t,e),k("rightPad",n,t,e),k("padWidth",n,t,e),k("preserveShortSequences",n,t,e));return[a,r]}case"StringSplit":{const{indices:a,values:r,shape:i}=s.string.stringSplit(k("input",n,t,e),k("delimiter",n,t,e),k("skipEmpty",n,t,e));return[a,r,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(k("input",n,t,e),k("numBuckets",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH=(n,t,e,s=On)=>{switch(n.op){case"Cast":return[s.cast(k("x",n,t,e),k("dtype",n,t,e))];case"ExpandDims":{const a=k("axis",n,t,e);return[s.expandDims(k("x",n,t,e),a)]}case"Squeeze":{const a=k("axis",n,t,e);return[s.squeeze(k("x",n,t,e),a)]}case"Reshape":return[s.reshape(k("x",n,t,e),k("shape",n,t,e))];case"EnsureShape":return[s.ensureShape(k("x",n,t,e),k("shape",n,t,e))];case"MirrorPad":return[s.mirrorPad(k("x",n,t,e),k("padding",n,t,e),k("mode",n,t,e))];case"PadV2":case"Pad":return[s.pad(k("x",n,t,e),k("padding",n,t,e),k("constantValue",n,t,e))];case"SpaceToBatchND":{const a=k("blockShape",n,t,e),r=k("paddings",n,t,e);return[s.spaceToBatchND(k("x",n,t,e),a,r)]}case"BatchToSpaceND":{const a=k("blockShape",n,t,e),r=k("crops",n,t,e);return[s.batchToSpaceND(k("x",n,t,e),a,r)]}case"DepthToSpace":{const a=k("blockSize",n,t,e),r=k("dataFormat",n,t,e).toUpperCase();return[s.depthToSpace(k("x",n,t,e),a,r)]}case"BroadcastTo":return[s.broadcastTo(k("x",n,t,e),k("shape",n,t,e))];case"BroadcastArgs":return[s.broadcastArgs(k("s0",n,t,e),k("s1",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$(n,t,e,s,a=nt){const r=((i,l,u)=>{switch(i.category){case"arithmetic":return a(()=>GG(i,l,u));case"basic_math":return a(()=>HG(i,l,u));case"control":return ZG(i,l,u);case"convolution":return a(()=>QG(i,l,u));case"creation":return a(()=>JG(i,l,u));case"dynamic":return tH(i,l,u);case"evaluation":return a(()=>eH(i,l,u));case"image":return a(()=>rH(i,l,u));case"graph":return a(()=>nH(i,l,u));case"logical":return a(()=>iH(i,l,u));case"matrices":return a(()=>oH(i,l,u));case"normalization":return a(()=>lH(i,l,u));case"ragged":return a(()=>uH(i,l,u));case"reduction":return a(()=>cH(i,l,u));case"slice_join":return a(()=>hH(i,l,u));case"sparse":return a(()=>dH(i,l,u));case"spectral":return a(()=>fH(i,l,u));case"string":return a(()=>pH(i,l,u));case"transformation":return a(()=>mH(i,l,u));case"hash_table":return aH(i,l,u,s);case"custom":const h=mA(i.op);if(h&&h.customExecutor)return h.customExecutor(new WG(i,l,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return Ti(r)?r.then(i=>[].concat(i)):[].concat(r)}class i${constructor(t={},e={},s={},a={},r){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=s,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const s=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(s))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n,t,e,s){const a=new Set,r=[];let i=null,l=null;const u=new Set,h=new Set(Object.keys(n).map(m=>ys(m)[0]));s=s||[];const d=new Set(s.map(m=>ys(m.name)[0])),p=[...t];for(;p.length>0;){const m=p.pop();if((So(m)||NH(m)||TH(m))&&i==null&&(i=m,l=i.children.map(y=>y.name).filter(y=>a.has(y))),a.add(m.name),e[m.name]==null&&!h.has(m.name)&&!d.has(m.name)){if(m.inputs.length===0){r.push(m.name);continue}m.inputs.forEach(y=>{u.has(y.name)||(u.add(y.name),p.push(y))})}}return{inputs:n,outputs:t,usedNodes:a,missingInputs:r,dynamicNode:i,syncInputs:l}}function gH(n,t){const{usedNodes:e,inputs:s}=t,a=Object.keys(s).map(w=>ys(w)[0]).map(w=>n.nodes[w]),r=n.initNodes||[],i=w=>e.has(typeof w=="string"?w:w.name);function l(w){return[...new Map(w.map(S=>[S.name,S])).values()]}const u=l([...a,...n.weights,...r]).filter(i),h=l([...u,...Object.values(n.nodes)]).filter(i),d=new Map(h.map(w=>[w.name,w])),p={};for(const w of h){p[w.name]=p[w.name]||0;for(const S of w.children)i(S)||(p[S.name]=Number.POSITIVE_INFINITY),p[S.name]=(p[S.name]||0)+1}const m=Object.entries(p).filter(([,w])=>w===0).map(([w])=>w),y=[...m];for(;m.length>0;){const w=m.pop(),S=d.get(w);for(const T of S.children.filter(i))--p[T.name]===0&&(y.push(T.name),m.push(T.name))}const b=y.map(w=>d.get(w)),v=yH(b,u);return bH(v,u),v}function yH(n,t){const e=new Map(n.map(i=>[i.name,i])),s=t.map(i=>i.name),a=new Set(s);for(;s.length>0;){const i=s.pop(),l=e.get(i);for(const u of l.children)!e.has(u.name)||a.has(u.name)||(a.add(u.name),s.push(u.name))}return n.filter(i=>a.has(i.name))}class Zp extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}}function bH(n,t){const e=new Map(n.map((l,u)=>[l.name,u])),s=new Set(t.map(l=>l.name)),a=l=>s.has(typeof l=="string"?l:l.name),r=new Set(n.map(l=>l.name)),i=l=>r.has(typeof l=="string"?l:l.name);for(const l of n){for(const u of l.children.filter(i)){if(!e.has(u.name))throw new Zp(`Child ${u.name} of node ${l.name} is unreachable.`);if(e.get(l.name)>e.get(u.name))throw new Zp(`Node ${l.name} is scheduled to run after its child ${u.name}.`)}if(!a(l))for(const u of l.inputs){if(!e.has(u.name))throw new Zp(`Input ${u.name} of node ${l.name} is unreachable.`);if(e.get(u.name)>e.get(l.name))throw new Zp(`Node ${l.name} is scheduled to run before its input ${u.name}.`)}}}function xH(n){const t=new Map(n.map((l,u)=>[l.name,u])),e=Number.MAX_SAFE_INTEGER,s=n.map((l,u)=>So(l)?e:u),a=l=>{const u=s[t.get(l.name)];return u??-1},r=n.map((l,u)=>l.children.map(a).reduce((h,d)=>Math.max(h,d),s[u])),i=new Map;for(let l=0;l<n.length;++l){const u=r[l];if(u===e)continue;const h=n[l],d=n[u];i.has(d.name)||i.set(d.name,[]),i.get(d.name).push(h)}return i}const vH=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),wH=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),SH=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function So(n){return vH.has(n.op)}function NH(n){return wH.has(n.op)}function TH(n){return SH.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dm{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(s=>t[s].map(a=>a.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(s=>{this._functionExecutorMap[s]=new Dm(t.functions[s],this)})}getCompilationKey(t,e){const s=t.map(r=>r.name).sort(),a=e.map(r=>r.name).sort();return s.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(t,e){const s=o$(t,e,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:i}=s;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){const h=e.map(p=>p.name),d=Object.keys(t);throw new Error(`Cannot compute the outputs [${h}] from the provided inputs [${d}]. Missing the following inputs: [${a}]`)}const l=gH(this.graph,s),u=xH(l);return{orderedNodes:l,nodeLiveUntilMap:u}}cloneAndKeepTensor(t){if(t==null)return null;const e=t.clone();return on(e),e}cloneTensorList(t){return t?t.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,s])=>[e,this.cloneTensorList(s)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);const s=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const a=s.map(m=>this.graph.nodes[ys(m)[0]]),r=e.map(m=>ys(m)[0]),i=new Set(r);let l=r.map(m=>this.graph.nodes[m]);l.length===0&&(l=this._outputs);const u=this.getCompilationKey(a,l);let h=this.compiledMap.get(u);h==null&&(h=this.compile(t,l),this.compiledMap.set(u,h));try{this.keepIntermediateTensors=at().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const d={},p={};return nt(()=>{const m=new i$(this.weightMap,d,p,this.functionExecutorMap,this.parseNodeNameCache),y=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(S=>{const[T,$]=ys(S,m),C=[];C[$]=t[S],y[T]=C,this.keepIntermediateTensors&&(this.clonedTensorsMap[T]=this.cloneTensorList(C))});const b=this.getFrozenTensorIds(y),{orderedNodes:v,nodeLiveUntilMap:w}=h;for(const S of v){if(y[S.name])continue;const T=r$(S,y,m,this._resourceManager);if(Ti(T))throw new Error(`The execution of the op '${S.op}' returned a promise. Please use model.executeAsync() instead.`);y[S.name]=T,this.keepIntermediateTensors&&(this.clonedTensorsMap[S.name]=this.cloneTensorList(T)),this.checkTensorForDisposalWithNodeLiveUntilInfo(S,y,m,b,i,w.get(S.name))}return this.parent==null&&m.dispose(b),e.map(S=>$n(S,y,m))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(s=>t[s]).map(s=>s.map(a=>a.id)));return new Set(e)}checkTensorForDisposal(t,e,s,a,r,i,l){if(!(So(e)||i.has(t))){for(const u of s[t])u!=null&&(l[u.id]=(l[u.id]||0)+e.children.length);for(const u of e.inputs){if(So(u))continue;const h=t$(u.name,s,a);if(h!=null)for(const d of h){if(!d||d.kept||r.has(d.id))continue;const p=l[d.id];p===1?(d.dispose(),delete l[d.id]):p!=null&&l[d.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,s,a,r,i){function l(u){return So(u)||r.has(u.name)}if(!(So(t)||i==null))for(const u of i){if(l(u))continue;const h=t$(u.name,e,s);for(const d of h)!d||d.kept||a.has(d.id)||d.dispose()}}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(const e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,e,s=!1,a={},r={}){this.disposeIntermediateTensors(),s||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=at().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const i=new i$(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const l=await this.executeWithControlFlow(t,i,e,s),u=e.map(m=>$n(m,l,i)),h=u.map(m=>m.id),d=Object.keys(t).map(m=>t[m].id),p=new Set([...h,...d,...this.weightIds]);return Object.values(l).forEach(m=>{m.forEach(y=>{y&&!y.isDisposed&&!p.has(y.id)&&y.dispose()})}),this.parent==null&&i.dispose(p),u}async executeFunctionAsync(t,e,s){const a=t.reduce((r,i,l)=>(r[this.inputs[l].name]=i,r),{});return this._executeAsync(a,this.outputNodes,!0,e,s)}async executeWithControlFlow(t,e,s,a){const r=Object.keys(t),i=r.map(C=>this.graph.nodes[ys(C)[0]]),l=s.map(C=>ys(C)[0]),u=new Set(l);let h=l.map(C=>this.graph.nodes[C]);h.length===0&&(h=this._outputs);const{usedNodes:d,missingInputs:p,dynamicNode:m,syncInputs:y}=o$(t,h,this.weightMap,this._initNodes),b=[...i,...this.graph.weights,...this._initNodes||[]].map(C=>({node:C,contexts:e.currentContext})),v=Object.assign({},this.weightMap);Object.keys(t).forEach(C=>{const[I,R]=ys(C),L=[];L[R]=t[C],v[I]=L});const w={},S=this.getFrozenTensorIds(v),T={};for(;b.length>0;){const C=this.processStack(i,b,e,v,T,S,u,w,d);await Promise.all(C)}m==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const $=h.filter(C=>!So(C)&&!$n(C.name,v,e)).map(C=>C.name);if($.length>0){let C="";throw m!=null&&(C=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${y}]`),new Error(`Cannot compute the outputs [${$}] from the provided inputs [${r}]. Consider providing the following inputs: [${p}]. ${C}`)}return v}processStack(t,e,s,a,r,i,l,u,h){const d=[];for(;e.length>0;){const p=e.pop();s.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&k("isConstant",p.node,a,s)&&([m]=Nr(p.node.name,s)),a[p.node.name]==null){const y=r$(p.node,a,s,this._resourceManager);m||([m]=Nr(p.node.name,s));const b=s.currentContext;Ti(y)?d.push(y.then(v=>(a[m]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(v)),s.currentContext=b,this.checkTensorForDisposal(m,p.node,a,s,i,l,u),this.processChildNodes(p.node,e,s,a,r,h),v))):(a[m]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(y)),this.checkTensorForDisposal(m,p.node,a,s,i,l,u),this.processChildNodes(p.node,e,s,a,r,h))}else this.processChildNodes(p.node,e,s,a,r,h)}return d}processChildNodes(t,e,s,a,r,i){t.children.forEach(l=>{const[u]=Nr(l.name,s);r[u]||!i.has(l.name)||(l.op==="Merge"?l.inputNames.some(h=>!!$n(h,a,s))&&(r[u]=!0,e.push({contexts:s.currentContext,node:l})):l.inputNames.every(h=>!!$n(h,a,s))&&(r[u]=!0,e.push({contexts:s.currentContext,node:l})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const s=t[e],[a]=ys(e),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const i=r.attrParams.shape.value,l=i.length===s.shape.length&&s.shape.every((u,h)=>i[h]===-1||i[h]===u);D(l,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&D(s.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(t){var e,s;const a={};for(const r in t){const i=(s=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||s===void 0?void 0:s[r];i!=null?a[i.name]=t[r]:a[r]=t[r]}return a}checkInputs(t){const e=Object.keys(t).filter(s=>{const[a]=ys(s);return this.graph.nodes[a]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var s,a;const r=(a=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||a===void 0?void 0:a[e];return r!=null?r.name:e},{})}checkOutputs(t){t.forEach(e=>{const[s]=ys(e);if(!this.graph.nodes[s])throw new Error(`The output '${e}' is not found in the graph`)})}}class CH{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H="?tfjs-format=file",kH="model.json";class IH{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},s=$w){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=s,e==null&&(this.loadOptions={}),this.resourceManager=new CH}findIOHandler(){const t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return Ti(t)?t.then(e=>e.getWeightStream==null?this.loadSync(e):this.loadStreaming(e)):this.loadSync(t)}loadSync(t){const e=this.io.decodeWeights(t.weightData,t.weightSpecs);return this.loadWithWeightMap(t,e)}async loadStreaming(t){if(t.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const e=await uI(t.getWeightStream(),t.weightSpecs);return this.loadWithWeightMap(t,e)}loadWithWeightMap(t,e){this.artifacts=t;const s=this.artifacts.modelTopology;let a=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const r=this.artifacts.userDefinedMetadata;r.signature!=null&&(a=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}if(this.signature=a,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new Dm(e$.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(e),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){const r=e$.Instance.transformGraph(t.modelInitializer);this.initializer=new Dm(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}async save(t,e){if(typeof t=="string"){const s=this.io.getSaveHandlers(t);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${t}'`);t=s[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}addStructuredOutputNames(t){if(this.structuredOutputKeys){const e=t instanceof he?[t]:t,s={};return e.forEach((a,r)=>s[this.structuredOutputKeys[r]]=a),s}return t}predict(t,e){const s=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(t,e){const s=await this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(t){var e;if(!(t instanceof he)&&!Array.isArray(t)){const r=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(r!=null)for(const i in r){const l=r[i];l.resourceId!=null&&(t[i]=this.resourceIdToCapturedInput[l.resourceId])}return t}t=Array.isArray(t)?t:[t];const s=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${t.length} input tensors provided.`);let a=0;return this.inputNodes.reduce((r,i)=>{var l,u,h;const d=(h=(u=(l=this.signature)===null||l===void 0?void 0:l.inputs)===null||u===void 0?void 0:u[i])===null||h===void 0?void 0:h.resourceId;return d!=null?r[i]=this.resourceIdToCapturedInput[d]:r[i]=t[a++],r},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){const e=this.initializerSignature.outputs,s=Object.keys(e);for(let a=0;a<s.length;a++){const r=s[a],i=e[r];this.resourceIdToCapturedInput[i.resourceId]=t[a]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=this.executor.execute(t,e);return s.length>1?s:s[0]}async executeAsync(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=await this.executor.executeAsync(t,e);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,s)=>(e[s]=[t[s]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&qt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function bA(n,t={},e=$w){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof n=="string"&&(n=EH(n));const s=new IH(n,t,e);return await s.load(),s}function EH(n){return n.endsWith("/")||(n=n+"/"),`${n}${kH}${$H}`}/**
    * @license
    * Copyright 2021 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var xA=function(n,t){return(xA=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,s){e.__proto__=s}||function(e,s){for(var a in s)s.hasOwnProperty(a)&&(e[a]=s[a])})(n,t)};function vA(n,t){function e(){this.constructor=n}xA(n,t),n.prototype=t===null?Object.create(t):(e.prototype=t.prototype,new e)}var R1=function(){return(R1=Object.assign||function(n){for(var t,e=1,s=arguments.length;e<s;e++)for(var a in t=arguments[e])Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a]);return n}).apply(this,arguments)};function bi(n,t,e,s){return new(e||(e=Promise))(function(a,r){function i(h){try{u(s.next(h))}catch(d){r(d)}}function l(h){try{u(s.throw(h))}catch(d){r(d)}}function u(h){h.done?a(h.value):new e(function(d){d(h.value)}).then(i,l)}u((s=s.apply(n,[])).next())})}function xi(n,t){var e,s,a,r,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return r={next:l(0),throw:l(1),return:l(2)},typeof Symbol=="function"&&(r[Symbol.iterator]=function(){return this}),r;function l(u){return function(h){return function(d){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,s&&(a=2&d[0]?s.return:d[0]?s.throw||((a=s.return)&&a.call(s),0):s.next)&&!(a=a.call(s,d[1])).done)return a;switch(s=0,a&&(d=[2&d[0],a.value]),d[0]){case 0:case 1:a=d;break;case 4:return i.label++,{value:d[1],done:!1};case 5:i.label++,s=d[1],d=[0];continue;case 7:d=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(d[0]===6||d[0]===2)){i=0;continue}if(d[0]===3&&(!a||d[1]>a[0]&&d[1]<a[3])){i.label=d[1];break}if(d[0]===6&&i.label<a[1]){i.label=a[1],a=d;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(d);break}a[2]&&i.ops.pop(),i.trys.pop();continue}d=t.call(n,i)}catch(p){d=[6,p],s=0}finally{e=a=0}if(5&d[0])throw d[1];return{value:d[0]?d[1]:void 0,done:!0}}([u,h])}}}var wA=function(){function n(t,e){this.model=t,this.outputStride=e;var s=this.model.inputs[0].shape;D(s[1]===-1&&s[2]===-1,function(){return"Input shape ["+s[1]+", "+s[2]+"] must both be equal to or -1"})}return n.prototype.predict=function(t){var e=this;return nt(function(){var s=e.preprocessInput(wt(t,"float32")),a=rn(s,0),r=e.model.predict(a).map(function(l){return Vr(l,[0])}),i=e.nameOutputResults(r);return{heatmapScores:ua(i.heatmap),offsets:i.offsets,displacementFwd:i.displacementFwd,displacementBwd:i.displacementBwd}})},n.prototype.dispose=function(){this.model.dispose()},n}(),AH=function(n){function t(){return n!==null&&n.apply(this,arguments)||this}return vA(t,n),t.prototype.preprocessInput=function(e){return nt(function(){return kt(At(e,127.5),1)})},t.prototype.nameOutputResults=function(e){return{offsets:e[0],heatmap:e[1],displacementFwd:e[2],displacementBwd:e[3]}},t}(wA);function zx(n){return Math.floor(n/2)}var RH=function(){function n(t,e){this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=e}return n.prototype.enqueue=function(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(t){for(;t>0&&this.less(zx(t),t);)this.exchange(t,zx(t)),t=zx(t)},n.prototype.sink=function(t){for(;2*t<=this.numberOfElements;){var e=2*t;if(e<this.numberOfElements&&this.less(e,e+1)&&e++,!this.less(t,e))break;this.exchange(t,e),t=e}},n.prototype.getValueAt=function(t){return this.getElementValue(this.priorityQueue[t])},n.prototype.less=function(t,e){return this.getValueAt(t)<this.getValueAt(e)},n.prototype.exchange=function(t,e){var s=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[e],this.priorityQueue[e]=s},n}();function DH(n,t,e,s,a,r){for(var i=r.shape,l=i[0],u=i[1],h=!0,d=Math.max(e-a,0),p=Math.min(e+a+1,l),m=d;m<p;++m){for(var y=Math.max(s-a,0),b=Math.min(s+a+1,u),v=y;v<b;++v)if(r.get(m,v,n)>t){h=!1;break}if(!h)break}return h}function OH(n,t,e){for(var s=e.shape,a=s[0],r=s[1],i=s[2],l=new RH(a*r*i,function(m){return m.score}),u=0;u<a;++u)for(var h=0;h<r;++h)for(var d=0;d<i;++d){var p=e.get(u,h,d);p<n||DH(d,p,u,h,t,e)&&l.enqueue({score:p,part:{heatmapY:u,heatmapX:h,id:d}})}return l}var Tf=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Om=Tf.length,_m=Tf.reduce(function(n,t,e){return n[t]=e,n},{}),_H=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],FH=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]],LH=_H.map(function(n){var t=n[0],e=n[1];return[_m[t],_m[e]]});function SA(n,t,e,s){return{y:s.get(n,t,e),x:s.get(n,t,e+Om)}}function NA(n,t,e){var s=SA(n.heatmapY,n.heatmapX,n.id,e),a=s.y,r=s.x;return{x:n.heatmapX*t+r,y:n.heatmapY*t+a}}function l$(n,t,e){return n<t?t:n>e?e:n}function zH(n,t,e,s){var a=e-n,r=s-t;return a*a+r*r}function u$(n,t){return{x:n.x+t.x,y:n.y+t.y}}var TA=FH.map(function(n){var t=n[0],e=n[1];return[_m[t],_m[e]]}),Mx=TA.map(function(n){return n[1]}),c$=TA.map(function(n){return n[0]});function MH(n,t,e){var s=e.shape[2]/2;return{y:e.get(t.y,t.x,n),x:e.get(t.y,t.x,s+n)}}function Bx(n,t,e,s){return{y:l$(Math.round(n.y/t),0,e-1),x:l$(Math.round(n.x/t),0,s-1)}}function h$(n,t,e,s,a,r,i,l){l===void 0&&(l=2);for(var u=s.shape,h=u[0],d=u[1],p=MH(n,Bx(t.position,r,h,d),i),m=u$(t.position,p),y=0;y<l;y++){var b=Bx(m,r,h,d),v=SA(b.y,b.x,e,a);m=u$({x:b.x*r,y:b.y*r},{x:v.x,y:v.y})}var w=Bx(m,r,h,d),S=s.get(w.y,w.x,e);return{position:m,part:Tf[e],score:S}}function BH(n,t,e,s,a,r){var i=t.shape[2],l=Mx.length,u=new Array(i),h=n.part,d=n.score,p=NA(h,s,e);u[h.id]={score:d,part:Tf[h.id],position:p};for(var m=l-1;m>=0;--m){var y=Mx[m],b=c$[m];u[y]&&!u[b]&&(u[b]=h$(m,u[y],b,t,e,s,r))}for(m=0;m<l;++m)y=c$[m],b=Mx[m],u[y]&&!u[b]&&(u[b]=h$(m,u[y],b,t,e,s,a));return u}function CA(n,t,e,s){var a=e.x,r=e.y;return n.some(function(i){var l=i.keypoints[s].position;return zH(r,a,l.y,l.x)<=t})}function VH(n,t,e){return e.reduce(function(s,a,r){var i=a.position,l=a.score;return CA(n,t,i,r)||(s+=l),s},0)/e.length}var PH=1;function UH(n,t,e,s,a,r,i,l){i===void 0&&(i=.5),l===void 0&&(l=20);for(var u=[],h=OH(i,PH,n),d=l*l;u.length<r&&!h.empty();){var p=h.dequeue();if(!CA(u,d,NA(p.part,a,t),p.part.id)){var m=BH(p,n,t,a,e,s),y=VH(u,d,m);u.push({keypoints:m,score:y})}}return u}function WH(n,t){return nt(function(){var e=At(n,_t(t,"int32"));return kt(n,H(e,_t(t,"int32")))})}function GH(n){var t=n.shape,e=t[0],s=t[1],a=t[2];return nt(function(){var r=j(n,[e*s,a]),i=$i(r,0),l=rn(At(i,_t(s,"int32")),1),u=rn(WH(i,s),1);return Pe([l,u],1)})}function HH(n,t){for(var e=t.shape[0],s=new Float32Array(e),a=0;a<e;a++){var r=t.get(a,0),i=t.get(a,1);s[a]=n.get(r,i,a)}return s}function jH(n,t,e,s){return{y:s.get(n,t,e),x:s.get(n,t,e+Om)}}function qH(n,t){for(var e=[],s=0;s<Om;s++){var a=jH(n.get(s,0).valueOf(),n.get(s,1).valueOf(),s,t),r=a.x,i=a.y;e.push(i),e.push(r)}return Ao(e,[Om,2])}function KH(n,t,e){return nt(function(){var s=qH(n,e);return yt(wt(H(n.toTensor(),_t(t,"int32")),"float32"),s)})}function XH(n,t,e){return bi(this,void 0,void 0,function(){var s,a,r,i,l,u,h,d,p,m;return xi(this,function(y){switch(y.label){case 0:return s=0,a=GH(n),[4,Promise.all([n.buffer(),t.buffer(),a.buffer()])];case 1:return r=y.sent(),i=r[0],l=r[1],u=r[2],[4,(h=KH(u,e,l)).buffer()];case 2:return d=y.sent(),p=Array.from(HH(i,u)),m=p.map(function(b,v){return s+=b,{position:{y:d.get(v,0),x:d.get(v,1)},part:Tf[v],score:b}}),a.dispose(),h.dispose(),[2,{keypoints:m,score:s/m.length}]}})})}var d$="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",f$="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function YH(n,t){var e="model-stride"+n+".json";return t===4?f$+"float/"+e:f$+"quant"+t+"/"+e}function ZH(n,t,e){var s={1:"100",.75:"075",.5:"050"},a="model-stride"+n+".json";return e===4?d$+"float/"+s[t]+"/"+a:d$+"quant"+e+"/"+s[t]+"/"+a}var QH=[-123.15,-115.9,-103.06],JH=function(n){function t(){return n!==null&&n.apply(this,arguments)||this}return vA(t,n),t.prototype.preprocessInput=function(e){return yt(e,QH)},t.prototype.nameOutputResults=function(e){var s=e[0],a=e[1];return{offsets:e[2],heatmap:e[3],displacementFwd:s,displacementBwd:a}},t}(wA);function t6(n,t,e){return n<e||t<e}function e6(n,t){return LH.reduce(function(e,s){var a=s[0],r=s[1];return t6(n[a].score,n[r].score,t)||e.push([n[a],n[r]]),e},[])}function n6(n){return bi(this,void 0,void 0,function(){return xi(this,function(t){return[2,Promise.all(n.map(function(e){return e.buffer()}))]})})}function s6(n,t,e,s,a){return s===void 0&&(s=0),a===void 0&&(a=0),{score:n.score,keypoints:n.keypoints.map(function(r){var i=r.score,l=r.part,u=r.position;return{score:i,part:l,position:{x:u.x*e+a,y:u.y*t+s}}})}}function a6(n,t,e,s,a){return s===void 0&&(s=0),a===void 0&&(a=0),e===1&&t===1&&s===0&&a===0?n:n.map(function(r){return s6(r,t,e,s,a)})}function r6(n,t){return{score:n.score,keypoints:n.keypoints.map(function(e){var s=e.score,a=e.part,r=e.position;return{score:s,part:a,position:{x:t-1-r.x,y:r.y}}})}}function i6(n,t){return t<=0?n:n.map(function(e){return r6(e,t)})}function Qp(n,t){return D1(n,t)?n:Math.floor(n/t)*t+1}function $A(n){D(typeof n=="number"||typeof n=="object",function(){return"Invalid inputResolution "+n+". Should be a number or an object with width and height"}),typeof n=="object"&&(D(typeof n.width=="number",function(){return"inputResolution.width has a value of "+n.width+" which is invalid; it must be a number"}),D(typeof n.height=="number",function(){return"inputResolution.height has a value of "+n.height+" which is invalid; it must be a number"}))}function kA(n,t){return $A(n),typeof n=="object"?[Qp(n.height,t),Qp(n.width,t)]:[Qp(n,t),Qp(n,t)]}var o6=[8,16,32];function l6(n){D(typeof n=="number",function(){return"outputStride is not a number"}),D(o6.indexOf(n)>=0,function(){return"outputStride of "+n+" is invalid. It must be either 8, 16, or 32"})}function D1(n,t){return(n-1)%t==0}function u6(n,t){D(typeof n[0]=="number"&&typeof n[1]=="number",function(){return"both resolution values must be a number but had values "+n}),D(D1(n[0],t),function(){return"height of "+n[0]+" is invalid for output stride "+t+"."}),D(D1(n[1],t),function(){return"width of "+n[1]+" is invalid for output stride "+t+"."})}function O1(n){return n instanceof he?[n.shape[0],n.shape[1]]:[n.height,n.width]}function c6(n){return n instanceof he?n:DE(n)}function p$(n,t){var e=t[0],s=t[1],a=O1(n),r=a[0],i=a[1],l=s/e,u=[0,0,0,0],h=u[0],d=u[1],p=u[2],m=u[3];return i/r<l?(h=0,d=0,p=Math.round(.5*(l*r-i)),m=Math.round(.5*(l*r-i))):(h=Math.round(.5*(1/l*i-r)),d=Math.round(.5*(1/l*i-r)),p=0,m=0),{resized:nt(function(){var y=c6(n);return y=Zv(y,[[h,d],[p,m],[0,0]]),ra.resizeBilinear(y,[e,s])}),padding:{top:h,left:p,right:m,bottom:d}}}function m$(n,t,e,s,a){var r=t[0],i=t[1],l=e[0],u=e[1],h=a6(n,(r+s.top+s.bottom)/l,(i+s.left+s.right)/u,-s.top,-s.left);return a?i6(h,i):h}var IA={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:257},g$=["MobileNetV1","ResNet50"],y$={MobileNetV1:[8,16,32],ResNet50:[32,16]},b$={MobileNetV1:[.5,.75,1],ResNet50:[1]},x$=[1,2,4];function h6(n){if((n=n||IA).architecture==null&&(n.architecture="MobileNetV1"),g$.indexOf(n.architecture)<0)throw new Error("Invalid architecture "+n.architecture+". Should be one of "+g$);if(n.inputResolution==null&&(n.inputResolution=257),$A(n.inputResolution),n.outputStride==null&&(n.outputStride=16),y$[n.architecture].indexOf(n.outputStride)<0)throw new Error("Invalid outputStride "+n.outputStride+". Should be one of "+y$[n.architecture]+" for architecture "+n.architecture+".");if(n.multiplier==null&&(n.multiplier=1),b$[n.architecture].indexOf(n.multiplier)<0)throw new Error("Invalid multiplier "+n.multiplier+". Should be one of "+b$[n.architecture]+" for architecture "+n.architecture+".");if(n.quantBytes==null&&(n.quantBytes=4),x$.indexOf(n.quantBytes)<0)throw new Error("Invalid quantBytes "+n.quantBytes+". Should be one of "+x$+" for architecture "+n.architecture+".");if(n.architecture==="MobileNetV1"&&n.outputStride===32&&n.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return n}var v$={flipHorizontal:!1},w$={flipHorizontal:!1,maxDetections:5,scoreThreshold:.5,nmsRadius:20};function d6(n){var t=n.maxDetections,e=n.scoreThreshold,s=n.nmsRadius;if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(e<0||e>1)throw new Error("Invalid scoreThreshold "+e+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".")}var EA=function(){function n(t,e){l6(t.outputStride),u6(e,t.outputStride),this.baseModel=t,this.inputResolution=e}return n.prototype.estimateMultiplePoses=function(t,e){return e===void 0&&(e=w$),bi(this,void 0,void 0,function(){var s,a,r,i,l,u,h,d,p,m,y,b,v,w,S,T,$,C,I,R,L;return xi(this,function(M){switch(M.label){case 0:return s=R1({},w$,e),d6(e),a=this.baseModel.outputStride,r=this.inputResolution,i=O1(t),l=i[0],u=i[1],h=p$(t,r),d=h.resized,p=h.padding,m=this.baseModel.predict(d),y=m.heatmapScores,b=m.offsets,v=m.displacementFwd,w=m.displacementBwd,[4,n6([y,b,v,w])];case 1:return S=M.sent(),T=S[0],$=S[1],C=S[2],I=S[3],[4,UH(T,$,C,I,a,s.maxDetections,s.scoreThreshold,s.nmsRadius)];case 2:return R=M.sent(),L=m$(R,[l,u],r,p,s.flipHorizontal),y.dispose(),b.dispose(),v.dispose(),w.dispose(),d.dispose(),[2,L]}})})},n.prototype.estimateSinglePose=function(t,e){return e===void 0&&(e=v$),bi(this,void 0,void 0,function(){var s,a,r,i,l,u,h,d,p,m,y,b,v,w,S,T;return xi(this,function($){switch($.label){case 0:return s=R1({},v$,e),a=this.baseModel.outputStride,r=this.inputResolution,i=O1(t),l=i[0],u=i[1],h=p$(t,r),d=h.resized,p=h.padding,m=this.baseModel.predict(d),y=m.heatmapScores,b=m.offsets,v=m.displacementFwd,w=m.displacementBwd,[4,XH(y,b,a)];case 1:return S=$.sent(),T=m$([S],[l,u],r,p,s.flipHorizontal),y.dispose(),b.dispose(),v.dispose(),w.dispose(),d.dispose(),[2,T[0]]}})})},n.prototype.estimatePoses=function(t,e){return bi(this,void 0,void 0,function(){return xi(this,function(s){switch(s.label){case 0:return e.decodingMethod!=="single-person"?[3,2]:[4,this.estimateSinglePose(t,e)];case 1:return[2,[s.sent()]];case 2:return[2,this.estimateMultiplePoses(t,e)]}})})},n.prototype.dispose=function(){this.baseModel.dispose()},n}();function f6(n){return bi(this,void 0,void 0,function(){var t,e,s,a,r,i,l;return xi(this,function(u){switch(u.label){case 0:if(t=n.outputStride,e=n.quantBytes,s=n.multiplier,pA==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return a=ZH(t,s,e),[4,bA(n.modelUrl||a)];case 1:return r=u.sent(),i=new AH(r,t),l=kA(n.inputResolution,i.outputStride),[2,new EA(i,l)]}})})}function p6(n){return bi(this,void 0,void 0,function(){var t,e,s,a,r,i;return xi(this,function(l){switch(l.label){case 0:if(t=n.outputStride,e=n.quantBytes,pA==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return s=YH(t,e),[4,bA(n.modelUrl||s)];case 1:return a=l.sent(),r=new JH(a,t),i=kA(n.inputResolution,r.outputStride),[2,new EA(r,i)]}})})}function AA(n){return n===void 0&&(n=IA),bi(this,void 0,void 0,function(){return xi(this,function(t){return(n=h6(n)).architecture==="ResNet50"?[2,p6(n)]:n.architecture==="MobileNetV1"?[2,f6(n)]:[2,null]})})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const No={},Jp={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function m6(n,t){No[n]=t}function Ea(n,t){if(!(n in No)||t!=null){const s=y6(n,t);if(s!==null)No[n]=s;else return console.log("Could not get context for WebGL version",n),null}const e=No[n];return e==null||e.isContextLost()?(delete No[n],Ea(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),No[n])}function g6(n){if(!at().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function y6(n,t){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t??g6(n);return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete No[n]},!1),at().getBool("SOFTWARE_WEBGL_ENABLED")&&(Jp.failIfMajorPerformanceCaveat=!1),n===1?e.getContext("webgl",Jp)||e.getContext("experimental-webgl",Jp):e.getContext("webgl2",Jp)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Wh;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Wh||(Wh={}));var Fs;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Fs||(Fs={}));var kn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(kn||(kn={}));function Cf(n,t){return[t,n]}function b6(n,t){return n*t}function tm(n){const t=ht(n),e=Math.ceil(t/4);return Nm(e)}function fc(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function x6(n,t){const[e,s]=fc(n,t);return e*s*4}function Jw(n,t){const e=n;let s,a,r,i,l,u,h,d,p,m;return at().getNumber("WEBGL_VERSION")===2?(s=e.R32F,a=e.R16F,r=e.RGBA16F,i=e.RGBA32F,l=e.RED,h=4,d=1,p=e.HALF_FLOAT,m=e.FLOAT,u=e.RGBA8):(s=n.RGBA,a=n.RGBA,r=n.RGBA,i=e.RGBA,l=n.RGBA,h=4,d=4,p=t!=null?t.HALF_FLOAT_OES:null,m=n.FLOAT,u=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:h,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:m}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t(n,t){const e=t();return at().getBool("DEBUG")&&v6(n),e}function v6(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+T6(n,t))}const w6=596e-10,S6=65504;function N6(n){return!!(at().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||w6<Math.abs(n)&&Math.abs(n)<S6)}function T6(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function em(n,t){return Wr(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function C6(n,t){const e=Wr(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if($t(n,()=>n.shaderSource(e,t)),$t(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function $6(n,t){const e=Wr(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if($t(n,()=>n.shaderSource(e,t)),$t(n,()=>n.compileShader(e)),at().get("ENGINE_COMPILE_ONLY"))return e;if(n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw RA(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const k6=/ERROR: [0-9]+:([0-9]+):/g;function RA(n,t){const e=k6.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],a=n.split(`
`),r=a.length.toString().length+2,i=a.map((p,m)=>ko((m+1).toString(),r)+p);let l=0;for(let p=0;p<i.length;p++)l=Math.max(i[p].length,l);const u=i.slice(0,s-1),h=i.slice(s-1,s),d=i.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${ko(h[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join(`
`))}function I6(n){return Wr(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function E6(n,t){if($t(n,()=>n.linkProgram(t)),!at().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Vx(n,t){if($t(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function A6(n,t){const e=Wr(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return $t(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),$t(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function R6(n,t){const e=Wr(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return $t(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),$t(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function D6(n){return Wr(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function O6(n,t){const e=at().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,a=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+a+".")}}function _6(n){return Wr(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function S$(n,t,e,s,a,r,i){const l=n.getAttribLocation(t,e);return l===-1?!1:($t(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),$t(n,()=>n.vertexAttribPointer(l,a,n.FLOAT,!1,r,i)),$t(n,()=>n.enableVertexAttribArray(l)),!0)}function F6(n,t,e){V6(n,e),$t(n,()=>n.activeTexture(n.TEXTURE0+e)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function L6(n,t,e){return Wr(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function z6(n,t,e){return n.getUniformLocation(t,e)}function M6(n,t,e,s){$t(n,()=>F6(n,t,s)),$t(n,()=>n.uniform1i(e,s))}function Px(n,t,e){$t(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),$t(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function N$(n,t){$t(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),$t(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function nm(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+B6(n,t))}function B6(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Wr(n,t,e){const s=$t(n,()=>t());if(s==null)throw new Error(e);return s}function V6(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const a=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${a}.`)}}function ru(n,t=2){return ht(n.slice(0,n.length-t))}function iu(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function sm(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[ru(n),...iu(n)]),t}function P6(n,t=!1){let e=at().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=at().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&at().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e=e*2,s=s*2,n=n.map((l,u)=>u>=n.length-2?eg(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=_r(n).newShape);let a=ht(n),r=null;n.length<=1&&a<=e?r=[1,a]:n.length===2&&n[0]<=e&&n[1]<=e?r=n:n.length===3&&n[0]*n[1]<=e&&n[2]<=e?r=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=e&&n[1]*n[2]<=e?r=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e?r=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(r=[n[0],n[1]*n[2]*n[3]]);const i=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(r==null||i)if(t){const l=ru(n);let u=2,h=2;n.length&&([u,h]=iu(n)),a=l*(u/2)*(h/2),r=Nm(a).map(d=>d*2)}else r=Nm(a);return r}function am(n){return n%2===0}function Fm(n,t){if(n=n.slice(-2),t=t.slice(-2),Zt(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||am(e)&&am(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&am(n[0])&&am(t[0])}let Ux,Wx;function U6(n){if(Ux==null){const t=Ea(n);Ux=t.getParameter(t.MAX_TEXTURE_SIZE)}return Ux}function W6(n){if(Wx==null){const t=Ea(n);Wx=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Wx)}function G6(n){if(n===0)return 0;let t;const e=Ea(n);return ia(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:ia(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function ia(n,t){return n.getExtension(t)!=null}function T$(n){try{if(Ea(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function H6(n){if(n===0)return!1;const t=Ea(n);if(n===1){if(!ia(t,"OES_texture_float"))return!1}else if(!ia(t,"EXT_color_buffer_float"))return!1;return _1(t)}function j6(n){if(n===0)return!1;const t=Ea(n);if(n===1){if(!ia(t,"OES_texture_float")||!ia(t,"WEBGL_color_buffer_float"))return!1}else{if(ia(t,"EXT_color_buffer_float"))return _1(t);const s="EXT_color_buffer_half_float";if(ia(t,s)){const a=t.getExtension(s);return q6(t,a)}return!1}return _1(t)}function _1(n){const t=Jw(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(r),i}function q6(n,t){const e=Jw(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const l=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),l}function K6(n){return n!==2?!1:Ea(n).fenceSync!=null}function $f(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&D(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ot=at();Ot.registerFlag("HAS_WEBGL",()=>Ot.getNumber("WEBGL_VERSION")>0);Ot.registerFlag("WEBGL_VERSION",()=>T$(2)?2:T$(1)?1:0);Ot.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ot.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ot.get("WEBGL_VERSION")===2);Ot.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ot.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ot.registerFlag("WEBGL_PACK",()=>Ot.getBool("HAS_WEBGL"));Ot.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_CLIP",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_REDUCE",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_CONV_IM2COL",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>U6(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>W6(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ot.getNumber("WEBGL_VERSION");return n===0?0:G6(n)});Ot.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ot.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!rv());Ot.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>H6(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ot.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ot.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ot.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>j6(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_FENCE_API_ENABLED",()=>K6(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ot.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ot.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Ot.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>rv()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Ot.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ot.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ot.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ot.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ot.registerFlag("WEBGL_EXP_CONV",()=>!1);Ot.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ot.getBool("IS_TEST"));Ot.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ot.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ot.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ot.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zn(){let n,t,e,s,a,r,i,l,u,h;return at().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",a="texture",r="outputColor",i="out vec4 outputColor;",l=at().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",h=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",a="texture2D",r="gl_FragColor",i="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,h=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:a,output:r,defineOutput:i,defineSpecialNaN:l,defineSpecialInf:u,defineRound:h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function el(n,t,e="index"){const s=Lt(t);return s.map((a,r)=>{const i=`int ${n[r]} = ${e} / ${a}`,l=r===s.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * ${a}`:`index -= ${n[r]} * ${a}`;return`${i}; ${l};`}).join("")}function Qy(n,t,e="index"){const s=Lt(t);return s.map((a,r)=>{const i=`int ${n[r]} = ${e} / outShapeStrides[${r}]`,l=r===s.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * outShapeStrides[${r}]`:`index -= ${n[r]} * outShapeStrides[${r}]`;return`${i}; ${l};`}).join("")}function X6(n,t){const e=n.length,s=n.map(r=>`${t}[${r}]`),a=new Array(e-1);a[e-2]=s[e-1];for(let r=e-3;r>=0;--r)a[r]=`(${a[r+1]} * ${s[r+1]})`;return a}function Y6(n,t,e="index"){const s=n.map((r,i)=>i),a=X6(s,t);return a.map((r,i)=>{const l=`int ${n[i]} = ${e} / ${a[i]}`,u=i===a.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * ${a[i]}`:`index -= ${n[i]} * ${a[i]}`;return`${l}; ${u};`}).join("")}function tS(n){const t=Lt(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function eS(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const DA=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:OA}=fA;function Z6(n,t,e){const s=[];if(n.forEach(y=>{const b=ht(y.shapeInfo.logicalShape);if(y.shapeInfo.isUniform?s.push(`uniform float ${y.name}${b>1?`[${b}]`:""};`):(s.push(`uniform sampler2D ${y.name};`),s.push(`uniform int offset${y.name};`)),e.enableShapeUniforms){const{uniformShape:v}=nS(e.packedInputs,y.shapeInfo.logicalShape,y.shapeInfo.texShape);switch(v.length){case 1:s.push(`uniform int ${y.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${y.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${y.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${y.name}Shape;`);break}s.push(`uniform ivec2 ${y.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(y=>{s.push(`uniform ${y.type} ${y.name}${y.arrayIndex?`[${y.arrayIndex}]`:""};`)});const a=s.join(`
`),r=n.map(y=>Q6(y,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,l=Zn(),u=ej(l);let h,d,p=aj(l);return t.isPacked?(h=J6(t.logicalShape,i,e.enableShapeUniforms),d=sj(l)):(h=tj(t.logicalShape,i,e.enableShapeUniforms),d=nj(l)),e.packedInputs&&(p+=lj),[p,u,d,a,h,r,e.userCode].join(`
`)}function pc(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return vj(n,t);case 1:return Sj(n,t);case 2:return Tj(n,t);case 3:return $j(n,t);case 4:return Ij(n,t);case 5:return Ej(n);case 6:return Aj(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function _A(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return xj(n);case 1:return wj(n,t);case 2:return Nj(n,t);case 3:return Cj(n,t);default:return kj(n,t)}}function Q6(n,t,e=!1,s){let a="";e?a+=_A(n,s):a+=pc(n,s);const r=n.shapeInfo.logicalShape,i=t.logicalShape;return r.length<=i.length&&(e?a+=Rj(n,t):a+=Dj(n,t)),a}function J6(n,t,e){switch(n.length){case 0:return FA();case 1:return uj(n,t,e);case 2:return yj(n,t,e);case 3:return hj(n,t,e);default:return fj(n,t,e)}}function tj(n,t,e){switch(n.length){case 0:return FA();case 1:return cj(n,t,e);case 2:return bj(n,t,e);case 3:return dj(n,t,e);case 4:return pj(n,t,e);case 5:return mj(n,t);case 6:return gj(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function ej(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function nj(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function sj(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function aj(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${rj}
    ${ij}
    ${oj}
  `}const rj=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ij=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,oj=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,lj=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function FA(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function uj(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function cj(n,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function hj(n,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(n[2]/2),r=a*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function dj(n,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Qy(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=el(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function fj(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(n[n.length-1]/2),r=a*Math.ceil(n[n.length-2]/2);let i=r,l="",u="b, r, c";for(let h=2;h<n.length-1;h++)i*=n[n.length-h-1],l=`
      int b${h} = index / ${i};
      index -= b${h} * ${i};
    `+l,u=`b${h}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${l}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${n.length}(${u});
    }
  `}function pj(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Qy(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=el(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function mj(n,t){const e=el(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function gj(n,t){const e=el(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function yj(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Zt(n,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const a=Math.ceil(n[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function bj(n,t,e){return Zt(n,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function nl(n){return`offset${n}`}function xj(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Zn();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function vj(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[a,r]=n.shapeInfo.texShape;if(a===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const i=nl(e);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});
      return sampleTexture(${e}, uv);
    }
  `;const[l,u]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${l}, ${u}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function wj(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=n.shapeInfo.texShape,r=Zn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${e}, uv);
    }
  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${r.texture2D}(${e}, uv);
    }
  `}function Sj(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${mc(n)}
      }
    `;const a=n.shapeInfo.texShape,r=a[0],i=a[1];if(i===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const l=nl(e);return i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${l});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${l});
      return sampleTexture(${e}, uv);
    }
  `}function Nj(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=r[0],l=r[1],u=Zn();if(r!=null&&Zt(e,r))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${i}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;const h=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],d=Math.ceil(e[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d}, ${h[0]}, ${h[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function Tj(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape;if(r!=null&&Zt(e,r)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const m=r[0],y=r[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${y}.0, ${m}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:l}=_r(e),u=i;if(u.length<e.length){const m=gc(n,u),y=["row","col"];return`
      ${pc(m,t)}
      float ${a}(int row, int col) {
        return ${a}(${yc(y,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${mc(n)}
      }
    `;const h=r[0],d=r[1],p=nl(s);return d===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `:h===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${h}, ${d}, index);
    return sampleTexture(${s}, uv);
  }
`}function Cj(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const m=e.slice(1),y=[1,2],b=gc(n,m),v=["b","row","col"];return`
        ${_A(b,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${yc(v,y)});
        }
      `}const l=Zn();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=i[0],h=i[1],d=Math.ceil(e[2]/2),p=d*Math.ceil(e[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${h}, ${p}, ${d}, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function $j(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e[1]*e[2],i=e[2],{newShape:l,keptDims:u}=_r(e),h=l;if(h.length<e.length){const v=gc(n,h),w=["row","col","depth"];return`
        ${pc(v,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${yc(w,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${mc(n)}
      }
    `;const d=n.shapeInfo.texShape,p=d[0],m=d[1],y=n.shapeInfo.flatOffset;if(m===r&&y==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(m===i&&y==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;const b=nl(s);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${b};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${b};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${s}, uv);
      }
  `}function kj(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=Zn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${e}, uv);
    }
  `;const r=n.shapeInfo.logicalShape,i=r.length,l=n.shapeInfo.texShape,u=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],h=u[0],d=u[1],p=Math.ceil(r[i-1]/2);let m=p*Math.ceil(r[i-2]/2),y="int b, int row, int col",b=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let v=2;v<i-1;v++)y=`int b${v}, `+y,m*=r[i-v-1],b=`b${v} * ${m} + `+b;return`
    vec4 ${s}(${y}) {
      int index = ${b};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${h});
      return ${a.texture2D}(${e}, uv);
    }
  `}function Ij(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e[3],i=e[2]*r,l=e[1]*i,{newShape:u,keptDims:h}=_r(e);if(u.length<e.length){const T=gc(n,u),$=["row","col","depth","depth2"];return`
      ${pc(T,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${yc($,h)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${i}, ${r}, 1)));
        ${mc(n)}
      }
    `;const d=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,m=p[0],y=p[1],b=`int stride2 = ${s}Shape[3];`,v=`int stride1 = ${s}Shape[2] * stride2;`,w=`int stride0 = ${s}Shape[1] * stride1;`;if(y===l&&d==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${b}
        ${v}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${m}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(y===r&&d==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${m}.0);
        return sampleTexture(${s}, uv);
      }
    `;const S=nl(s);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${b}
      ${v}
      ${w}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${S});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${m}, ${y}, index + ${S});
      return sampleTexture(${s}, uv);
    }
  `}function Ej(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=t[4],r=t[3]*a,i=t[2]*r,l=t[1]*i,{newShape:u,keptDims:h}=_r(t);if(u.length<t.length){const v=gc(n,u),w=["row","col","depth","depth2","depth3"];return`
      ${pc(v)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${yc(w,h)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${i}, ${r}, ${a})) +
          depth3;
        ${mc(n)}
      }
    `;const d=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,m=p[0],y=p[1];if(y===l&&d==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${r}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(y===a&&d==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;const b=nl(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} + depth * ${r} +
          depth2 * ${a} + depth3 + ${b};
      vec2 uv = uvFromFlat(${m}, ${y}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Aj(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:a,keptDims:r}=_r(t);if(a.length<t.length){const w=gc(n,a),S=["row","col","depth","depth2","depth3","depth4"];return`
      ${pc(w)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${yc(S,r)});
      }
    `}const i=t[5],l=t[4]*i,u=t[3]*l,h=t[2]*u,d=t[1]*h;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${h}, ${u}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${mc(n)}
      }
    `;const p=n.shapeInfo.flatOffset,m=n.shapeInfo.texShape,y=m[0],b=m[1];if(b===d&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${h}, ${u}, ${l}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${b}.0, ${y}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(b===i&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${b}.0, ${y}.0);
        return sampleTexture(${e}, uv);
      }
    `;const v=nl(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${h} + depth * ${u} +
          depth2 * ${l} + depth3 * ${i} + depth4 + ${v};
      vec2 uv = uvFromFlat(${y}, ${b}, index);
      return sampleTexture(${e}, uv);
    }
  `}function mc(n){const t=n.name,e=ht(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Rj(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),a="get"+s+"AtOutCoords",r=n.shapeInfo.logicalShape.length,i=t.logicalShape.length,l=OA(n.shapeInfo.logicalShape,t.logicalShape),u=xe(i),h=i-r;let d;const p=["x","y","z","w","u","v"];r===0?d="":i<2&&l.length>=1?d="coords = 0;":d=l.map(T=>`coords.${p[T+h]} = 0;`).join(`
`);let m="";i<2&&r>0?m="coords":m=n.shapeInfo.logicalShape.map((T,$)=>`coords.${p[$+h]}`).join(", ");let y="return outputValue;";const v=ht(n.shapeInfo.logicalShape)===1,S=ht(t.logicalShape)===1;if(r===1&&!v&&!S)y=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(v&&!S)i===1?y=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:y=`
        return vec4(outputValue.x);
      `;else if(l.length){const T=r-2,$=r-1;l.indexOf(T)>-1&&l.indexOf($)>-1?y="return vec4(outputValue.x);":l.indexOf(T)>-1?y="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf($)>-1&&(y="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${u} coords = getOutputCoords();
      ${d}
      vec4 outputValue = get${s}(${m});
      ${y}
    }
  `}function Dj(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),a="get"+s+"AtOutCoords",r=t.texShape,i=n.shapeInfo.texShape,l=n.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!n.shapeInfo.isUniform&&l===u&&n.shapeInfo.flatOffset==null&&Zt(i,r))return`
      float ${a}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const h=xe(u),d=OA(n.shapeInfo.logicalShape,t.logicalShape),p=u-l;let m;const y=["x","y","z","w","u","v"];l===0?m="":u<2&&d.length>=1?m="coords = 0;":m=d.map(v=>`coords.${y[v+p]} = 0;`).join(`
`);let b="";return u<2&&l>0?b="coords":b=n.shapeInfo.logicalShape.map((v,w)=>`coords.${y[w+p]}`).join(", "),`
    float ${a}() {
      ${h} coords = getOutputCoords();
      ${m}
      return get${s}(${b});
    }
  `}function xe(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function nS(n,t,e){const{newShape:s,keptDims:a}=_r(t),r=t.length,i=n&&r===3&&t[0]===1,l=i?t.slice(1):s,u=!n&&r>1&&!Zt(t,e)&&s.length<r||i;return{useSqueezeShape:u,uniformShape:u?l:t,keptDims:a}}function gc(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function yc(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oj(n,t,e,s){const a=e.map((d,p)=>{const m={logicalShape:d.shape,texShape:d.isUniform?null:d.texData.texShape,isUniform:d.isUniform,isPacked:d.isUniform?!1:d.texData.isPacked,flatOffset:null};return d.texData!=null&&d.texData.slice!=null&&d.texData.slice.flatOffset>0&&(m.flatOffset=d.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:m}}),r=a.map(d=>d.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=Z6(a,i,t),u=$6(n.gl,l),h=n.createProgram(u);return at().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:l,webGLProgram:h,inShapeInfos:r,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(h),Object.assign({program:t,fragmentShader:u,source:l,webGLProgram:h,inShapeInfos:r,outShapeInfo:i},LA(n,t,h)))}function LA(n,t,e){const s=[],a=[];let r,i,l,u=null,h=null;h=n.getUniformLocation(e,"NAN",!1),at().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(e,"INFINITY",!1));const d=!1;for(const p of t.variableNames){const m={name:p,uniform:n.getUniformLocation(e,p,d),offset:n.getUniformLocation(e,`offset${p}`,d)};t.enableShapeUniforms&&(m.shape=n.getUniformLocation(e,`${p}Shape`,d),m.texShape=n.getUniformLocation(e,`${p}TexShape`,d)),s.push(m)}if(t.enableShapeUniforms&&(r=n.getUniformLocation(e,"outShape",d),l=n.getUniformLocation(e,"outShapeStrides",d),i=n.getUniformLocation(e,"outTexShape",d)),t.customUniforms)for(const p of t.customUniforms)a.push(n.getUniformLocation(e,p.name,d));return{variablesLocations:s,customUniformLocations:a,infLoc:u,nanLoc:h,outShapeLocation:r,outShapeStridesLocation:l,outTexShapeLocation:i}}function C$(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const a=e.logicalShape,r=t[s],i=r.shape;if(!Zt(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&r.isUniform)return;const l=e.texShape,u=r.isUniform?null:r.texData.texShape;if(!Zt(l,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${l} and ${u} must match`)})}function _j(n,t,e,s,a){t.program.enableShapeUniforms||(C$(t.inShapeInfos,e),C$([t.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):n.setOutputMatrixTexture(r.texture,i[0],i[1]),n.setProgram(t.webGLProgram),n.bindVertexArray(t.webGLProgram.vao),at().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<e.length;++u){const h=e[u],{uniform:d,offset:p,shape:m,texShape:y}=t.variablesLocations[u];if(m){const{uniformShape:b}=nS(t.program.packedInputs,h.shape,h.texData.texShape);switch(b.length){case 1:n.gl.uniform1iv(m,new Int32Array(b));break;case 2:n.gl.uniform2iv(m,new Int32Array(b));break;case 3:n.gl.uniform3iv(m,new Int32Array(b));break;case 4:n.gl.uniform4iv(m,new Int32Array(b));break}}if(y&&n.gl.uniform2i(y,h.texData.texShape[0],h.texData.texShape[1]),d!=null){if(h.isUniform){if(ht(h.shape)<2)n.gl.uniform1f(d,h.uniformValues[0]);else{let b=h.uniformValues;b instanceof Float32Array||(b=new Float32Array(b)),n.gl.uniform1fv(d,b)}continue}h.texData.slice!=null&&p!=null&&n.gl.uniform1i(p,h.texData.slice.flatOffset),n.setInputMatrixTexture(h.texData.texture.texture,d,u)}}const l=t.outShapeLocation;if(l)switch(s.shape.length){case 1:n.gl.uniform1iv(l,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(l,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(l,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(l,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const u=Lt(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&a)for(let u=0;u<t.program.customUniforms.length;++u){const h=t.program.customUniforms[u],d=t.customUniformLocations[u],p=a[u];if(h.type==="float")n.gl.uniform1fv(d,p);else if(h.type==="vec2")n.gl.uniform2fv(d,p);else if(h.type==="vec3")n.gl.uniform3fv(d,p);else if(h.type==="vec4")n.gl.uniform4fv(d,p);else if(h.type==="int")n.gl.uniform1iv(d,p);else if(h.type==="ivec2")n.gl.uniform2iv(d,p);else if(h.type==="ivec3")n.gl.uniform3iv(d,p);else if(h.type==="ivec4")n.gl.uniform4iv(d,p);else throw Error(`uniform type ${h.type} is not supported yet.`)}n.executeProgram()}function Fj(n,t,e){let s="";t.concat(e).forEach(i=>{const l=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const u=i.texData.texShape,{useSqueezeShape:h,uniformShape:d,keptDims:p}=nS(n.packedInputs,i.shape,u);let m="",y="",b="";if(d.length===1&&n.packedInputs){const I=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];m=`${I[0]>1}_${I[1]>1}`}else if(d.length===2&&!n.packedInputs)y=`${d[0]>1}_${d[1]>1}`;else if(d.length>2&&!n.packedInputs){const I=Lt(d);b=`${I[0]===u[1]}_${I[I.length-1]===u[1]}`}const v=i.shape.length,w=d.length===2&&Zt(i.shape,u),S=ht(i.shape)===1,T=Mo(i.shape,e.shape),$=!n.packedInputs&&v===e.shape.length&&Zt(u,e.texData.texShape),C=n.packedInputs||d.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${v}_${$}_${h?p:""}_${d.length}_${S}_${T}_${w}_${m}_${y}_${b}_${C}_${l}`}else{const u=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${u}_${l}`}});const a=n.userCode;let r=n.constructor.name;return r+="_"+s+"_"+a+`${at().getNumber("WEBGL_VERSION")}`,r}function Bn(n){return at().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lj{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Wh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Zn();this.outputShape=t,this.enableShapeUniforms=Bn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qy(["r","c","d"],t):el(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zj{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Wh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Zn();this.outputShape=t,this.enableShapeUniforms=Bn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qy(["r","c","d"],t):el(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mj{constructor(t){this.variableNames=["A"],this.outTexUsage=Fs.DOWNLOAD;const e=Zn();this.outputShape=t,this.userCode=`
      ${DA}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bj{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Fs.DOWNLOAD;const e=Zn();this.outputShape=t,this.userCode=`
      ${DA}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vj={R:0,G:1,B:2,A:3};class $${constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=Zn();this.outputShape=t,this.enableShapeUniforms=Bn(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)");let i="";for(let l=0;l<s.length;l++){const u=s[l];i+=`
          if(offset == ${l}) {
            result = values[${Vj[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?eS():tS(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${a.texture2D}(A, uv);
          ${i}
        }
        ${a.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pj{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Zn();this.outputShape=t,this.enableShapeUniforms=Bn(this.outputShape.length);let a="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let l=0;l<=1;l++){const u=i*2+l;a+=`
          localCoords = coords;
          if(localCoords[2] + ${l} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${l};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?eS():tS(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uj(n){const t=Zn(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return C6(n,e)}function Wj(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return A6(n,t)}function Gj(n){const t=new Uint16Array([0,1,2,2,1,3]);return R6(n,t)}function kf(n,t,e,s,a,r){O6(t,e);const i=D6(n),l=n.TEXTURE_2D;return $t(n,()=>n.bindTexture(l,i)),$t(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),$t(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),$t(n,()=>n.texParameteri(l,n.TEXTURE_MIN_FILTER,n.NEAREST)),$t(n,()=>n.texParameteri(l,n.TEXTURE_MAG_FILTER,n.NEAREST)),at().getNumber("WEBGL_VERSION")===1?$t(n,()=>n.texImage2D(l,0,s,t,e,0,a,r,null)):$t(n,()=>n.texStorage2D(l,1,s,t,e)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function zA(n){return n.internalFormatFloat}function Hj(n,t,e,s){const[a,r]=Cf(t,e);return kf(n,a,r,zA(s),s.textureFormatFloat,n.FLOAT)}function MA(n){return n.internalFormatHalfFloat}function jj(n,t,e,s){const[a,r]=Cf(t,e);return kf(n,a,r,MA(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function BA(n){return n.downloadTextureFormat}function qj(n,t,e,s){const[a,r]=Cf(t,e);return kf(n,a,r,BA(s),n.RGBA,n.UNSIGNED_BYTE)}function VA(n){return n.internalFormatPackedFloat}function Kj(n,t,e,s){const[a,r]=fc(t,e);return kf(n,a,r,VA(s),n.RGBA,n.FLOAT)}function PA(n){return n.internalFormatPackedHalfFloat}function Xj(n,t,e,s){const[a,r]=fc(t,e);return kf(n,a,r,PA(s),n.RGBA,s.textureTypeHalfFloat)}function Yj(n,t,e){return $t(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),S$(n,t,"clipSpacePos",e,3,20,0)&&S$(n,t,"uv",e,2,20,12)}function Zj(n,t,e,s,a,r){$t(n,()=>n.bindTexture(n.TEXTURE_2D,t));let i,l,u;a instanceof Uint8Array?(i=new Uint8Array(e*s*4),l=n.UNSIGNED_BYTE,u=n.RGBA):(i=new Float32Array(e*s*4),l=n.FLOAT,u=r.internalFormatPackedFloat),i.set(a),at().getNumber("WEBGL_VERSION")===2?$t(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,l,i)):$t(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,e,s,0,n.RGBA,l,i)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Qj(n,t,e){$t(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?at().getNumber("WEBGL_VERSION")===2?$t(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):$t(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):at().getNumber("WEBGL_VERSION")===2?$t(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):$t(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Jj(n,t,e,s){const a=n.createBuffer();$t(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,a));const l=4*4*t*e;return $t(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,l,n.STREAM_READ)),$t(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),$t(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),a}function tq(n,t,e){const s=n,a=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,a),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),a}function eq(n,t,e,s){const[a,r]=Cf(t,e),i=4,l=new Uint8Array(b6(t*e,i));return $t(n,()=>n.readPixels(0,0,a,r,s.downloadTextureFormat,n.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function nq(n,t,e,s,a,r,i,l){const u=n,h=new Float32Array(x6(r,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,h),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),h}function sq(n,t,e){const s=new Float32Array(t*e*4);return $t(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gx{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=at().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,m6(e,t)):this.gl=Ea(e),t=this.gl,at().getNumber("WEBGL_VERSION")===2){const r=t;this.createVertexArray=()=>$t(r,()=>r.createVertexArray()),this.bindVertexArray=i=>$t(r,()=>r.bindVertexArray(i)),this.deleteVertexArray=i=>$t(r,()=>r.deleteVertexArray(i)),this.getVertexArray=()=>$t(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(t!=null){const r=t.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>$t(t,()=>r.createVertexArrayOES()),this.bindVertexArray=i=>$t(t,()=>r.bindVertexArrayOES(i)),this.deleteVertexArray=i=>$t(t,()=>r.deleteVertexArrayOES(i)),this.getVertexArray=()=>$t(t,()=>t.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),at().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=em(this.gl,r),ia(this.gl,i))this.textureHalfFloatExtension=em(this.gl,i);else if(at().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),ia(this.gl,a))this.colorBufferHalfFloatExtension=em(this.gl,a);else if(at().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",ia(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(ia(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Wj(this.gl),this.indexBuffer=Gj(this.gl),this.framebuffer=_6(this.gl),this.textureConfig=Jw(this.gl,this.textureHalfFloatExtension)}get debug(){return at().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;$t(t,()=>t.finish()),$t(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),$t(t,()=>t.deleteFramebuffer(this.framebuffer)),$t(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),$t(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),$t(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),Hj(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),jj(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),qj(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),Qj(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,a){this.throwIfDisposed(),Zj(this.gl,t,e,s,a,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),Xj(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),Kj(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(N$(this.gl,this.framebuffer),this.outputTexture=null),$t(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>eq(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,a,r,i){return nq(this.gl,t,e,s,a,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return tq(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const a=Jj(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(at().getBool("WEBGL_FENCE_API_ENABLED")){const a=t,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const i=a.clientWaitSync(r,0,0);return i===a.ALREADY_SIGNALED||i===a.CONDITION_SATISFIED},e=r}else at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>sq(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=Uj(e));const s=I6(e);$t(e,()=>e.attachShader(s,this.vertexShader)),$t(e,()=>e.attachShader(s,t)),E6(e,s);const a=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Vx(e,a),a}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;$t(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),Yj(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&($t(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Vx(this.gl,this.program),$t(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?L6(this.gl,t,e):z6(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),$t(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),M6(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[a,r]=fc(e,s);this.setOutputMatrixTextureDriver(t,a,r)}setOutputMatrixWriteRegion(t,e,s,a){this.setOutputMatrixWriteRegionDriver(s,t,a,e)}setOutputPackedMatrixWriteRegion(t,e,s,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Vx(this.gl,this.program),nm(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}$t(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),$t(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=em(this.gl,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(a.TIME_ELAPSED_EXT,r),r}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await Qx(()=>this.disposed||this.isQueryAvailable(t,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),a=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=aq(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in at().platform&&(s=at().platform.setTimeoutCustom.bind(at().platform)),Qx(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Px(this.gl,t,this.framebuffer),this.debug&&nm(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Px(this.gl,this.outputTexture,this.framebuffer),this.debug&&nm(this.gl)):N$(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const a=this.gl;Px(a,t,this.framebuffer),this.debug&&nm(a),this.outputTexture=t,$t(a,()=>a.viewport(0,0,e,s)),$t(a,()=>a.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,a){this.throwIfDisposed(),$t(this.gl,()=>this.gl.scissor(t,e,s,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function aq(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rt(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&D(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const rq=n=>{const{x:t}=n.inputs,e=n.backend;Rt(t,"abs");let s=new Float32Array(ht(t.shape));const a=e.data.get(t.dataId).values;return s=UA(a),e.makeOutput(s,t.shape,t.dtype)},iq={kernelName:Zh,backendName:"cpu",kernelFunc:rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xe(n){return(t,e,s,a,r)=>{const i=Pt(t,e),l=i.length,u=Lt(i),h=ht(i),d=bn(r,h),p=t.length,m=e.length,y=Lt(t),b=Lt(e),v=Mo(t,i),w=Mo(e,i);if(v.length+w.length===0)for(let S=0;S<d.length;++S)d[S]=n(s[S%s.length],a[S%a.length]);else for(let S=0;S<d.length;++S){const T=Xo(S,l,u),$=T.slice(-p);v.forEach(L=>$[L]=0);const C=$a($,p,y),I=T.slice(-m);w.forEach(L=>I[L]=0);const R=$a(I,m,b);d[S]=n(s[C],a[R])}return[d,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bs(n){const{inputs:t,backend:e}=n,{real:s,imag:a}=t,r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,l=e.makeTensorInfo(s.shape,"complex64"),u=e.data.get(l.dataId);return u.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",r),imag:e.makeTensorInfo(a.shape,"float32",i)},l}const oq={kernelName:ug,backendName:"cpu",kernelFunc:bs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lm(n,t,e="float32"){if(e==="complex64"){const a=Lm(n,t,"float32"),r=Lm(n,t,"float32");return bs({inputs:{real:a,imag:r},backend:n})}const s=En(ht(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function er(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const lq={kernelName:Ru,backendName:"cpu",kernelFunc:er};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wo(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.data.get(s.dataId).complexTensorInfos.real,r=e.data.get(a.dataId).values;return e.makeTensorInfo(a.shape,a.dtype,r)}const uq={kernelName:Ug,backendName:"cpu",kernelFunc:Wo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(n,t,e,s){if(s==="int32"){const a=Int32Array.from(n);return[t,"int32",a]}if(s==="bool"){const a=Fi([0],e),[r,i]=Xe((l,u)=>l!==u?1:0)(t,[],n,a,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function Ai(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return er({inputs:{x:a},backend:e});const d=Lm(e,a.shape,a.dtype),p=Ai({inputs:{x:a},backend:e,attrs:{dtype:"float32"}}),m=bs({inputs:{real:p,imag:d},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),m}if(a.dtype==="complex64"){const d=Wo({inputs:{input:a},backend:e}),p=Ai({inputs:{x:d},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(d),p}if(!J1(a.dtype,r)){const d=er({inputs:{x:a},backend:e});return{dataId:d.dataId,shape:d.shape,dtype:r}}const i=e.data.get(a.dataId).values,[l,u,h]=WA(i,a.shape,a.dtype,r);return e.makeTensorInfo(l,u,h)}const cq={kernelName:bu,backendName:"cpu",kernelFunc:Ai};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(n,t,e,s){return e==null?({inputs:a,backend:r})=>{const{a:i,b:l}=a,u=r;Rt([i,l],n);const h=u.data.get(i.dataId).values,d=u.data.get(l.dataId).values,p=i.dtype==="string"?Or(h):h,m=i.dtype==="string"?Or(d):d,y=s||i.dtype,[b,v]=t(i.shape,l.shape,p,m,y);return u.makeTensorInfo(v,y,b)}:({inputs:a,backend:r})=>{const{a:i,b:l}=a,u=r;if(i.dtype==="complex64"||l.dtype==="complex64"){const h=Ai({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),d=u.data.get(h.dataId),p=d.complexTensorInfos.real,m=d.complexTensorInfos.imag,y=u.data.get(p.dataId).values,b=u.data.get(m.dataId).values,v=Ai({inputs:{x:l},backend:u,attrs:{dtype:"complex64"}}),w=u.data.get(v.dataId),S=w.complexTensorInfos.real,T=w.complexTensorInfos.imag,$=u.data.get(S.dataId).values,C=u.data.get(T.dataId).values,[I,R,L]=e(i.shape,l.shape,y,b,$,C),M=u.makeTensorInfo(L,"float32",I),O=u.makeTensorInfo(L,"float32",R),_=bs({inputs:{real:M,imag:O},backend:u});return u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(v),u.disposeIntermediateTensorInfo(M),u.disposeIntermediateTensorInfo(O),_}else{const h=u.data.get(i.dataId).values,d=u.data.get(l.dataId).values,p=s||i.dtype,[m,y]=t(i.shape,l.shape,h,d,p);return u.makeTensorInfo(y,p,m)}}}function sS(n){return(t,e,s,a,r,i)=>{const l=Pt(t,e),u=ht(l),h=l.length,d=Lt(l),p=bn("float32",u),m=bn("float32",u),y=Mo(t,l),b=Mo(e,l),v=Dr(s,a),w=Dr(r,i),S=t.length,T=Lt(t),$=e.length,C=Lt(e);if(y.length+b.length===0)for(let I=0;I<p.length;I++){const R=I%v.length,L=I%w.length,M=n(v[R*2],v[R*2+1],w[L*2],w[L*2+1]);p[I]=M.real,m[I]=M.imag}else for(let I=0;I<p.length;I++){const R=Xo(I,h,d),L=R.slice(-S);y.forEach(G=>L[G]=0);const M=$a(L,S,T),O=R.slice(-$);b.forEach(G=>O[G]=0);const _=$a(O,$,C),A=n(v[M*2],v[M*2+1],w[_*2],w[_*2+1]);p[I]=A.real,m[I]=A.imag}return[p,m,l]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA=Xe((n,t)=>n+t),hq=sS((n,t,e,s)=>({real:n+e,imag:t+s})),ou=dn(Yo,GA,hq),dq={kernelName:Yo,backendName:"cpu",kernelFunc:ou};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aS(n,t,e,s,a){const r=ht(s),i=En(a,e);for(let l=0;l<n.length;l++){const u=n[l];if(u<0)throw new Error("Input x must be non-negative!");u>=a||(r>0?i[u]+=t[l]:i[u]+=1)}return i}function HA(n,t,e,s=!1){const a=n.shape[0],r=n.shape[1],i=Wt([a,e],t.dtype);for(let l=0;l<a;l++)for(let u=0;u<r;u++){const h=n.get(l,u);if(h<0)throw new Error("Input x must be non-negative!");h>=e||(s?i.set(1,l,h):t.size>0?i.set(i.get(l,h)+t.get(l,u),l,h):i.set(i.get(l,h)+1,l,h))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jA=Xe((n,t)=>n&t),fq=dn(rd,jA),pq={kernelName:rd,backendName:"cpu",kernelFunc:fq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ar(n){return(t,e,s)=>{const a=Ve(e,t.length);for(let r=0;r<t.length;++r)a[r]=n(t[r],s);return a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ye(n,t,e){const s=ar(t);return Ui(n,s,e)}function Ui(n,t,e){return({inputs:s,attrs:a,backend:r})=>{const{x:i}=s;Rt(i,n);const l=r,u=l.data.get(i.dataId).values;let h;if(i.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");h=Or(u)}else h=u;const d=e||i.dtype,p=t(h,d,a);return l.makeTensorInfo(i.shape,d,p)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qA=ar(n=>Math.ceil(n)),mq=Ui(xu,qA),gq={kernelName:xu,backendName:"cpu",kernelFunc:mq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(n,t,e,s){const a=Ve(e,ht(t));if(s&&e!=="string"){let r=0;n.forEach(i=>{const l=ht(i.shape);a.set(i.vals,r),r+=l})}else{let r=0;n.forEach(i=>{const l=e==="string"?Or(i.vals):i.vals;let u=0;for(let h=0;h<i.shape[0];++h){const d=h*t[1]+r;for(let p=0;p<i.shape[1];++p)a[d+p]=l[u++]}r+=i.shape[1]})}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XA=Xe((n,t)=>n===t?1:0),YA=dn(pd,XA,null,"bool"),yq={kernelName:pd,backendName:"cpu",kernelFunc:YA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZA=ar(n=>Math.exp(n)),QA=Ui($u,ZA,"float32"),bq={kernelName:$u,backendName:"cpu",kernelFunc:QA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JA=ar(n=>Math.expm1(n)),xq=Ui(ku,JA),vq={kernelName:ku,backendName:"cpu",kernelFunc:xq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tR=ar(n=>Math.floor(n)),wq=Ui(Iu,tR),Sq={kernelName:Iu,backendName:"cpu",kernelFunc:wq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eR=Xe((n,t)=>Math.floor(n/t)),Nq=dn(Eu,eR,null,"int32"),Tq={kernelName:Eu,backendName:"cpu",kernelFunc:Nq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nR(n,t,e,s,a,r,i,l,u){const h=Wt([s,r],e);for(let d=0;d<s;d++){const p=[];let m=0;for(let y=0;y<a;y++){const b=n[d*a+y];m+=b*i[y],p.push(b)}if(m<0||m>=u/r)throw new Error(`Invalid indices: ${p} does not index into ${l}`);for(let y=0;y<r;y++)h.values[d*r+y]=t.get(...t.indexToLoc(m*r+y))}return h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(n,t,e){const s=Wt(e,n.dtype);for(let a=0;a<s.size;++a){const i=s.indexToLoc(a).slice(),l=i[0],u=i[2],h=t.locToIndex([l,u]);i[2]=t.values[h];const d=n.locToIndex(i);0<=d&&d<n.values.length&&(s.values[a]=n.values[d])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aR=Xe((n,t)=>n>t?1:0),Cq=dn(bd,aR,null,"bool"),$q={kernelName:bd,backendName:"cpu",kernelFunc:Cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rR=Xe((n,t)=>n>=t?1:0),kq=dn(Au,rR,null,"bool"),Iq={kernelName:Au,backendName:"cpu",kernelFunc:kq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR=Xe((n,t)=>n<t?1:0),Eq=dn(vd,iR,null,"bool"),Aq={kernelName:vd,backendName:"cpu",kernelFunc:Eq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oR=Xe((n,t)=>n<=t?1:0),Rq=dn(wd,oR,null,"bool"),Dq={kernelName:wd,backendName:"cpu",kernelFunc:Rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR(n,t,e){const s=(t-n)/(e-1),a=En(e,"float32");a[0]=n;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uR=ar(n=>Math.log(n)),Oq=Ui(Fu,uR),_q={kernelName:Fu,backendName:"cpu",kernelFunc:Oq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cR(n,t,e,s){const a=bn(s,ht(e));for(let r=0;r<a.length;++r){const i=r*t;let l=n[i];for(let u=0;u<t;++u){const h=n[i+u];(Number.isNaN(h)||h>l)&&(l=h)}a[r]=l}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hR=Xe((n,t)=>Math.max(n,t)),Fq=dn(zu,hR),Lq={kernelName:zu,backendName:"cpu",kernelFunc:Fq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR=Xe((n,t)=>Math.min(n,t)),zq=dn(Mu,dR),Mq={kernelName:Mu,backendName:"cpu",kernelFunc:zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rS=Xe((n,t)=>n*t),Bq=sS((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),Jy=dn(Vu,rS,Bq),Vq={kernelName:Vu,backendName:"cpu",kernelFunc:Jy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fR(n,t,e){const s=Fr(-1,e);return rS([],t,s,n,e)}function Pq(n){const{inputs:t,backend:e}=n,{x:s}=t;Rt(s,"neg");const a=e.data.get(s.dataId).values,[r,i]=fR(a,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,r)}const Uq={kernelName:Dd,backendName:"cpu",kernelFunc:Pq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pR=Xe((n,t)=>n!==t?1:0),Wq=dn(Od,pR,null,"bool"),Gq={kernelName:Od,backendName:"cpu",kernelFunc:Wq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iS(n,t,e,s,a){const r=t.length,i=ht(t),l=Lt(t),u=Lt(a),h=bn(e,ht(a));for(let d=0;d<i;++d){const p=Xo(d,r,l),m=new Array(p.length);for(let b=0;b<m.length;b++)m[b]=p[s[b]];const y=$a(m,r,u);h[y]=n[d]}return h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(n){const{inputs:t,attrs:e,backend:s}=n,{x:a}=t,{perm:r}=e;Rt(a,"transpose");const i=a.shape.length,l=new Array(i);for(let p=0;p<l.length;p++)l[p]=a.shape[r[p]];const u=s.data.get(a.dataId).values,h=iS(u,a.shape,a.dtype,r,l);return{dataId:s.write(h,l,a.dtype),shape:l,dtype:a.dtype}}const Hq={kernelName:Io,backendName:"cpu",kernelFunc:cs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mR(n,t,e,s){const[a,r]=wn(n,s),i=rs(t,"int32"),l=En(ht(a),i),u=ht(r);for(let h=0;h<l.length;++h){const d=h*u;let p=1;for(let m=0;m<u;++m)p*=e[d+m];l[h]=p}return{outVals:l,outShape:a,outDtype:i}}function jq(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;Rt(a,"prod");const l=a.shape.length,u=Kt(r,a.shape),h=ze(u,l);let d=u,p=a;const m=[];h!=null&&(p=cs({inputs:{x:a},backend:e,attrs:{perm:h}}),m.push(p),d=Ke(d.length,l));const y=e.data.get(p.dataId).values,{outVals:b,outShape:v,outDtype:w}=mR(p.shape,p.dtype,y,d);let S=v;return i&&(S=qe(v,u)),m.forEach(T=>e.disposeIntermediateTensorInfo(T)),e.makeTensorInfo(S,w,b)}const qq={kernelName:Bd,backendName:"cpu",kernelFunc:jq};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kq(n,t,e){n.forEach((s,a)=>{if(s<0||s>=e){const r=Xo(a,t.length,Lt(t)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${e})`)}})}function Xq(n,t){for(let e=0;e<n.length;++e){const s=n[e],a=e===n.length-1?t:n[e+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>a)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function Yq(n,t,e,s){const a=[];let r=0;const i=t.length-1+e.length,l=new Array(i).fill(null).map(()=>[0]);Xq(e,s);let u=1;for(let h=0;h<t.length-1;++h){u*=t[h];const d=t[h+1];for(let p=1;p<u+1;++p)l[h].push(p*d)}for(let h=0;h<n.length;++h){let d=n[h],p=n[h]+1;for(let m=0;m<e.length;++m){const y=e[m],b=m+t.length-1;if(b>=0){const v=l[b],w=v[v.length-1]-y[d];for(let S=d;S<p;++S)l[b].push(y[S+1]+w)}d=y[d],p=y[p]}p!==d&&(a.push([d,p]),r+=p-d)}return{outSplits:l,valueSlices:a,numValues:r}}function Zq(n){const t=[];for(let e=0;e<n.length;++e){const s=n[e].length,a=Ve("int32",s);t.push(a),n[e].forEach((r,i)=>a[i]=r)}return t}function k$(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function Qq(n,t,e,s,a,r){const i=k$(t,2)[1],l=k$(r,2)[1];let u=0;for(const h of e)for(let d=h[0];d<h[1];++d){for(let p=0;p<s;++p)a[u*l+p]=n[d*i+p];++u}}function Jq(n,t,e,s,a){const r=t.slice();r[0]=a;const i=Ve(e,ht(r)),l=n.length,u=l===0?0:l/t[0];return Qq(n,t,s,u,i,r),[i,r]}function gR(n,t,e,s,a,r,i,l){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const u=t[0][0]-1;if(Kq(r,i,u),s.length===0)throw new Error("params.rank must be nonzero");const h=s[0],{outSplits:d,valueSlices:p,numValues:m}=Yq(r,i,n,h),y=Zq(d),b=Jq(e,s,a,p,m);return[y,b[0],b[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I$=2147483647;function yR(n,t,e,s,a,r,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const l=t.length===0,u=a.length===0,h=i.length===0,d=[];l||d.push(t[0]),u||d.push(a[0]),h||d.push(i[0]);for(let w=1;w<d.length;++w)if(d[w]!==d[w-1])throw new Error("starts, limits, and deltas must have the same shape");const p=d.length===0?1:d[0],m=Ve("int32",p+1);m[0]=0;for(let w=0;w<p;++w){const S=l?n[0]:n[w],T=u?s[0]:s[w],$=h?r[0]:r[w];if($===0)throw new Error("Requires delta != 0");let C;if($>0&&T<S||$<0&&T>S)C=0;else if(C=Math.ceil(Math.abs((T-S)/$)),C>I$)throw new Error(`Requires ((limit - start) / delta) <= ${I$}`);m[w+1]=m[w]+C}const y=m[p],b=Ve(e,y);let v=0;for(let w=0;w<p;++w){const S=m[w+1]-m[w];let T=l?n[0]:n[w];const $=h?r[0]:r[w];for(let C=0;C<S;++C)b[v++]=T,T+=$}return[m,b]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ta=Ca;class zm{constructor(t,e,s,a,r,i,l,u,h,d){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=a,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=l,this.rowPartitionValues=u,this.rowPartitionValuesShapes=h,this.rowPartitionTypes=GE(d),this.raggedRank=HE(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===ta.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===ta.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case ta.VALUE_ROWIDS:return zm.getMaxWidthValueRowID(e);case ta.ROW_SPLITS:return zm.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${ta[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let s=0;for(let a=0;a<e-1;++a){const r=t[a+1]-t[a];r>s&&(s=r)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let s=0,a=t[0],r=0;for(let i=1;i<e;++i){const l=t[i];l!==a&&(a=l,r=Math.max(i-s,r),s=i)}return Math.max(e-s,r)}tensorShapeFromTensor(t,e,s=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return A$(t,s)}calculateOutputSize(t){const e=this.valuesShape,s=this.defaultValueShape;jE(s,e);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=WE(this.raggedRank,a,e);i[0]<0&&(i[0]=t);for(let l=1;l<=this.raggedRank;++l)i[l]<0&&(i[l]=this.getMaxWidth(l));return i}calculateFirstParentOutputIndex(t,e,s){const a=Math.min(t,s),r=[];let i=0;for(let l=0;l<a;++l,i+=e)r.push(i);for(let l=a;l<t;++l)r.push(-1);return D(r.length===t,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(t,e,s,a){const r=t.length,i=[];for(let l=0;l<r-1;++l){const u=t[l+1]-t[l];let h=Math.min(a,u),d=e[l];d===-1&&(h=0);for(let p=0;p<h;++p)i.push(d),d+=s;for(let p=0;p<u-h;++p)i.push(-1)}if(r>0&&i.length!==t[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,s,a){const r=t.length,i=[];if(r===0)return[];let l=0,u=t[0];if(u>=e.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${e.length}`);let h=e[u];i.push(h);for(let d=1;d<r;++d){const p=t[d];if(p===u)h>=0&&(++l,l<a?h+=s:h=-1);else{if(l=0,u=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);h=e[p]}i.push(h)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,s,a){const r=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case ta.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,s,a);case ta.ROW_SPLITS:if(r.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(r,e,s,a);default:throw new Error(`Unsupported partition type: ${ta[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case ta.FIRST_DIM_SIZE:return t[0];case ta.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ta.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${ta[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),a=new Array(this.raggedRank+1);a[a.length-1]=1;for(let u=a.length-2;u>=0;--u)a[u]=a[u+1]*s[u+1];const r=A$(s,!1),i=Ve(this.valuesDType,ht(r));if(a[0]*s[0]>0){let u=this.calculateFirstParentOutputIndex(e,a[0],s[0]);for(let h=1;h<=this.raggedRank;++h)u=this.calculateOutputIndex(h-1,u,a[h],s[h]);this.setOutput(this.raggedRank,u,i,r)}return[r,i]}setOutput(t,e,s,a){if(s.length===0)return;const r=this.values,i=s;let l=a.slice();l=l.slice(t+1);const u=ht(l),h=e.length;let d=this.defaultValue;if(d.length!==u&&d.length!==1){const b=this.defaultValueShape;nt(()=>{const v=j(d,b);d=Eo(v,l).dataSync()})}let p=0,m=0,y=0;for(let b=0;b<=h;++b){let v=b<h?e[b]:-1;if(v===y){++y;continue}if(m<y){const w=r.subarray(p*u),S=i.subarray(m*u),T=(y-m)*u;E$(S,w,T)}if(b>=h){const w=s.length;v=Math.floor(w/u)}if(v>y)if(this.defaultValue.length===1)i.subarray(y*u,v*u).fill(this.defaultValue[0]),y=v;else for(;v>y;){const w=i.slice(y*u);E$(w,d,u),++y}v<0?(p=b+1,m=y):(p=b,m=y,y=m+1)}}}function E$(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function A$(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function bR(n,t,e,s,a,r,i,l,u,h){return new zm(n,t,e,s,a,r,i,l,u,h).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(n,t,e,s){const a=n===t,r=n<t&&e<0,i=t<n&&e>1;if(a||r||i)return En(0,s);const l=Math.abs(Math.ceil((t-n)/e)),u=En(l,s);t<n&&e===1&&(e=-1),u[0]=n;for(let h=1;h<u.length;h++)u[h]=u[h-1]+e;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vR=ar(n=>1/Math.sqrt(n)),t5=Ui(ju,vR),e5={kernelName:ju,backendName:"cpu",kernelFunc:t5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $o(n,t,e,s,a,r,i,l,u,h){const d=[s/a,a],p=n.values,m=t.values;if(s===0)return Wt(e,t.dtype);const y=u instanceof tn?u:Wt(d,t.dtype);typeof u=="string"||typeof u=="number"?y.values.fill(u):typeof u=="boolean"&&y.values.fill(+u);for(let b=0;b<r;b++){const v=[];let w=0;for(let S=0;S<i;S++){const T=p[b*i+S];v.push(T),w+=T*l[S]}if(w<0||w>=s/a)throw new Error(`Invalid indices: ${v} does not index into ${e}`);for(let S=0;S<a;S++)h?y.values[w*a+S]+=m[b*a+S]:y.values[w*a+S]=t.rank===0?m[0]:m[b*a+S]}return y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n5=ar(n=>1/(1+Math.exp(-n))),wR=ye(Zu,n=>1/(1+Math.exp(-n))),s5={kernelName:Zu,backendName:"cpu",kernelFunc:wR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n,t,e,s,a){const r=Ew(s,t,e),i=ht(e),l=Lt(s);if(r){const p=Aw(t,l);return a==="string"?n.slice(p,p+i):n.subarray(p,p+i)}const u=a==="string"?Or(n):n,h=Wt(s,a,u),d=Wt(e,a);for(let p=0;p<d.size;++p){const m=d.indexToLoc(p),y=m.map((b,v)=>b+t[v]);d.set(h.get(...y),...m)}return a==="string"?dA(d.values):d.values}function Go(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,size:i}=s;Rt(a,"slice");const[l,u]=Ky(a,r,i);kw(a,l,u);const h=e.data.get(a.dataId).values,d=SR(h,l,u,a.shape,a.dtype);return e.makeTensorInfo(u,a.dtype,d)}const a5={kernelName:Hd,backendName:"cpu",kernelFunc:Go};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n,t,e,s,a,r,i){const l=t[0],u=r[0],h=new Array(u),d=new Array(l),p=t[1];if(u===0){if(l!==0)throw new Error(JE(l));const w=Ve(e,0),S=Ve(a,0);return[w,[0,p],S,h,d]}let m=!0,y=0;const b=new Array(u).fill(0);for(let w=0;w<l;++w){const S=n[w*p];if(S<0)throw new Error(tA(w,S));if(S>=u)throw new Error(eA(w,S,u));++b[S],m=m&&S>=y,y=S}let v=!0;for(let w=0;w<u;++w){const S=b[w]===0;h[w]=S,v=v&&!S,b[w]=Math.max(b[w],1),w>0&&(b[w]+=b[w-1])}if(v&&m){const w=n,S=s;for(let T=0;T<l;++T)d[T]=T;return[w,[l,p],S,h,d]}else{const w=b[u-1],S=Ve(e,w*p),T=Ve(a,w),$=new Array(u).fill(0);for(let C=0;C<l;++C){const I=n[C*p],R=$[I],L=(I===0?0:b[I-1])+R;$[I]++;for(let M=0;M<p;++M)S[L*p+M]=n[C*p+M];T[L]=s[C],d[C]=L}for(let C=0;C<u;++C)if($[C]===0){const R=C===0?0:b[C-1];S[R*p+0]=C;for(let L=1;L<p;++L)S[R*p+L]=0;T[R]=i}return[S,[w,p],T,h,d]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TR(n,t,e,s,a){const r=ht(s),i=t[0],l=a.length,u=[];let h=1,d=-1;for(let w=0;w<l;++w){const S=a[w];if(S===-1){if(d!==-1)throw new Error(nA(d,w));d=w,u.push(1)}else{if(S<0)throw new Error(sA(w,S));h*=S,u.push(S)}}if(d!==-1){if(h<=0)throw new Error(aA());const w=Math.trunc(r/h);if(h*w!==r)throw new Error(rA(s,u));u[d]=w}if(ht(u)!==r)throw new Error(iA(s,u));const m=s.length,y=[];if(m>0){y[m-1]=1;for(let w=m-2;w>=0;--w)y[w]=y[w+1]*s[w+1]}const b=[];if(l>0){b[l-1]=1;for(let w=l-2;w>=0;--w)b[w]=b[w+1]*u[w+1]}const v=Ve(e,i*l);for(let w=0;w<i;++w){let S=0;for(let T=0;T<m;++T)S+=n[w*m+T]*y[T];for(let T=0;T<l;++T)v[w*l+T]=Math.trunc(S/b[T]),S%=b[T]}return[v,[i,l],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n,t,e,s,a,r=!1,i=0){const l=s.length,u=[t[0],n.length/t[0]],h=u[1],p=l>0?a[l-1]+1:0;if(p<0)throw new Error(x1());const m=t.slice();m[0]=p;const y=m.reduce(($,C)=>$*C,1),b=Ve(e,y);if(l===0)return p>0&&b.fill(i),[b,m];if(p<=0)throw new Error(x1());let v=0,w=1,S=0,T=a[v];for(;;){let $=0;if(w<l){if($=a[w],T===$){++w;continue}if(T>=$)throw new Error(oA())}if(T<0||T>=p)throw new Error(lA(T,p));T>S&&b.fill(i,S*h,T*h);for(let C=v;C<w;++C){const I=s[C];if(I<0||I>=u[0])throw new Error(uA(C,s[C],u[0]));for(let R=0;R<h;R++)b[T*h+R]+=n[I*h+R]}if(r)for(let C=0;C<h;C++)b[T*h+C]/=w-v;if(v=w,++w,S=T+1,T=$,w>l)break}return S<p&&b.fill(i,S*h,p*h),[b,m]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r5=ar(n=>Math.sqrt(n)),i5=ye(Ju,n=>Math.sqrt(n)),o5={kernelName:Ju,backendName:"cpu",kernelFunc:i5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CR=Xe((n,t)=>{const e=n-t;return e*e}),l5=dn(tc,CR),u5={kernelName:tc,backendName:"cpu",kernelFunc:l5};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $R=ar((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:a}=t;return n.replace(new RegExp(e,s?"g":""),a)}),c5=Ui(Yd,$R),h5={kernelName:Yd,backendName:"cpu",kernelFunc:c5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(n,t,e,s){const a=Wt(n,t.dtype);for(let r=0;r<a.size;r++){const i=a.indexToLoc(r),l=new Array(i.length);for(let u=0;u<l.length;u++)l[u]=i[u]*e[u]+s[u];a.set(t.get(...l),...i)}return a}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d5{constructor(t,e,s,a,r,i){this.separator=ja(t),this.nGramWidths=e,this.leftPad=ja(s),this.rightPad=ja(a),this.padWidth=r,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,a,r,i){for(let l=0;l<r;++l){const u=this.getPadWidth(i),h=Math.max(0,u-l),d=Math.max(0,u-(r-(l+1))),p=i-(h+d),m=e+(h>0?0:l-u);let y=0;y+=h*this.leftPad.length;for(let T=0;T<p;++T)y+=t[m+T].length;y+=d*this.rightPad.length;const b=h+d+p-1;y+=b*this.separator.length,s[a+l]=new Uint8Array(y);const v=s[a+l];let w=0;const S=T=>T.forEach($=>v[w++]=$);for(let T=0;T<h;++T)S(this.leftPad),S(this.separator);for(let T=0;T<p-1;++T)S(t[m+T]),S(this.separator);if(p>0){S(t[m+p-1]);for(let T=0;T<d;++T)S(this.separator),S(this.rightPad)}else{for(let T=0;T<d-1;++T)S(this.rightPad),S(this.separator);S(this.rightPad)}}}compute(t,e){const s=t.length,a=e.length;if(a>0){let u=e[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let h=1;h<a;++h){let d=e[h]>=u;if(d=d&&e[h]<=s,!d)throw new Error(`Invalid split value ${e[h]}, must be in [${u}, ${s}]`);u=e[h]}if(u!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${u}`)}const r=a-1,i=Ve("int32",a);if(s===0||a===0){const u=new Array(s);for(let h=0;h<=r;++h)i[h]=0;return[u,i]}i[0]=0;for(let u=1;u<=r;++u){const h=e[u]-e[u-1];let d=0;this.nGramWidths.forEach(p=>{d+=this.getNumNGrams(h,p)}),this.preserveShort&&h>0&&d===0&&(d=1),i[u]=i[u-1]+d}const l=new Array(i[r]);for(let u=0;u<r;++u){const h=e[u];let d=i[u];if(this.nGramWidths.forEach(p=>{const m=e[u+1]-e[u],y=this.getNumNGrams(m,p);this.createNGrams(t,h,l,d,y,p),d+=y}),this.preserveShort&&d===i[u]){const p=e[u+1]-e[u];if(p===0)continue;const m=p+2*this.padWidth;this.createNGrams(t,h,l,d,1,m)}}return[l,i]}}function IR(n,t,e,s,a,r,i,l){return new d5(e,s,a,r,i,l).compute(n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f5(n,t,e,s){if(!n.length)return;if(t.length===0){for(let r=0;r<n.length;++r)s.push(n.subarray(r,r+1));return}if(t.length===1){const r=t[0];let i=n.indexOf(r);for(;i!==-1;){const l=n.subarray(0,i);(!e||l.length!==0)&&s.push(l),n=n.subarray(i+1),i=n.indexOf(r)}(!e||n.length!==0)&&s.push(n);return}let a=0;for(let r=0;r<n.length+1;r++)if(r===n.length||t.indexOf(n[r])!==-1){const i=n.subarray(a,r);(!e||i.length!==0)&&s.push(i),a=r+1}}function ER(n,t,e){const s=n.length,a=[];let r=0,i=0;const l=new Array(s);for(let m=0;m<s;++m){const y=a.length;f5(n[m],t,e,a);const b=a.length-y;l[m]=b,r+=b,i=Math.max(i,b)}const u=Ve("int32",r*2),h=new Array(r),d=[s,i];let p=0;for(let m=0;m<s;++m)for(let y=0;y<l[m];++y)u[p*2]=m,u[p*2+1]=y,h[p]=a[p],++p;return[u,h,d]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(n,t){const e=Ve("int32",n.length);for(let s=0;s<n.length;++s)e[s]=Qk(n[s]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RR=Xe((n,t)=>n-t),p5=sS((n,t,e,s)=>({real:n-e,imag:t-s})),lS=dn(ec,RR,p5),m5={kernelName:ec,backendName:"cpu",kernelFunc:lS};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(n,t){const e=new Array(n.rank);for(let a=0;a<e.length;a++)e[a]=n.shape[a]*t[a];const s=Wt(e,n.dtype);for(let a=0;a<s.values.length;++a){const r=s.indexToLoc(a),i=new Array(n.rank);for(let u=0;u<i.length;u++)i[u]=r[u]%n.shape[u];const l=n.locToIndex(i);s.values[a]=n.values[l]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $h=(n,t)=>{const e=t.value-n.value;return e===0?n.index-t.index:e};function OR(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const l=s-e+1,u=t-e+1,h=Math.log(l),d=.5*Math.exp(2*h/3),p=.5*Math.sqrt(h*d*(l-d)/l)*Math.sign(u-l/2),m=Math.max(e,Math.floor(t-u*d/l+p)),y=Math.min(s,Math.floor(t+(l-u)*d/l+p));OR(n,t,m,y)}const a=n[t];let r=e,i=s;for($r(n,e,t),$h(n[s],a)>0&&$r(n,e,s);r<i;){for($r(n,r,i),r++,i--;$h(n[r],a)<0;)r=r+1;for(;$h(n[i],a)>0;)i=i-1}$h(n[e],a)===0?$r(n,e,i):(i=i+1,$r(n,i,s)),i<=t&&(e=i+1),t<=i&&(s=i-1)}}function _R(n,t,e,s,a){const r=t[t.length-1],[i,l]=[n.length/r,r],u=bn(e,i*s),h=bn("int32",i*s);for(let p=0;p<i;p++){const m=p*l,y=n.subarray(m,m+l);let b=new Array(y.length);y.forEach((T,$)=>b[$]={value:T,index:$}),s<b.length&&(OR(b,s),b=b.slice(0,s)),a&&b.sort($h);const v=p*s,w=u.subarray(v,v+s),S=h.subarray(v,v+s);for(let T=0;T<s;T++)w[T]=b[T].value,S[T]=b[T].index}const d=t.slice();return d[d.length-1]=s,[Wt(d,e,u),Wt(d,"int32",h)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(n,t,e,s){const a=Kt(t,e)[0],r=[1,e[0],1];for(let b=0;b<a;b++)r[0]*=e[b];r[1]=e[a];for(let b=a+1;b<e.length;b++)r[2]*=e[b];const i=new Map,l=new Int32Array(e[a]),u=new tn(r,s,n),h=[],d=r[0]===1&&r[2]===1;for(let b=0;b<e[a];b++){let v;if(d)v=n[b].toString();else{const S=[];for(let T=0;T<r[0];T++)for(let $=0;$<r[2];$++)S.push(u.get(T,b,$));v=S.join(",")}const w=i.get(v);if(w!=null)l[b]=w;else{const S=i.size;i.set(v,S),l[b]=S,h.push(b)}}const p=r.slice();p[1]=i.size;const m=new tn(p,s);h.forEach((b,v)=>{for(let w=0;w<r[0];w++)for(let S=0;S<r[2];S++)m.set(u.get(w,b,S),w,v,S)});const y=e.slice();return y[a]=p[1],{outputValues:m.values,outputShape:y,indices:l}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5=Object.freeze(Object.defineProperty({__proto__:null,addImpl:GA,bincountImpl:aS,bincountReduceImpl:HA,bitwiseAndImpl:jA,castImpl:WA,ceilImpl:qA,concatImpl:KA,equalImpl:XA,expImpl:ZA,expm1Impl:JA,floorDivImpl:eR,floorImpl:tR,gatherNdImpl:nR,gatherV2Impl:sR,greaterEqualImpl:rR,greaterImpl:aR,lessEqualImpl:oR,lessImpl:iR,linSpaceImpl:lR,logImpl:uR,maxImpl:cR,maximumImpl:hR,minimumImpl:dR,multiplyImpl:rS,negImpl:fR,notEqualImpl:pR,prodImpl:mR,raggedGatherImpl:gR,raggedRangeImpl:yR,raggedTensorToTensorImpl:bR,rangeImpl:xR,rsqrtImpl:vR,scatterImpl:$o,sigmoidImpl:n5,simpleAbsImpl:UA,sliceImpl:SR,sparseFillEmptyRowsImpl:NR,sparseReshapeImpl:TR,sparseSegmentReductionImpl:oS,sqrtImpl:r5,squaredDifferenceImpl:CR,staticRegexReplaceImpl:$R,stridedSliceImpl:kR,stringNGramsImpl:IR,stringSplitImpl:ER,stringToHashBucketFastImpl:AR,subImpl:RR,tileImpl:DR,topKImpl:_R,transposeImpl:iS,uniqueImpl:FR},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:y5,bincountImpl:LR,bincountReduceImpl:b5,bitwiseAndImpl:x5,castImpl:v5,ceilImpl:w5,concatImpl:S5,equalImpl:N5,expImpl:T5,expm1Impl:C5,floorImpl:$5,gatherNdImpl:k5,gatherV2Impl:I5,greaterImpl:E5,greaterEqualImpl:A5,lessImpl:R5,lessEqualImpl:D5,linSpaceImpl:O5,logImpl:_5,maxImpl:F5,maximumImpl:L5,minimumImpl:z5,multiplyImpl:M5,negImpl:B5,notEqualImpl:V5,prodImpl:P5,raggedGatherImpl:U5,raggedRangeImpl:W5,raggedTensorToTensorImpl:G5,rangeImpl:H5,rsqrtImpl:j5,scatterImpl:q5,sigmoidImpl:K5,simpleAbsImpl:zR,sliceImpl:X5,sparseFillEmptyRowsImpl:Y5,sparseReshapeImpl:Z5,sparseSegmentReductionImpl:MR,sqrtImpl:Q5,staticRegexReplaceImpl:J5,stridedSliceImpl:t8,stringNGramsImpl:e8,stringSplitImpl:n8,stringToHashBucketFastImpl:s8,subImpl:a8,tileImpl:r8,topKImpl:i8,transposeImpl:uS,uniqueImpl:o8}=g5;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BR(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function Kn(n,t){return t===1?[n]:BR(n,t)}function l8(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u8{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Bn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=Kn("rc",this.rank),s=xe(this.rank),a=this.getOutOfBoundsCondition(e),r=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){let r=`${s===0?"r":"rp1"}, ${a===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)r=`${t[t.length-1-i]},`+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${a};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VR{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Bn(this.outputShape.length);let s="";for(let a=0;a<4;a++){let r="thisRC = rc;";a%2===1&&(r+="thisRC.z += 1;"),a>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${c8(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?eS():tS(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function c8(n,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?Y6(["r","c","d"],"inputShape"):el(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h8{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const a=D$(e,s),r=O$(t,a,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=R$(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const u=this.freeTextures[r].pop();return this.usedTextures[r].push(u),u}let l;return a===kn.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):a===kn.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):a===kn.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):a===kn.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):a===kn.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(l),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),l}releaseTexture(t,e,s,a){if(this.freeTextures==null)return;const r=D$(s,a),i=O$(e,r,a);i in this.freeTextures||(this.freeTextures[i]=[]);const l=R$(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),u=at().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=l):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=l),this.numUsedTextures--;const h=this.usedTextures[i],d=h&&h.indexOf(t);if(d==null||d<0)throw new Error("Cannot release a texture that was never provided by this texture manager");h[d]=h[h.length-1],h.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function d8(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function R$(n,t,e,s,a){const r=f8(t,s);let i;if(a){const[u,h]=fc(n[0],n[1]);i=u*h}else{const[u,h]=Cf(n[0],n[1]);i=u*h}const l=d8(e,r);return i*l}function f8(n,t){switch(n){case kn.PACKED_2X2_FLOAT32:return VA(t);case kn.PACKED_2X2_FLOAT16:return PA(t);case kn.UNPACKED_FLOAT32:return zA(t);case kn.UNPACKED_FLOAT16:return MA(t);case kn.PACKED_4X1_UNSIGNED_BYTE:return BA(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function p8(n){return at().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?kn.PACKED_2X2_FLOAT32:kn.UNPACKED_FLOAT32:n?kn.PACKED_2X2_FLOAT16:kn.UNPACKED_FLOAT16}function D$(n,t){if(n===Fs.UPLOAD)return kn.PACKED_2X2_FLOAT32;if(n===Fs.RENDER||n==null)return p8(t);if(n===Fs.DOWNLOAD||n===Fs.PIXELS)return kn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function O$(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ha{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Bn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const da="if (isnan(x)) return x;",m8="return x;",_$="return abs(x);",g8="return (x >= 0.0) ? x : (exp(x) - 1.0);",y8=da+`
  return (x < 0.0) ? 0.0 : x;
`,b8=da+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,fi="return x;",x8="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8="return x;",w8=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,S8=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,N8=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,T8="return 1.0 / (1.0 + exp(-1.0 * x));";class mi{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Bn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C8{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Bn(this.outputShape.length);const e=t.length,s=Kn("rc",e),a=xe(e),r=l8(e,s),i=s.slice(-2),l=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${l}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8=zy,k8=1e-7,I8=1e-4,rm={};function E8(n){return n in rm||(rm[n]={}),rm[n]}const A8=at().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),R8=600;function D8(){return at().global.screen==null?1024:at().global.screen.height*at().global.screen.width*window.devicePixelRatio*R8/1024/1024}class tb extends tg{nextDataId(){return tb.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!at().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Gx)e=t;else{const s=Ea(at().getNumber("WEBGL_VERSION"),t);e=new Gx(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Ea(at().getNumber("WEBGL_VERSION"));e=new Gx(s),this.binaryCache=E8(at().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new h8(this.gpgpu),this.numMBBeforeWarning=D8(),this.texData=new Y1(this,Na())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,s,a,r,i){const l=this.makeTensorInfo(e,s),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:t,texShape:[a,r]},u.texShape=[a,r];const h=sm(e),d=new $$(h,!1,i),p=this.runWebGLProgram(d,[l],s,[[a,r]]);return p.shape=e,u.texture=null,this.disposeIntermediateTensorInfo(l),p.dataId}write(t,e,s){if((at().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||at().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:e,dtype:s,values:t,usage:Fs.UPLOAD,refCount:1}),a}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,a,r){if(at().getBool("DEBUG")&&this.checkNumericalProblems(e),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:a,values:e,usage:Fs.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:a,complexTensorInfos:r,slice:i,shape:l,isPacked:u}=e;if(i!=null){let m;u?m=new mi(l,fi):m=new Ha(l,fi);const y=this.runWebGLProgram(m,[{dataId:t,shape:l,dtype:a}],a),b=this.readSync(y.dataId);return this.disposeIntermediateTensorInfo(y),b}if(s!=null)return this.convertAndCacheOnCPU(t);if(a==="string")return s;const h=this.activeTimers!=null;let d;h&&(d=Gn());let p;if(a==="complex64"){const m=this.readSync(r.real.dataId),y=this.readSync(r.imag.dataId);p=Dr(m,y)}else p=this.getValuesFromTexture(t);return h&&(this.downloadWaitMs+=Gn()-d),this.convertAndCacheOnCPU(t,p)}async read(t){if(this.pendingRead.has(t)){const b=this.pendingRead.get(t);return new Promise(v=>b.push(v))}const e=this.texData.get(t),{values:s,shape:a,slice:r,dtype:i,complexTensorInfos:l,isPacked:u}=e;if(r!=null){let b;u?b=new mi(a,fi):b=new Ha(a,fi);const v=this.runWebGLProgram(b,[{dataId:t,shape:a,dtype:i}],i),w=this.read(v.dataId);return this.disposeIntermediateTensorInfo(v),w}if(s!=null)return this.convertAndCacheOnCPU(t);if(at().getBool("DEBUG")&&!at().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&at().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let h=null,d;if(i!=="complex64"&&at().get("WEBGL_BUFFER_SUPPORTED")){d=this.decode(t);const b=this.texData.get(d.dataId);h=this.gpgpu.createBufferFromTexture(b.texture.texture,...tm(a))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(i==="complex64"){const b=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),v=b[0],w=b[1];p=Dr(v,w)}else if(h==null)p=this.getValuesFromTexture(t);else{const b=ht(a);p=this.gpgpu.downloadFloat32MatrixFromBuffer(h,b)}if(d!=null&&this.disposeIntermediateTensorInfo(d),h!=null){const b=this.gpgpu.gl;$t(b,()=>b.deleteBuffer(h))}const m=this.convertAndCacheOnCPU(t,p),y=this.pendingRead.get(t);return this.pendingRead.delete(t),y.forEach(b=>b(m)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Na().removeDataId(t,this),this.pendingDeletes--),m}readToGPU(t,e={}){const s=this.texData.get(t),{values:a,shape:r,slice:i,dtype:l,isPacked:u,texture:h}=s;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let y;u?y=new mi(r,fi):y=new Ha(r,fi);const b=this.runWebGLProgram(y,[{dataId:t,shape:r,dtype:l}],l),v=this.readToGPU(b,e);return this.disposeIntermediateTensorInfo(b),v}if(h==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const d=this.decode(t,e.customTexShape),p=Na().makeTensorFromTensorInfo(d),m=this.texData.get(d.dataId);return Object.assign({tensorRef:p},m.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(a=>Er(a));return Wt(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Wt(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!N6(s))throw at().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:a}=this.texData.get(t),r=ht(e);if(at().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const m=this.decode(t),y=this.texData.get(m.dataId),b=this.gpgpu.downloadMatrixFromPackedTexture(y.texture.texture,...tm(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(m),b}const i=at().getBool("WEBGL_PACK")&&a===!0,l=i?sm(e):e,u=i?new Bj(l):new Mj(l),h=this.runWebGLProgram(u,[{shape:l,dtype:s,dataId:t}],"float32"),d=this.texData.get(h.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(d.texture.texture,d.texShape[0],d.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(h),p}timerAvailable(){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,s=[];let a=!1;this.programTimersStack==null?(this.programTimersStack=s,a=!0):this.activeTimers.push(s),this.activeTimers=s,t();const r=Za(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=Za(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=e,a&&(this.programTimersStack=null);const l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(r);l.kernelMs=_k(u),l.getExtraProfileInfo=()=>u.map((h,d)=>({name:i[d],ms:h})).map(h=>`${h.name}: ${h.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Gn(),endMs:null}}endTimer(t){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Gn(),t)}async getQueryTime(t){if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:a,usage:r,isPacked:i,slice:l}=this.texData.get(t),u=l&&l.origDataId||t,h=this.dataRefCount.get(u);h>1?this.dataRefCount.set(u,h-1):(this.dataRefCount.delete(u),e!=null&&(this.numBytesInGPU-=this.computeBytes(a,s),this.textureManager.releaseTexture(e,a,r,i)));const d=this.texData.get(t);d.texture=null,d.texShape=null,d.isPacked=!1,d.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=A8){return at().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&ht(s.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Ds("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return $8(t.shape,e)}packedUnaryOp(t,e,s){const a=new mi(t.shape,e),r=this.compileAndRun(a,[t],s);return Na().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const a=zR(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,a)}if(at().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,_$,t.dtype);const e=new Ha(t.shape,_$),s=this.compileAndRun(e,[t]);return Na().makeTensorFromTensorInfo(s)}makeTensorInfo(t,e,s){let a;if(e==="string"&&s!=null&&s.length>0&&Ga(s[0])){const r=s.map(i=>ja(i));a=this.write(r,t,e)}else a=this.write(s,t,e);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:e}}makeOutput(t,e,s){return Na().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,s),this)}unpackTensor(t){const e=new C8(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new u8(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const s=[ru(t.shape),...iu(t.shape)],a={dtype:t.dtype,shape:s,dataId:t.dataId},r=[ru(e),...iu(e)],i=new VR(r,s),l=!0,u=[s],h=this.runWebGLProgram(i,[a],t.dtype,u,l);return{dataId:h.dataId,shape:e,dtype:h.dtype}}decode(t,e){const s=this.texData.get(t),{isPacked:a,shape:r,dtype:i}=s;if(e!=null){const m=ht(r),y=e[0]*e[1]*4;D(m<=y,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const l=sm(r);let u;a?u=new zj(l):u=new Lj(l);const h=!0,d=[e??tm(l)],p=this.runWebGLProgram(u,[{shape:l,dtype:i,dataId:t}],i,d,h,e);return{dtype:i,shape:r,dataId:p.dataId}}runWebGLProgram(t,e,s,a,r=!1,i){const l=this.makeTensorInfo(t.outputShape,s),u=this.texData.get(l.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===Wh.DENSE){const S=i??tm(t.outputShape);u.texShape=S.map(T=>T*2)}if(t.outTexUsage!=null&&(u.usage=t.outTexUsage),ht(l.shape)===0)return u.values=bn(l.dtype,0),l;const h=[],d=e.map(S=>{if(S.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let T=this.texData.get(S.dataId);if(T.texture==null){if(!t.packedInputs&&ht(S.shape)<=at().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:S.shape,texData:null,isUniform:!0,uniformValues:T.values};t.packedInputs&&(T.isPacked=!0,T.shape=S.shape)}if(this.uploadToGPU(S.dataId),!!T.isPacked!=!!t.packedInputs)S=T.isPacked?this.unpackTensor(S):this.packTensor(S),h.push(S),T=this.texData.get(S.dataId);else if(T.isPacked&&!Fm(T.shape,S.shape)){const $=S,C=S.shape;S.shape=T.shape,S=this.packedReshape(S,C),h.push(S),T=this.texData.get(S.dataId),$.shape=C}return{shape:S.shape,texData:T,isUniform:!1}});this.uploadToGPU(l.dataId);const p={shape:l.shape,texData:u,isUniform:!1},m=Fj(t,d,p),y=this.getAndSaveBinary(m,()=>Oj(this.gpgpu,t,d,p)),b=this.activeTimers!=null;let v;b&&(v=this.startTimer()),at().get("ENGINE_COMPILE_ONLY")||_j(this.gpgpu,y,d,p,a),h.forEach(S=>this.disposeIntermediateTensorInfo(S)),b&&(v=this.endTimer(v),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(v)}));const w=at().getNumber("WEBGL_FLUSH_THRESHOLD");if(w>0){const S=Gn();S-this.lastGlFlushTime>w&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=S)}if(!at().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&r===!1){const S=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),S}return l}compileAndRun(t,e,s,a,r=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,a,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(at().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=nt(()=>{if(!at().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=at().getBool("DEBUG");at().set("DEBUG",!1);const e=this.abs(_t(1e-8)).dataSync()[0];if(at().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?k8:I8}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:a,values:r,texture:i,usage:l,isPacked:u}=e;if(i!=null)return;const h=this.activeTimers!=null;let d;h&&(d=Gn());let p=e.texShape;if(p==null&&(p=P6(s,u),e.texShape=p),r!=null){const m=sm(s);let y,b=p[1],v=p[0];const w=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(u||!w)&&([b,v]=fc(p[0],p[1])),u?y=new Pj(m,w):y=new $$(m,w);const S=w?[v,b]:p,T=this.makeTensorInfo(S,a),$=this.texData.get(T.dataId);w?$.usage=Fs.PIXELS:$.usage=Fs.UPLOAD,$.texShape=S,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(T.dataId),b,v,r);const C=[[v,b]],R=this.runWebGLProgram(y,[T],a,C,!0),L=this.texData.get(R.dataId);e.texShape=L.texShape,e.isPacked=L.isPacked,e.usage=L.usage,at().get("ENGINE_COMPILE_ONLY")?this.disposeData(R.dataId):(e.texture=L.texture,e.values=null,this.texData.delete(R.dataId)),this.disposeIntermediateTensorInfo(T),h&&(this.uploadWaitMs+=Gn()-d)}else{const m=this.acquireTexture(p,l,a,u);e.texture=m}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:a}=s;return e!=null&&(s.values=O8(e,a)),s.values}acquireTexture(t,e,s,a){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,a)}computeBytes(t,e){return t[0]*t[1]*Rh(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const s=new Promise(a=>{try{this.checkCompletion_(e),a(!0)}catch(r){throw r}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await Dw(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(RA(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:s,infLoc:a,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}=LA(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=s,t.infLoc=a,t.nanLoc=r,t.outShapeLocation=i,t.outShapeStridesLocation=l,t.outTexShapeLocation=u}}createTensorFromGPUData(t,e,s){t.channels=t.channels||"RGBA";const{texture:a,height:r,width:i,channels:l}=t,u=Na().backend;if(!u.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const h=u.writeTexture(a,e,s,r,i,l);return Na().makeTensorFromDataId(h,e,s,u)}}tb.nextDataId=0;function O8(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */iv()&&lv("webgl",()=>new tb,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cS=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Ho{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=Pt(e,s),this.enableShapeUniforms=Bn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sl=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class bc{constructor(t,e,s,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Pt(e,s);const r=this.outputShape.length;this.enableShapeUniforms=Bn(r);let i="";if(a)if(r===0||ht(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${xe(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=Kn("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${u[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${u[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ws(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const _8={kernelName:Ru,backendName:"webgl",kernelFunc:ws};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wi(n){const{inputs:t,backend:e}=n,{real:s,imag:a}=t,r=e.makeTensorInfo(s.shape,"complex64"),i=e.texData.get(r.dataId),l=ws({inputs:{x:s},backend:e}),u=ws({inputs:{x:a},backend:e});return i.complexTensorInfos={real:l,imag:u},r}const F8={kernelName:ug,backendName:"webgl",kernelFunc:Wi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PR="return (a < 0.) ? b * a : a;",UR=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function L8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{alpha:r}=s,i=e.makeTensorInfo([],"float32",Fr(r,"float32")),l=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bc(UR,a.shape,i.shape):new Ho(PR,a.shape,i.shape),u=e.runWebGLProgram(l,[a,i],"float32");return e.disposeIntermediateTensorInfo(i),u}const z8={kernelName:xd,backendName:"webgl",kernelFunc:L8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WR="return (a < 0.) ? b * a : a;",GR=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function M8(n){const{inputs:t,backend:e}=n,{x:s,alpha:a}=t,r=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bc(GR,s.shape,a.shape):new Ho(WR,s.shape,a.shape);return e.runWebGLProgram(r,[s,a],"float32")}const B8={kernelName:Md,backendName:"webgl",kernelFunc:M8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xc="if (isnan(x)) return x;";function oe({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:a,backend:r})=>{const{x:i}=a,l=r,u=s||i.dtype;if(l.shouldExecuteOnCPU([i])&&e!=null){const p=l.texData.get(i.dataId),m=e(p.values,u);return l.makeTensorInfo(i.shape,u,m)}const h=at().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let d;return h?d=new mi(i.shape,t):d=new Ha(i.shape,n),l.runWebGLProgram(d,[i],u)}}function _n({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:r}){return({inputs:i,backend:l})=>{const{a:u,b:h}=i,d=l;if(s&&u.dtype==="complex64"){const b=d.texData.get(u.dataId),v=d.texData.get(h.dataId),[w,S]=[[b.complexTensorInfos.real,v.complexTensorInfos.real],[b.complexTensorInfos.imag,v.complexTensorInfos.imag]].map($=>{const[C,I]=$,R={dataId:C.dataId,dtype:C.dtype,shape:u.shape},L={dataId:I.dataId,dtype:I.dtype,shape:h.shape},M=new Ho(n,u.shape,h.shape);return d.runWebGLProgram(M,[R,L],rs(C.dtype,I.dtype))}),T=Wi({inputs:{real:w,imag:S},backend:d});return d.disposeIntermediateTensorInfo(w),d.disposeIntermediateTensorInfo(S),T}const p=r||rs(u.dtype,h.dtype);if((u.dtype==="string"||h.dtype==="string"||d.shouldExecuteOnCPU([u,h]))&&a!=null){const b=d.texData.get(u.dataId).values,v=d.texData.get(h.dataId).values,w=u.dtype==="string"?Or(b):b,S=u.dtype==="string"?Or(v):v,[T,$]=a(u.shape,h.shape,w,S,p),C=d.makeTensorInfo($,p),I=d.texData.get(C.dataId);return I.values=T,C}const m=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let y;return m?y=new bc(t,u.shape,h.shape,e):y=new Ho(n,u.shape,h.shape),d.runWebGLProgram(y,[u,h],p)}}function Gh(n,t=!1){if(n==="linear")return t?v8:m8;if(n==="relu")return t?S8:y8;if(n==="elu")return t?w8:g8;if(n==="relu6")return t?N8:b8;if(n==="prelu")return t?GR:WR;if(n==="leakyrelu")return t?UR:PR;if(n==="sigmoid")return t?T8:x8;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HR{constructor(t,e,s,a=!1,r=!1,i=!1,l=null,u=!1,h=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Bn(this.outputShape.length);const d=a?t[1]:t[2],p=Math.ceil(d/2),m=a?"i * 2, rc.y":"rc.y, i * 2",y=r?"rc.z, i * 2":"i * 2, rc.z",b=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],v=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let w="",S="";l&&(u?w=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${l}
        }`:h?w=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${l}
        }`:w=`vec4 activation(vec4 x) {
          ${l}
        }`,S="result = activation(result);");const T=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),h&&this.variableNames.push("leakyreluAlpha");let $="rc.x",C="rc.x";t[0]<e[0]?$=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(C=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${w}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${$};
        int batchB = ${C};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${y});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${b[0]} * ${v[0]});
          result += (${b[1]} * ${v[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${T}

        ${S}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F$={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class L${constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Pt(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z$="return a * b;";function hS(n){const{inputs:t,backend:e}=n,{a:s,b:a}=t,r=rs(s.dtype,a.dtype);if(s.dtype==="complex64"){const l=e.texData.get(s.dataId),u=e.texData.get(a.dataId),h=new L$(F$.REAL,s.shape,a.shape),d=new L$(F$.IMAG,s.shape,a.shape),p=[{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:s.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:a.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:a.shape}],m=e.runWebGLProgram(h,p,"float32"),y=e.runWebGLProgram(d,p,"float32"),b=Wi({inputs:{real:m,imag:y},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),b}if(e.shouldExecuteOnCPU([s,a])){const l=e.texData.get(s.dataId),u=e.texData.get(a.dataId),[h,d]=M5(s.shape,a.shape,l.values,u.values,r),p=e.makeTensorInfo(d,r),m=e.texData.get(p.dataId);return m.values=h,p}let i;return at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new bc(z$,s.shape,a.shape):i=new Ho(z$,s.shape,a.shape),e.runWebGLProgram(i,[s,a],r)}const V8={kernelName:Vu,backendName:"webgl",kernelFunc:hS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P8(n,t,e){const s=[ru(n.shape),...iu(n.shape)],a={dtype:n.dtype,shape:s,dataId:n.dataId},r=[ru(t),...iu(t)],i=new VR(r,s),l=!0,u=[s],h=e.runWebGLProgram(i,[a],n.dtype,u,l);return{dataId:h.dataId,shape:t,dtype:h.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{shape:r}=s,i=e,l=ht(a.shape),u=Q1(r,l),h=ht(u);D(l===h,()=>`The new shape (${u}) has ${h} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const d=i.texData.get(a.dataId);return d.isPacked&&!Fm(a.shape,u)&&!(d.texture!==null&&Fm(d.shape,u))?P8(a,u,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype})}const U8={kernelName:Vd,backendName:"webgl",kernelFunc:Nt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M${constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=t;this.outputShape=[a,i];const l=Math.floor(s/4)*4,u=s%4;let h="sumValue += dot(values, ones);";if(e!=null){const p=1/e;h=`sumValue += dot(values * ${Oo(p)?p.toPrecision(2):p}, ones);`}let d="";r%s>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${h}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${h}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${h}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W8{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=t;this.outputShape=[a,i];let l="0.0",u="";e==="prod"?l="1.0":e==="min"?(l="1.0 / 1e-20",u="min"):e==="max"&&(l="-1.0 / 1e-20",u="max");let h=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?h="sumValue":e==="prod"?h="prodValue":e==="all"?h="allValue":e==="any"&&(h="anyValue");const d=Math.floor(s/4)*4,p=s%4;let m=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,y="vec4";e==="all"?(l="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,y="bvec4"):e==="any"&&(l="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,y="bvec4");let b="";r%s>0&&(b=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${l};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${b}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${l});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${d};
        if (${p===1}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${h});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G8(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=Xy(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function al(n,t,e,s){const a=G8(n.shape);let r=n;for(let i=0;i<a.length;i++){const{inSize:l,windowSize:u,outSize:h}=a[i];let d,p;e==="mean"?d=i===0?new M$({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h},l):new M$({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h}):d=new W8({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h},e),p=r,r=s.runWebGLProgram(d,[r],t),p.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(p)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H8{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[e[i]];this.outputShape=s,this.rank=s.length;const a=xe(this.rank),r=j8(e);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function j8(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let a=0;a<n.length;a++)s[n[a]]=e[a];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q8{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let d=0;d<s.length;d++)s[d]=t[e[d]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=xe(this.rank),r=BR("rc",this.rank),i=new Array(this.rank);for(let d=0;d<e.length;d++)i[e[d]]=r[d];const l=`vec2(${i.slice(-2).join()})`,u=`++${r[this.rank-1]} < ${s[this.rank-1]}`,h=`getChannel(getA(${i.join()}), ${l})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${h};
      if(${u}) {
        result[1] = ${h};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${h};
        if(${u}) {
          result[3] = ${h};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eb(n,t,e){const s=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new q8(n.shape,t):new H8(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K8(n,t,e,s){const a=t,r=n.shape.length,i=Kt(a,n.shape);let l=i;const u=ze(l,r),h=u!=null;let d=n;h&&(d=eb(n,u,s),l=Ke(l.length,r)),Dn("sum",l,r);const[p,m]=wn(d.shape,l);let y=p;e&&(y=qe(p,i));const b=ht(m),w=ht(n.shape)/b,S=Nt({inputs:{x:d},attrs:{shape:[w,b]},backend:s}),T=uy(n.dtype),$=al(S,T,"sum",s),C=Nt({inputs:{x:$},attrs:{shape:y},backend:s});return s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo($),h&&s.disposeIntermediateTensorInfo(d),C}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nb(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;return K8(a,r,i,e)}const X8={kernelName:jd,backendName:"webgl",kernelFunc:nb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xn(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{perm:r}=s,i=e,l=a.shape.length,u=new Array(l);for(let d=0;d<u.length;d++)u[d]=a.shape[r[d]];let h;if(i.shouldExecuteOnCPU([a])){const p=i.texData.get(a.dataId).values,m=uS(p,a.shape,a.dtype,r,u);h=i.makeTensorInfo(u,a.dtype);const y=i.texData.get(h.dataId);y.values=m}else h=eb(a,r,i);return h}const Y8={kernelName:Io,backendName:"webgl",kernelFunc:Xn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jR=1e3;function Mm({a:n,b:t,transposeA:e,transposeB:s,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:l=0,activation:u=null}){const h=n.shape.length,d=t.shape.length,p=e?n.shape[h-2]:n.shape[h-1],m=s?t.shape[d-1]:t.shape[d-2],y=e?n.shape[h-1]:n.shape[h-2],b=s?t.shape[d-2]:t.shape[d-1],v=n.shape.slice(0,-2),w=t.shape.slice(0,-2),S=ht(v),T=ht(w),C=Pt(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([y,b]);D(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const I=e?[S,p,y]:[S,y,p],R=s?[T,b,m]:[T,m,b],L=Nt({inputs:{x:n},backend:a,attrs:{shape:I}}),M=Nt({inputs:{x:t},backend:a,attrs:{shape:R}}),O=[L,M],_=Math.max(S,T),A=e?L.shape[1]:L.shape[2],G=r!=null,X=i!=null,tt=u==="leakyrelu",Q=u!=null?Gh(u,!0):null,U=G||X||tt||Q!=null;let et;if((y===1||b===1)&&A>jR&&U===!1){let rt=L,B=M;e&&(rt=Xn({inputs:{x:L},backend:a,attrs:{perm:[0,2,1]}}),O.push(rt)),s&&(B=Xn({inputs:{x:M},backend:a,attrs:{perm:[0,2,1]}}),O.push(B));const q=b!==1,lt=b===1;let ot=rt;q&&(ot=Nt({inputs:{x:rt},backend:a,attrs:{shape:[_,A,1]}}),O.push(ot));const ut=b===1?2:1;let mt=B;lt&&(mt=Nt({inputs:{x:B},backend:a,attrs:{shape:[_,1,A]}}),O.push(mt));const bt=hS({inputs:{a:ot,b:mt},backend:a});et=nb({inputs:{x:bt},backend:a,attrs:{axis:ut,keepDims:!0}}),O.push(bt)}else{const rt=rs(n.dtype,t.dtype),B=new HR(I,R,[_,y,b],e,s,G,Q,X,tt),q=[L,M];if(r!=null&&q.push(r),X&&q.push(i),tt){const lt=a.makeTensorInfo([],"float32",Fr(l,"float32"));q.push(lt),O.push(lt)}et=a.runWebGLProgram(B,q,rt)}const Y=Nt({inputs:{x:et},backend:a,attrs:{shape:C}});O.push(et);for(const rt of O)a.disposeIntermediateTensorInfo(rt);return Y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z8(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r,bias:i,preluActivationWeights:l}=t,{transposeA:u,transposeB:h,activation:d,leakyreluAlpha:p}=s;return Mm({a,b:r,transposeA:u,transposeB:h,backend:e,bias:i,preluActivationWeights:l,leakyreluAlpha:p,activation:d})}const Q8={kernelName:Dh,backendName:"webgl",kernelFunc:Z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B$="return abs(x);";function J8(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=e.texData.get(s.dataId),i=zR(r.values);return e.makeTensorInfo(s.shape,s.dtype,i)}let a;return at().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new mi(s.shape,B$):a=new Ha(s.shape,B$),e.runWebGLProgram(a,[s],s.dtype)}const tK={kernelName:Zh,backendName:"webgl",kernelFunc:J8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eK=da+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,nK=oe({opSnippet:eK}),sK={kernelName:hu,backendName:"webgl",kernelFunc:nK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aK=da+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,rK=oe({opSnippet:aK}),iK={kernelName:du,backendName:"webgl",kernelFunc:rK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V$="return a + b;",oK=_n({opSnippet:V$,packedOpSnippet:V$,supportsComplex:!0,cpuKernelImpl:y5}),lK={kernelName:Yo,backendName:"webgl",kernelFunc:oK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uK{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cK{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wm(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return ws({inputs:{x:s[0]},backend:e});if(s.length>at().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(s.length/2),h=wm({inputs:s.slice(0,u),backend:e}),d=wm({inputs:s.slice(u),backend:e});return wm({inputs:[h,d],backend:e})}const a=s.map(u=>u.dtype).reduce((u,h)=>rs(u,h)),r=s.map(u=>u.shape),l=at().getBool("WEBGL_PACK")?new cK(s[0].shape,r):new uK(s[0].shape,r);return e.runWebGLProgram(l,s,a)}const hK={kernelName:Qh,backendName:"webgl",kernelFunc:wm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=Kt(r,a.shape);let h=u;const d=ze(h,l);let p=a;d!=null&&(p=Xn({inputs:{x:a},backend:e,attrs:{perm:d}}),h=Ke(h.length,l)),Dn("all",h,l);const[m,y]=wn(p.shape,h),b=ht(y),v=Nt({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),w=al(v,v.dtype,"all",e);let S;if(i){const T=qe(m,u);S=Nt({inputs:{x:w},backend:e,attrs:{shape:T}})}else S=Nt({inputs:{x:w},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),d!=null&&e.disposeIntermediateTensorInfo(p),S}const fK={kernelName:sg,backendName:"webgl",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=Kt(r,a.shape);let h=u;const d=ze(h,l);let p=a;d!=null&&(p=Xn({inputs:{x:a},backend:e,attrs:{perm:d}}),h=Ke(h.length,l)),Dn("any",h,l);const[m,y]=wn(p.shape,h),b=ht(y),v=Nt({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),w=al(v,v.dtype,"any",e);let S;if(i){const T=qe(m,u);S=Nt({inputs:{x:w},backend:e,attrs:{shape:T}})}else S=Nt({inputs:{x:w},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),d!=null&&e.disposeIntermediateTensorInfo(p),S}const mK={kernelName:ag,backendName:"webgl",kernelFunc:pK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gK{constructor(t,e,s){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:i}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const l=e==="max"?">":"<",u=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${l} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yK{constructor(t,e,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,D(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=t[t.length-1],i=Math.ceil(r/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),a||this.variableNames.push("bestIndicesA");const l=this.outputShape,u=l.length,h=xe(u),d=Kn("coords",u);let p,m;if(i===1){m=u+1;const M=xe(m);p=`
        ${M} sourceLocR = ${M}(${d.join()}, 0);
        ++${d[u-1]};
        ${M} sourceLocG = ${M}(${d.join()}, 0);
        ++${d[u-2]};
        ${M} sourceLocA = ${M}(${d.join()}, 0);
        --${d[u-1]};
        ${M} sourceLocB = ${M}(${d.join()}, 0);
        --${d[u-2]};`}else m=u,p=`
        ${h} sourceLocR = coords;
        ++${d[u-1]};
        ${h} sourceLocG = coords;
        ++${d[u-2]};
        ${h} sourceLocA = coords;
        --${d[u-1]};
        ${h} sourceLocB = coords;
        --${d[u-2]};`;const y=["x","y","z","w","u","v"].slice(0,m),b="."+y[m-1],v=y.map(M=>"int "+M),w=Kn("sourceLocR",m-1).concat("inIdx.r"),S=Kn("sourceLocG",m-1).concat("inIdx.g"),T=Kn("sourceLocB",m-1).concat("inIdx.b"),$=Kn("sourceLocA",m-1).concat("inIdx.a"),C=s==="max"?"greaterThan":"lessThan",I=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${S.join()}),
                             getBestIndicesAChannel(${T.join()}),
                             getBestIndicesAChannel(${$.join()})));`,R=`vec4(
            getAChannel(${w.join()}),
            hasNextCol ? getAChannel(${S.join()}) : 0.,
            hasNextRow ? getAChannel(${T.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${$.join()}) : 0.)`,L=a?"":`
      float getBestIndicesAChannel(${v.join()}) {
        return getChannel(getBestIndicesA(${y.join()}),
                                          vec2(${y.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${v.join()}) {
        return getChannel(getA(${y.join()}),
                               vec2(${y.slice(-2).join()}));
      }
      ${L}
      void main() {
        ${h} coords = getOutputCoords();
        bool hasNextCol = ${d[u-1]} < ${l[u-1]-1};
        bool hasNextRow = ${d[u-2]} < ${l[u-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${b}, sourceLocG${b},
          sourceLocB${b}, sourceLocA${b}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${R};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${R};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${C}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n,t,e,s=null){let a=t.shape[0],r=t.shape[1];s!=null&&(a=s.shape[0],r=s.shape[1]);const i=Xy(r),l={windowSize:i,inSize:r,batchSize:a,outSize:Math.ceil(r/i)},u=new gK(l,e,s==null),h=[t];s!=null&&h.push(s);const d=n.runWebGLProgram(u,h,"int32");if(d.shape[1]===1)return d;const p=qR(n,t,e,d);return n.disposeIntermediateTensorInfo(d),p}function KR(n,t,e,s=null){const a=s!=null?s.shape:t.shape,r=a[a.length-1],i=Xy(r),l=new yK(a,i,e,s==null),u=s==null?[t]:[t,s],h=n.runWebGLProgram(l,u,"int32");if(h.shape.length===t.shape.length){const d=KR(n,t,e,h);return n.disposeIntermediateTensorInfo(h),d}return h}function XR(n,t,e,s){const a=[e];if(Dn("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!at().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const r=[],i=n.texData.get(t.dataId),l=i!==null&&i.isPacked;let u=t;l&&(u=n.unpackTensor(t),r.push(u));const[h,d]=wn(u.shape,a),p=ht(d),m=Nt({inputs:{x:u},backend:n,attrs:{shape:[-1,p]}});r.push(m);const y=qR(n,m,s);r.push(y);const b=Nt({inputs:{x:y},backend:n,attrs:{shape:h}});return r.forEach(v=>n.disposeIntermediateTensorInfo(v)),b}return KR(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;let i=Kt(r,a.shape);const l=ze(i,a.shape.length);let u=a;const h=[];l!=null&&(u=Xn({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=Ke(i.length,u.shape.length)),Dn("argMax",[i[0]],u.shape.length);const d=XR(e,u,i[0],"max");return h.forEach(p=>e.disposeIntermediateTensorInfo(p)),d}const xK={kernelName:Jh,backendName:"webgl",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;let i=Kt(r,a.shape);const l=ze(i,a.shape.length);let u=a;const h=[];l!=null&&(u=Xn({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=Ke(i.length,u.shape.length)),Dn("argMin",[i[0]],u.shape.length);const d=XR(e,u,i[0],"min");return h.forEach(p=>e.disposeIntermediateTensorInfo(p)),d}const wK={kernelName:td,backendName:"webgl",kernelFunc:vK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SK=da+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,NK=oe({opSnippet:SK}),TK={kernelName:fu,backendName:"webgl",kernelFunc:NK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK=da+"return log(x + sqrt(x * x + 1.0));",$K=oe({opSnippet:CK}),kK={kernelName:pu,backendName:"webgl",kernelFunc:$K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK=da+`
  return atan(x);
`,EK=oe({opSnippet:IK}),AK={kernelName:mu,backendName:"webgl",kernelFunc:EK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK=cS+`
  return atan(a, b);
`,DK=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+sl+`
  return result;
`,OK=_n({opSnippet:RK,packedOpSnippet:DK}),_K={kernelName:yu,backendName:"webgl",kernelFunc:OK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FK=da+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,LK=oe({opSnippet:FK}),zK={kernelName:gu,backendName:"webgl",kernelFunc:LK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hh{constructor(t,e,s,a=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideHeight,u=t.strideWidth,h=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterHeight,m=t.effectiveFilterWidth,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const v=e==="avg",w=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,S=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let T="0.0";if(v||(T="-1.0 / 1e-20"),s){const M=">=";this.userCode=`
        const ivec2 strides = ivec2(${l}, ${u});
        const ivec2 pads = ivec2(${y}, ${b});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${d}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${M} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?r?w:S:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const $="max";let C=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(C="avgValue / max(count, 1.0)");const I=Math.floor(i/4)*4,R=i%4,L=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${$}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${y}, ${b});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${h}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${d};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              getValue(batch, xR, xC + 3 * ${d}, d)
            );

            ${L}
          }

          int xC = xCCorner + ${I};
          if (${R===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${L}
          } else if (${R===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              initializationValue,
              initializationValue
            );

            ${L}
          } else if (${R===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              initializationValue
            );

            ${L}
          }
        }
        setOutput(${C});
      }
    `}}class dS{constructor(t,e,s,a=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideDepth,u=t.strideHeight,h=t.strideWidth,d=t.dilationDepth,p=t.dilationHeight,m=t.dilationWidth,y=t.effectiveFilterDepth,b=t.effectiveFilterHeight,v=t.effectiveFilterWidth,w=t.padInfo.front,S=t.padInfo.top,T=t.padInfo.left;this.outputShape=t.outShape;const $=e==="avg";let C="0.0";if($||(C="-1.0 / 1e-20"),s){const _=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${l}, ${u}, ${h});
        const ivec3 pads = ivec3(${w}, ${S}, ${T});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${y};
              wD += ${d}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${b};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${v};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${_} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${b} * ${v} +
                      wR * ${v} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let R=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(R="avgValue / max(count, 1.0)");const L=Math.floor(i/4)*4,M=i%4,O=`
      if (${$}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${l}, ${u}, ${h});
      const ivec3 pads = ivec3(${w}, ${S}, ${T});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${y};
            wD += ${d}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${b};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${L}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${O}
            }

            int xC = xCCorner + ${L};
            if (${M===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${M===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${M===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${O}
            }
          }
        }
        setOutput(${R});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;$f(a,"avgPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;D(Rn(i,h),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const d=ha(a.shape,r,i,h,l,u);if(d.filterWidth===1&&d.filterHeight===1&&Zt(d.inShape,d.outShape))return ws({inputs:{x:a},backend:e});const p=new Hh(d,"avg",!1);return e.runWebGLProgram(p,[a],"float32")}const BK={kernelName:ed,backendName:"webgl",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s,d=[1,1,1],p=Lr(a.shape,r,i,d,l,u,h),m=new dS(p,"avg",!1);return e.runWebGLProgram(m,[a],"float32")}const PK={kernelName:nd,backendName:"webgl",kernelFunc:VK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UK{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=u-1-t.padInfo.top,p=h-1-t.padInfo.left,m=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${d}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${h};
            wC+= ${l}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class WK{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,a=t.filterWidth,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,m=t.effectiveFilterHeight,y=t.effectiveFilterWidth,b=p-1-t.padInfo.front,v=m-1-t.padInfo.top,w=y-1-t.padInfo.left,S=1/(e*s*a);this.userCode=`
      const ivec3 pads = ivec3(${b}, ${v}, ${w});
      const float avgMultiplier = float(${S});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${h}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${y};
                wC += ${d}) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GK(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r,{filterSize:l,strides:u,pad:h,dimRoundingMode:d}=s,p=[1,1,1],m=Lr(i.shape,l,u,p,h,d),y=new WK(m);return e.runWebGLProgram(y,[a],i.dtype)}const HK={kernelName:ig,backendName:"webgl",kernelFunc:GK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r;$f([a,r],"avgPoolGrad");const{filterSize:l,strides:u,pad:h}=s,d=ha(i.shape,l,u,1,h),p=new UK(d);return e.runWebGLProgram(p,[a],i.dtype)}const qK={kernelName:rg,backendName:"webgl",kernelFunc:jK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KK(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r}=t,{transposeA:i,transposeB:l}=s;return Mm({a,b:r,transposeA:i,transposeB:l,backend:e})}const XK={kernelName:sd,backendName:"webgl",kernelFunc:KK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YK{constructor(t,e,s,a,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Pt(t,e),Pt(t,s);let l="0.0";a!=null&&(Pt(t,a),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="1.0";r!=null&&(Pt(t,r),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${l};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZK{constructor(t,e,s,a,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Pt(t,e),Pt(t,s);let l="vec4(0.0)";a!=null&&(Pt(t,a),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="vec4(1.0)";r!=null&&(Pt(t,r),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${l};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK=({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:a,variance:r,offset:i,scale:l}=n;D(a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(l==null||a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=e;u==null&&(u=.001);const h=[s,a,r];let d=null;i!=null&&(d=i.shape,h.push(i));let p=null;l!=null&&(p=l.shape,h.push(l));const m=at().getBool("WEBGL_PACK_NORMALIZATION")?new ZK(s.shape,a.shape,r.shape,d,p,u):new YK(s.shape,a.shape,r.shape,d,p,u);return t.runWebGLProgram(m,h,h[0].dtype)},JK={kernelName:gd,backendName:"webgl",kernelFunc:QK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tX{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=xe(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=eX(this.rank);let a;const r=t.map((i,l)=>`sourceLoc.${F1[l]} = start[${l}] + coords.${F1[l]};`);a=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${a}
        setOutput(getSource(${s}));
      }
    `}}const F1=["x","y","z","w","u","v"];function eX(n){if(n===1)return"sourceLoc";if(n<=6)return F1.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nX{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=xe(this.rank),s=Kn("coords",this.rank),a=Kn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,i=`getChannel(getSource(${a.join()}), ${r})`,l=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${i};
        --${a[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${i};
        }
      }
    `,h=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((d,p)=>`start[${p}]`).join()});`:t.map((d,p)=>`${a[p]} = ${s[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${h}
        vec4 result = vec4(0.);
        ${l}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sX(n,t,e,s){const a=s.texData.get(n.dataId),r=s.makeTensorInfo(e,n.dtype),i=s.texData.get(r.dataId);Object.assign(i,a),i.refCount=1,i.shape=e,i.dtype=n.dtype;let l=Aw(t,Lt(n.shape));a.slice&&(l+=a.slice.flatOffset),i.slice={flatOffset:l,origDataId:a.slice&&a.slice.origDataId||n.dataId};const u=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,u+1),r}function vc(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,size:i}=s,[l,u]=Ky(a,r,i);if(kw(a,l,u),ht(u)===0)return e.makeTensorInfo(u,a.dtype,[]);if(e.shouldExecuteOnCPU([a])||a.dtype==="string"){const p=e.texData.get(a.dataId),m=X5(p.values,l,u,a.shape,a.dtype);return e.makeTensorInfo(u,a.dtype,m)}const{isPacked:h}=e.texData.get(a.dataId),d=Ew(a.shape,l,u);if(h||!d){const p=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nX(u):new tX(u),m=[l];return e.runWebGLProgram(p,[a],a.dtype,m)}return e.uploadToGPU(a.dataId),sX(a,l,u,e)}const aX={kernelName:Hd,backendName:"webgl",kernelFunc:vc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rX=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,crops:i}=s;D(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=r.reduce((T,$)=>T*$),u=wf(a.shape,r,l),h=Sf(u.length,r.length),d=Nf(a.shape,r,l),p=Lw(i,r.length),m=zw(d,i,r.length),y=[],b=Nt({inputs:{x:a},backend:e,attrs:{shape:u}}),v=Xn({inputs:{x:b},backend:e,attrs:{perm:h}}),w=Nt({inputs:{x:v},backend:e,attrs:{shape:d}}),S=vc({inputs:{x:w},backend:e,attrs:{begin:p,size:m}});return y.push(b),y.push(v),y.push(w),y.forEach(T=>e.disposeIntermediateTensorInfo(T)),S},iX={kernelName:ad,backendName:"webgl",kernelFunc:rX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i}=s,l=e.readSync(a.dataId),u=e.readSync(r.dataId),h=LR(l,u,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,h)}const lX={kernelName:og,backendName:"webgl",kernelFunc:oX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uX=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,cX=`
  return float(int(a.r) & int(b.r));
`;function hX(n){const{inputs:t,backend:e}=n,{a:s,b:a}=t,r=at().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=at().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([s,a])||i===1){const u=e.texData.get(s.dataId).values,h=e.texData.get(a.dataId).values,[d,p]=x5(s.shape,a.shape,u,h,s.dtype),m=e.makeTensorInfo(p,s.dtype),y=e.texData.get(m.dataId);return y.values=d,m}let l;return r?l=new bc(uX,s.shape,a.shape,!1):l=new Ho(cX,s.shape,a.shape),e.runWebGLProgram(l,[s,a],s.dtype)}const dX={kernelName:rd,backendName:"webgl",kernelFunc:hX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fX(n){const{inputs:t,backend:e}=n,{s0:s,s1:a}=t,r=e.readSync(s.dataId),i=e.readSync(a.dataId),l=Pt(Array.from(r),Array.from(i));return e.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const pX={kernelName:lg,backendName:"webgl",kernelFunc:fX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mX="return float(a != b);",YR=_n({opSnippet:mX,cpuKernelImpl:V5,dtype:"bool"}),gX={kernelName:Od,backendName:"webgl",kernelFunc:YR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function If(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.texData.get(s.dataId);return ws({inputs:{x:a.complexTensorInfos.real},backend:e})}const yX={kernelName:Ug,backendName:"webgl",kernelFunc:If};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bX="return float(int(x));";function xX(n,t){const e=new Ha(n.shape,bX),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L1(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return ws({inputs:{x:a},backend:e});const i=Je(a.shape),l=L1({inputs:{x:a},backend:e,attrs:{dtype:"float32"}}),u=Wi({inputs:{real:l,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(l),u}if(a.dtype==="complex64"){const i=If({inputs:{input:a},backend:e}),l=L1({inputs:{x:i},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(i),l}if(!J1(a.dtype,r)){const i=ws({inputs:{x:a},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(e.shouldExecuteOnCPU([a])){const i=e.texData.get(a.dataId).values,[l,u,h]=v5(i,a.shape,a.dtype,r);return e.makeTensorInfo(l,u,h)}if(r==="int32")return xX(a,e);if(r==="bool"){const i=e.makeTensorInfo([],"bool",bn("bool",1)),u=YR({inputs:{a,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${r}`)}const vX={kernelName:bu,backendName:"webgl",kernelFunc:L1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P$="return ceil(x);",wX=oe({opSnippet:P$,packedOpSnippet:P$,cpuKernelImpl:w5}),SX={kernelName:xu,backendName:"webgl",kernelFunc:wX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NX{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TX{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{clipValueMin:r,clipValueMax:i}=s;let l;at().getBool("WEBGL_PACK_CLIP")?l=new TX(a.shape):l=new NX(a.shape);const u=[[r],[i]];return e.runWebGLProgram(l,[a],a.dtype,u)}const $X={kernelName:vu,backendName:"webgl",kernelFunc:CX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kX{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function IX(n){const{inputs:t,backend:e}=n,{x:s}=t,a=e.texData.get(s.dataId),r=new kX(s.shape),i=[U$(s,a.complexTensorInfos.real),U$(s,a.complexTensorInfos.imag)];return e.runWebGLProgram(r,i,i[0].dtype)}const EX={kernelName:id,backendName:"webgl",kernelFunc:IX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AX{constructor(t){this.outputShape=[],this.outputShape=Ka(t,1),this.variableNames=t.map((i,l)=>`T${l}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){const l=e[i-1];s.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${l}));`)}const a=e.length,r=e[e.length-1];s.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RX{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ka(t,e);const s=this.outputShape,a=s.length,r=xe(a),i=Kn("coords",a),l=["x","y","z","w","u","v"].slice(0,a);this.variableNames=t.map((v,w)=>`T${w}`);const u=new Array(t.length-1);u[0]=t[0][e];for(let v=1;v<u.length;v++)u[v]=u[v-1]+t[v][e];const h=l[e],d=l.slice(-2),p=l.join();let m=`if (${h} < ${u[0]}) {
        return getChannel(
            getT0(${p}), vec2(${d.join()}));
        }`;for(let v=1;v<u.length;v++){const w=u[v-1];m+=`
        if (${h} < ${u[v]}  && ${h} >= ${u[v-1]}) {
          return getChannel(
            getT${v}(${im(l,h,w)}),
            vec2(${im(d,h,w)}));
        }`}const y=u.length,b=u[u.length-1];m+=`
        return getChannel(
          getT${y}(${im(l,h,b)}),
          vec2(${im(d,h,b)}));`,this.userCode=`
      float getValue(${l.map(v=>"int "+v)}) {
        ${m}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[a-1]} = ${i[a-1]} + 1;
        if (${i[a-1]} < ${s[a-1]}) {
          result.g = getValue(${i});
        }

        ${i[a-2]} = ${i[a-2]} + 1;
        if (${i[a-2]} < ${s[a-2]}) {
          result.a = getValue(${i});
        }

        ${i[a-1]} = ${i[a-1]} - 1;
        if (${i[a-2]} < ${s[a-2]} &&
            ${i[a-1]} < ${s[a-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function im(n,t,e){const s=n.indexOf(t);return n.map((r,i)=>i===s?`${r} - ${e}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.texData.get(s.dataId);return ws({inputs:{x:a.complexTensorInfos.imag},backend:e})}const DX={kernelName:Ig,backendName:"webgl",kernelFunc:sb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kh(n,t,e){const s=n[0].dtype;if(s==="complex64"){const y=n.map(T=>If({inputs:{input:T},backend:e})),b=n.map(T=>sb({inputs:{input:T},backend:e})),v=kh(y,t,e),w=kh(b,t,e),S=Wi({inputs:{real:v,imag:w},backend:e});return y.forEach(T=>e.disposeIntermediateTensorInfo(T)),b.forEach(T=>e.disposeIntermediateTensorInfo(T)),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),S}let a=e.shouldExecuteOnCPU(n);if(s==="string"&&(a=!0),a){const y=n.map(C=>{const R=[-1,ht(C.shape.slice(t))];return Nt({inputs:{x:C},backend:e,attrs:{shape:R}})}),b=y.map(C=>({vals:e.readSync(C.dataId),shape:C.shape})),v=Ka(y.map(C=>C.shape),1),w=y[0].shape[0]===1,S=S5(b,v,s,w),T=Ka(n.map(C=>C.shape),t),$=e.makeTensorInfo(T,s,S);return y.forEach(C=>e.disposeIntermediateTensorInfo(C)),$}const r=n.filter(y=>ht(y.shape)>0),i=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const y=i?new Ha(n[0].shape,fi):new mi(n[0].shape,fi);return e.runWebGLProgram(y,n,s)}const l=at().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>l){const y=[];for(let v=0;v<r.length;v+=l){const w=r.slice(v,v+l);y.push(kh(w,t,e))}const b=kh(y,t,e);for(const v of y)e.disposeIntermediateTensorInfo(v);return b}if(i){const y=new RX(r.map(b=>b.shape),t);return e.runWebGLProgram(y,r,s)}const{tensors2D:u,outShape:h}=OX(r,t,e),d=new AX(u.map(y=>y.shape)),p=e.runWebGLProgram(d,u,s);u.forEach(y=>e.disposeIntermediateTensorInfo(y));const m=Nt({inputs:{x:p},attrs:{shape:h},backend:e});return e.disposeIntermediateTensorInfo(p),m}function OX(n,t,e){const s=Ka(n.map(r=>r.shape),t);return{tensors2D:n.map(r=>Nt({inputs:{x:r},attrs:{shape:[-1,ht(r.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s,r=Kt(a,t[0].shape)[0],i=t.map(h=>h.shape);Ow(i,r);const l=Ka(t.map(h=>h.shape),r);if(ht(l)===0)return e.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter(h=>ht(h.shape)>0);return u.length===1?ws({inputs:{x:u[0]},backend:e}):kh(u,r,e)}const _X={kernelName:od,backendName:"webgl",kernelFunc:ZR};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QR{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,h=t.strideWidth,d=t.dilationHeight,p=t.dilationWidth,m=t.filterHeight,y=t.filterWidth,b=Math.floor(t.inChannels/4)*4,v=t.inChannels%4,w=t.dataFormat==="channelsLast",S=w?1:2,T=w?2:3,$=w?3:1;let C="",I="";s&&(a?C=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?C=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:C=`
          float activation(float x) {
            ${s}
          }
        `,I="result = activation(result);");const R=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${C}

      const ivec2 strides = ivec2(${u}, ${h});
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${$}];

        ivec2 xRCCorner =
            ivec2(coords[${S}], coords[${T}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${d};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${y}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${b}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${w}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${v===1}) {

              if (${w}) {
                dotProd +=
                    getX(batch, xR, xC, ${b}) *
                    getW(wR, wC, ${b}, d2);
              } else {
                dotProd +=
                    getX(batch, ${b}, xR, xC) *
                    getW(wR, wC, ${b}, d2);
              }

            } else if (${v===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${b}, d2),
                getW(wR, wC, ${b} + 1, d2)
              );

              if (${w}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${b}),
                  getX(batch, xR, xC, ${b} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${b}, xR, xC),
                  getX(batch, ${b} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${v===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${b}, d2),
                getW(wR, wC, ${b} + 1, d2),
                getW(wR, wC, ${b} + 2, d2)
              );

              if (${w}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${b}),
                  getX(batch, xR, xC, ${b} + 1),
                  getX(batch, xR, xC, ${b} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${b}, xR, xC),
                  getX(batch, ${b} + 1, xR, xC),
                  getX(batch, ${b} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${R}
        ${I}
        setOutput(result);
      }
    `}}class FX{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,a=t.padInfo.left,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,p=t.filterDepth,m=t.filterHeight,y=t.filterWidth,b=Math.floor(t.inChannels/4)*4,v=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${l});
      const ivec3 pads = ivec3(${e}, ${s}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${h};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${y}; wC++) {
              int xC = xCCorner + wC * ${d};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${b}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${v===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${b}) *
                  getW(wF, wR, wC, ${b}, d2);
              } else if (${v===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${b}),
                  getX(batch, xF, xR, xC, ${b} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${b}, d2),
                  getW(wF, wR, wC, ${b} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${v===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${b}),
                  getX(batch, xF, xR, xC, ${b} + 1),
                  getX(batch, xF, xR, xC, ${b} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${b}, d2),
                  getW(wF, wR, wC, ${b} + 1, d2),
                  getW(wF, wR, wC, ${b} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JR{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Bn(this.outputShape.length);const i=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=d;let m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let w=0;w<d;w++)m+=`
           vec4 xTexelC${w*2};
           int xTexelC${w*2}Ready;
           vec4 xTexelC${w*2+1};
           int xTexelC${w*2+1}Ready;
           vec4 xC${w};`;m+=`
     for (int r = 0; r < ${h}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let w=0;w<d;w++)m+=`
           xTexelC${w*2} = vec4(0.0);
           xTexelC${w*2}Ready = 0;
           xTexelC${w*2+1} = vec4(0.0);
           xTexelC${w*2+1}Ready = 0;
           xC${w} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let w=0;w<(p+1)/2;w++){const S=w*2;if(m+=`
           xC = xCCorner + ${S*u};
           `,l===1){if(S<d&&(i%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }
               `,u===1&&S>0?m+=`
                 xC${S} = vec4(xTexelC${S-2}.zw, xTexelC${S}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${S} = vec4(previous.zw, xTexelC${S}.xy);
                   } else {
                     xC${S} = vec4(0.0, 0.0, xTexelC${S}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 xC${S} = xTexelC${S};
                 `,S+1<d)){const T=i%2===0?eg(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${T};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                     xTexelC${S+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${S+1}.zw = vec2(0.0);
                     }
                     xTexelC${S+1}Ready = 1;
                   }
                   `,u>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${S+1} = vec4(previous.zw, xTexelC${S+1}.xy);
                     } else {
                      xC${S+1} = vec4(0.0, 0.0, xTexelC${S+1}.xy);
                     }
                     `:m+=`
                     xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.xy);
                     `):T===1?m+=`
                     xC${S+1} = xTexelC${S};
                     `:m+=`
                     xCOffset = xC + ${T};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                       xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${S+1}.zw = vec2(0.0);
                       }
                       xTexelC${S+1}Ready = 1;
                     }

                     xC${S+1} = xTexelC${S+1};
                     `}}else S<d&&(i%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${S+1}Ready == 0) {
                   xTexelC${S+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${S+1}.zw = vec2(0.0);
                   }
                   xTexelC${S+1}Ready = 1;
                 }

                 xC${S} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
               `,S+1<d&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${S+1} = vec4(xTexelC${S+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                   xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S+1}.zw = vec2(0.);
                   }
                   xTexelC${S+1}Ready = 1;
                 }

                 xC${S} = vec4(
                   xTexelC${S}.xy, xTexelC${S+1}.xy);
               `,S+1<d&&(m+=`
                   xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
                 `)));S<d&&(m+=`
             wTexel = getW(r, ${S}, d1, d2);
             dotProd += xC${S}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${S}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,S+1<d&&(m+=`
               wTexel = getW(r, ${S+1}, d1, d2);
               dotProd += xC${S+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${S+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let y="",b="";s&&(a?y=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?y=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:y=`vec4 activation(vec4 x) {
           ${s}
         }`,b="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${y}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${v}
         ${b}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LX{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Bn(this.outputShape.length);const{dataFormat:s}=e,a=Zn(),r=s==="channelsLast",i=r?1:2,l=r?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let h="";for(let d=0;d<=1;d++)for(let p=0;p<=1;p++)h+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${d};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${l}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${d*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${d*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${h}

        ${a.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bm(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&e===1&&n[0]>1?[n[0],1]:null}function tD({x:n,filter:t,convInfo:e,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:l=null}){const u=n.shape,h=s.texData.get(n.dataId),d=e.inChannels,p=u[0]*u[1]*u[2],m=e.outChannels,y=e.dataFormat==="channelsLast",b=!1,v=!1;let w;const S=[];if(r!=null){const C=Bm(r.shape,y);C!=null&&(r=Nt({inputs:{x:r},backend:s,attrs:{shape:C}}),S.push(r))}if(a!=null){const C=Bm(a.shape,y);C!=null&&(a=Nt({inputs:{x:a},backend:s,attrs:{shape:C}}),S.push(a))}if(!((p===1||m===1)&&d>jR)&&h.isPacked&&y&&h.texture!=null&&u[2]%2!==0&&Zt(h.shape.slice(-3),u.slice(-3))){const C=u[0]*u[1]*(u[2]+1),I={dataId:n.dataId,shape:[1,C,e.inChannels],dtype:n.dtype},R=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,D(Fm(h.shape,I.shape),()=>`packed reshape ${h.shape} to ${I.shape} isn't free`);const L=Nt({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});S.push(L);const M=Mm({a:I,b:L,backend:s,transposeA:b,transposeB:v,bias:a,activation:l,preluActivationWeights:r,leakyreluAlpha:i}),O=s.texData.get(M.dataId);D(O.isPacked,()=>"batchMatMul result is expected to be packed"),h.shape=R,O.shape=e.outShape,w=ws({inputs:{x:M},backend:s}),w.shape=e.outShape,S.push(M)}else{const C=e.outHeight*e.outWidth,I=Nt({inputs:{x:n},backend:s,attrs:{shape:y?[e.batchSize,C,e.inChannels]:[e.batchSize,e.inChannels,C]}}),R=Nt({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),L=Mm({a:y?I:R,b:y?R:I,transposeA:!y,transposeB:v,backend:s,bias:a,activation:l,preluActivationWeights:r,leakyreluAlpha:i});w=Nt({inputs:{x:L},backend:s,attrs:{shape:e.outShape}}),S.push(I),S.push(R),S.push(L)}for(const C of S)s.disposeIntermediateTensorInfo(C);return w}function eD({x:n,filter:t,convInfo:e,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:l=null}){const{filterWidth:u,filterHeight:h,inChannels:d,outWidth:p,outHeight:m,dataFormat:y}=e,b=y==="channelsLast",v=u*h*d,w=m*p,S=[e.batchSize,v,w],T=!0,$=!1,C=[];if(r!=null){const Y=Bm(r.shape,b);Y!=null&&(r=Nt({inputs:{x:r},backend:s,attrs:{shape:Y}}),C.push(r))}if(a!=null){const Y=Bm(a.shape,b);Y!=null&&(a=Nt({inputs:{x:a},backend:s,attrs:{shape:Y}}),C.push(a))}const I=Nt({inputs:{x:t},backend:s,attrs:{shape:[1,v,ht(t.shape)/v]}});C.push(I);const R=new LX(S,e),L=[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],M=s.runWebGLProgram(R,[n],"float32",L),O=Nt({inputs:{x:M},backend:s,attrs:{shape:S}});C.push(M),C.push(O);const _=a!=null,A=r!=null,G=l==="leakyrelu",X=l?Gh(l,!0):null,tt=new HR(b?O.shape:I.shape,b?I.shape:O.shape,b?[e.batchSize,w,e.outChannels]:[e.batchSize,e.outChannels,w],T,$,_,X,A,G),Q=b?[O,I]:[I,O];if(a&&Q.push(a),A&&Q.push(r),G){const Y=s.makeTensorInfo([],"float32",Fr(i,"float32"));Q.push(Y),C.push(Y)}const U=s.runWebGLProgram(tt,Q,"float32"),et=Nt({inputs:{x:U},backend:s,attrs:{shape:e.outShape}});C.push(U);for(const Y of C)s.disposeIntermediateTensorInfo(Y);return et}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}=s,p=zr(u),m=vn(a.shape,r.shape,i,h,l,d,!1,p);let y;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))y=tD({x:a,filter:r,convInfo:m,backend:e});else if(m.strideWidth<=2&&p==="channelsLast"&&at().getBool("WEBGL_EXP_CONV")){const v=new JR(m),w=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];y=e.runWebGLProgram(v,[a,r],"float32",w)}else if(at().getBool("WEBGL_CONV_IM2COL"))y=eD({x:a,filter:r,convInfo:m,backend:e});else{const v=new QR(m);y=e.runWebGLProgram(v,[a,r],"float32")}const b=Nt({inputs:{x:y},backend:e,attrs:{shape:m.outShape}});return e.disposeIntermediateTensorInfo(y),b}const MX={kernelName:ld,backendName:"webgl",kernelFunc:zX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BX{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${a};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class VX{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=t.dataFormat==="channelsLast",l=e-1-t.padInfo.top,u=s-1-t.padInfo.left,h=i?1:2,d=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${h}], coords[${d}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class PX{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,a=t.strideWidth,r=t.padInfo.front,i=t.padInfo.top,l=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${r};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${l};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class UX{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,a=t.filterWidth,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=e-1-t.padInfo.front,h=s-1-t.padInfo.top,d=a-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${h}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,dataFormat:u,dimRoundingMode:h,filterShape:d}=s,p=zr(u),m=vn(a.shape,d,i,1,l,h,!1,p),y=new BX(m);return e.runWebGLProgram(y,[a,r],"float32")}const GX={kernelName:cg,backendName:"webgl",kernelFunc:WX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HX{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=Bn(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth,a=e-1-t.padInfo.top,r=s-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{inputShape:i,strides:l,pad:u,dataFormat:h,dimRoundingMode:d}=s,p=zr(h),m=vn(i,r.shape,l,1,u,d,!1,p);if(at().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){const y=[[m.strideHeight,m.strideWidth]],b=new HX(m);return e.runWebGLProgram(b,[a,r],"float32",y)}else{const y=new VX(m);return e.runWebGLProgram(y,[a,r],"float32")}}const qX={kernelName:ud,backendName:"webgl",kernelFunc:jX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s,h=zi(a.shape,r.shape,i,u,l),d=new FX(h);return e.runWebGLProgram(d,[a,r],"float32")}const XX={kernelName:cd,backendName:"webgl",kernelFunc:KX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,filterShape:u}=s,h=zi(a.shape,u,i,1,l),d=new PX(h);return e.runWebGLProgram(d,[a,r],"float32")}const ZX={kernelName:hg,backendName:"webgl",kernelFunc:YX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{pad:i,strides:l,inputShape:u}=s,h=zi(u,r.shape,l,1,i),d=new UX(h);return e.runWebGLProgram(d,[a,r],"float32")}const JX={kernelName:dg,backendName:"webgl",kernelFunc:QX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7=xc+`
  return cos(x);
`,e7=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${sl}
  return result;
`,n7=oe({opSnippet:t7,packedOpSnippet:e7}),s7={kernelName:wu,backendName:"webgl",kernelFunc:n7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a7=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,r7=oe({opSnippet:a7}),i7={kernelName:Su,backendName:"webgl",kernelFunc:r7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o7{constructor(t,e,s,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,l,u,h]=t,[d]=e,[p,m]=s;this.outputShape=[d,p,m,h];const y=a==="bilinear"?1:0,[b,v]=[`${l-1}.0`,`${u-1}.0`],[w,S,T]=p>1?[`${(l-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${b} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${b}`],[$,C,I]=m>1?[`${(u-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${v} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${v}`];this.userCode=`
      const float height_ratio = float(${w});
      const float width_ratio = float(${$});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${S};
        float width_scale = ${C};

        float in_y = ${T};
        if( in_y < 0.0 || in_y > ${b} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${v} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${y} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7=n=>{const{inputs:t,backend:e,attrs:s}=n,{image:a,boxes:r,boxInd:i}=t,{cropSize:l,method:u,extrapolationValue:h}=s,d=new o7(a.shape,r.shape,l,u,h);return e.runWebGLProgram(d,[a,r,i],"float32")},u7={kernelName:pg,backendName:"webgl",kernelFunc:l7};var jh;(function(n){n.Prod="*",n.Sum="+"})(jh||(jh={}));class W${constructor(t,e,s,a){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===jh.Prod?"1.0":"0.0",l=s?i:`getX(${G$(r,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let h="",d="";s?(h=a?`end != ${u-1}`:"end != 0",d=a?"end + 1":"end - 1"):(h=a?`end + pow2 < ${u}`:"end >= pow2",d=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${xe(r)} coords = getOutputCoords();
        int end = ${H$(r,"coords",this.op)};
        float val = ${l};
        int pow2 = int(pow(2.0, index));
        if (${h}) {
          int idx = ${d};
          ${H$(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${G$(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function G$(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function H$(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(n,t,e,s,a,r){const i=t.shape.length,l=ze([s],i);let u=t;l!=null&&(u=Xn({inputs:{x:t},backend:e,attrs:{perm:l}}));const h=Ke(1,i)[0];if(h!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const d=u.shape[h];let p=ws({inputs:{x:u},backend:e});for(let m=0;m<=Math.ceil(Math.log2(d))-1;m++){const y=new W$(n,u.shape,!1,r),b=[[m]],v=p;p=e.runWebGLProgram(y,[p],p.dtype,b),e.disposeIntermediateTensorInfo(v)}if(a){const m=new W$(n,u.shape,a,r),y=p;p=e.runWebGLProgram(m,[p],p.dtype),e.disposeIntermediateTensorInfo(y)}if(l!=null){const m=Mi(l),y=Xn({inputs:{x:p},backend:e,attrs:{perm:m}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(u),y}return p}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;return nD(jh.Prod,a,e,r,i,l)}const h7={kernelName:fg,backendName:"webgl",kernelFunc:c7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;return nD(jh.Sum,a,e,r,i,l)}const f7={kernelName:hd,backendName:"webgl",kernelFunc:d7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i,binaryOutput:l}=s;if(a.shape.length===1){const u=e.readSync(a.dataId),h=e.readSync(r.dataId),d=LR(u,h,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,d)}else if(a.shape.length===2){const u=e.bufferSync(a),h=e.bufferSync(r),d=b5(u,h,i,l);return e.makeTensorInfo(d.shape,r.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const m7={kernelName:mg,backendName:"webgl",kernelFunc:p7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g7{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockSize:r,dataFormat:i}=s,l=a.shape[0],u=i==="NHWC"?a.shape[1]:a.shape[2],h=i==="NHWC"?a.shape[2]:a.shape[3],d=i==="NHWC"?a.shape[3]:a.shape[1],p=u*r,m=h*r,y=d/(r*r),b=i==="NHWC"?[l,p,m,y]:[l,y,p,m],v=new g7(b,r,i);return e.runWebGLProgram(v,[a],a.dtype)}const b7={kernelName:gg,backendName:"webgl",kernelFunc:y7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sD{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Bn(this.outputShape.length);const i=t.filterHeight,l=t.filterWidth,u=t.outChannels/t.inChannels;let h="",d="";s&&(a?h=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?h=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:h=`
          float activation(float x) {
            ${s}
          }
        `,d="result = activation(result);");const p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${l}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${d}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aD{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Bn(this.outputShape.length);const i=t.outChannels/t.inChannels,l=t.padInfo.left,u=t.strideWidth,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,m=p;let y=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let S=0;S<p;S++)y+=`
          vec4 xTexelC${S*2};
          int xTexelC${S*2}Ready;
          vec4 xTexelC${S*2+1};
          int xTexelC${S*2+1}Ready;
          vec4 xC${S};`;y+=`
    for (int r = 0; r < ${d}; r++) {
      `;for(let S=0;S<p;S++)y+=`
          xTexelC${S*2} = vec4(0.0);
          xTexelC${S*2}Ready = 0;
          xTexelC${S*2+1} = vec4(0.0);
          xTexelC${S*2+1}Ready = 0;
          xC${S} = vec4(0.0);`;y+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let S=0;S<(m+1)/2;S++){const T=S*2;if(y+=`
          xC = xCCorner + ${T*h};
          `,u===1){if(T<p&&(l%2===1?(y+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }
              `,h===1&&T>0?y+=`
                xC${T} = vec4(xTexelC${T-2}.zw, xTexelC${T}.xy);
                `:y+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${T} = vec4(previous.zw, xTexelC${T}.xy);
                  } else {
                    xC${T} = vec4(0.0, 0.0, xTexelC${T}.xy);
                  }
                  `):y+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xC${T} = xTexelC${T};
                `,T+1<p)){const $=l%2===0?eg(h):h;h%2===0&&l%2===1||h%2!==0&&l%2!==1?(y+=`
                  xCOffset = xC + imod(pads[1], 2) + ${$};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                    xTexelC${T+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${T+1}.zw = vec2(0.0);
                    }
                    xTexelC${T+1}Ready = 1;
                  }
                  `,h>1?y+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${T+1} = vec4(previous.zw, xTexelC${T+1}.xy);
                    } else {
                     xC${T+1} = vec4(0.0, 0.0, xTexelC${T+1}.xy);
                    }
                    `:y+=`
                    xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.xy);
                    `):$===1?y+=`
                    xC${T+1} = xTexelC${T};
                    `:y+=`
                    xCOffset = xC + ${$};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                      xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${T+1}.zw = vec2(0.0);
                      }
                      xTexelC${T+1}Ready = 1;
                    }

                    xC${T+1} = xTexelC${T+1};
                    `}}else T<p&&(l%2===1?(y+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.0);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
              `,T+1<p&&(y+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${T+1} = vec4(xTexelC${T+1}.xy, final.xy);
                `)):(y+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(
                  xTexelC${T}.xy, xTexelC${T+1}.xy);
              `,T+1<p&&(y+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
                `)));T<p&&(y+=`
            wTexel = getW(r, ${T}, d1, q);
            dotProd += xC${T} * vec4(wTexel.xz, wTexel.xz);
          `,T+1<p&&(y+=`
              wTexel = getW(r, ${T+1}, d1, q);
              dotProd += xC${T+1} * vec4(wTexel.xz, wTexel.xz);
            `))}y+=`
    }
  `,y+=`
      }
    `;let b="",v="";s&&(a?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`vec4 activation(vec4 x) {
          ${s}
        }`,v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${y}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${w}
        ${v}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u,dimRoundingMode:h}=s;let d=u;d==null&&(d=[1,1]),D(Rn(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=vn(a.shape,r.shape,i,d,l,h,!0);let m;at().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new aD(p):m=new sD(p);const y=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(m,[a,r],"float32",y)}const v7={kernelName:dd,backendName:"webgl",kernelFunc:x7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w7{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${a};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class S7{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=e-1-t.padInfo.top,l=s-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,filterShape:d}=s,p=vn(a.shape,d,i,l,u,h,!0),m=new w7(p);return e.runWebGLProgram(m,[a,r],"float32")}const T7={kernelName:yg,backendName:"webgl",kernelFunc:N7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,inputShape:d}=s,p=vn(d,r.shape,i,l,u,h,!0),m=new S7(p);return e.runWebGLProgram(m,[a,r],"float32")}const $7={kernelName:bg,backendName:"webgl",kernelFunc:C7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k7{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(n){const{inputs:t,backend:e}=n,{x:s}=t,a=[...s.shape,...s.shape],r=ht(s.shape),i=Nt({inputs:{x:s},backend:e,attrs:{shape:[r]}}),l=new k7(r),u=e.runWebGLProgram(l,[i],i.dtype),h=Nt({inputs:{x:u},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),h}const E7={kernelName:xg,backendName:"webgl",kernelFunc:I7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A7{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:a,strideHeight:r,strideWidth:i,filterHeight:l,filterWidth:u,dilationHeight:h,dilationWidth:d}=t,{top:p,left:m}=a;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${l}; h++) {
          int hIn = hBeg + h * ${h};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${d};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s,h=nf(a.shape,r.shape,i,l,"NHWC",u);let d;const p=new A7(h);d=e.runWebGLProgram(p,[a,r],"float32");const m=Nt({inputs:{x:d},backend:e,attrs:{shape:h.outShape}});return e.disposeIntermediateTensorInfo(d),m}const D7={kernelName:fd,backendName:"webgl",kernelFunc:R7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O7(n){const{inputs:t,backend:e,attrs:s}=n,{equation:a}=s,r=t,{allDims:i,summedDims:l,idDims:u}=Hw(a,r.length);qw(i.length,u,r);const{path:h,steps:d}=Kw(l,u),p=d.length;let m=null,y=i.length;const b=[];for(let v=0;v<p;++v){for(const w of d[v]){const{permutationIndices:S,expandDims:T}=jw(y,u[w]);let $;Xw(S)?$=r[w]:($=Xn({inputs:{x:r[w]},backend:e,attrs:{perm:S}}),b.push($));const C=$.shape.slice();for(let I=0;I<T.length;++I)C.splice(T[I],0,1);Zt($.shape,C)||($=Nt({inputs:{x:$},backend:e,attrs:{shape:C}}),b.push($)),m===null?m=$:(m=hS({inputs:{a:$,b:m},backend:e}),b.push(m))}v<p-1&&(h[v]>=0&&(m=nb({inputs:{x:m},backend:e,attrs:{axis:h[v]-(i.length-y),keepDims:!1}}),b.push(m)),y--)}for(const v of b)v!==m&&e.disposeIntermediateTensorInfo(v);return m}const _7={kernelName:wg,backendName:"webgl",kernelFunc:O7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F7="return (x >= 0.0) ? x : (exp(x) - 1.0);",L7=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,z7=oe({opSnippet:F7,packedOpSnippet:L7}),M7={kernelName:Tu,backendName:"webgl",kernelFunc:z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B7="return (b >= 0.0) ? a : a * (b + 1.0);",V7=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,P7=n=>{const{inputs:t,backend:e}=n,{dy:s,y:a}=t,r=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bc(V7,s.shape,a.shape):new Ho(B7,s.shape,a.shape);return e.runWebGLProgram(r,[s,a],s.dtype)},U7={kernelName:Sg,backendName:"webgl",kernelFunc:P7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W7=`
  return vec4(equal(a, b));
`,G7="return float(a == b);",H7=_n({opSnippet:G7,packedOpSnippet:W7,dtype:"bool",cpuKernelImpl:N5}),j7={kernelName:pd,backendName:"webgl",kernelFunc:H7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q7=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Mw};
  float a1 = ${Bw};
  float a2 = ${Vw};
  float a3 = ${Pw};
  float a4 = ${Uw};
  float a5 = ${Ww};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,K7=oe({opSnippet:q7}),X7={kernelName:Cu,backendName:"webgl",kernelFunc:K7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y7=xc+`
  return exp(x);
`,Z7=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rD=oe({opSnippet:Y7,packedOpSnippet:Z7,cpuKernelImpl:T5,dtype:"float32"}),Q7={kernelName:$u,backendName:"webgl",kernelFunc:rD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z1(n){const{inputs:t,attrs:e,backend:s}=n,{dim:a}=e,{input:r}=t,i=r.shape.length,l=r.shape.slice();let u=a;return a<0&&(D(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),l.splice(u,0,1),Nt({inputs:{x:r},backend:s,attrs:{shape:l}})}const J7={kernelName:md,backendName:"webgl",kernelFunc:z1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j$="return exp(x) - 1.0;",t9=oe({opSnippet:j$,packedOpSnippet:j$,cpuKernelImpl:C5}),e9={kernelName:ku,backendName:"webgl",kernelFunc:t9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q${constructor(t,e,s){this.variableNames=["real","imag"];const a=e[1];this.outputShape=e;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${a}.0`:"1.0";let l;if(t==="real")l="return real * expR - imag * expI;";else if(t==="imag")l="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${l}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n,t,e){const s=e.texData.get(n.dataId),a=ht(n.shape),r=n.shape[n.shape.length-1],i=a/r,l=Nt({inputs:{x:n},backend:e,attrs:{shape:[i,r]}}),u=l.shape,h=new q$("real",u,t),d=new q$("imag",u,t),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],m=e.runWebGLProgram(h,p,"float32"),y=e.runWebGLProgram(d,p,"float32"),b=Wi({inputs:{real:m,imag:y},backend:e});e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y);const v=Nt({inputs:{x:b},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(b),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n9(n){const{inputs:t,backend:e}=n,{input:s}=t;return iD(s,!1,e)}const s9={kernelName:Ng,backendName:"webgl",kernelFunc:n9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a9{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ef(n){const{backend:t,attrs:e}=n,{shape:s,value:a}=e;let{dtype:r}=e;if(r=r||Ko(a),r==="string"){const i=Ve(r,ht(s));return i.fill(a),t.makeTensorInfo(s,r,i)}else{const i=new a9(s,a),l=[[a]];return t.runWebGLProgram(i,[],r,l)}}const r9={kernelName:Tg,backendName:"webgl",kernelFunc:Ef};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i9{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o9={kernelName:Cg,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,a=new i9(e.shape);return s.runWebGLProgram(a,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K$="return floor(x);",l9=oe({opSnippet:K$,packedOpSnippet:K$,cpuKernelImpl:$5}),u9={kernelName:Iu,backendName:"webgl",kernelFunc:l9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c9=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,h9=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,d9=_n({opSnippet:c9,packedOpSnippet:h9,dtype:"int32"}),f9={kernelName:Eu,backendName:"webgl",kernelFunc:d9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p9{constructor(t){this.variableNames=["A"];const e=Zn(),[s,a]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m9{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Zn(),[s,a]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g9={kernelName:Im,backendName:"webgl",kernelFunc:y9};let Wl,Hx=at().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function y9(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:a}=t;const{numChannels:r}=s,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,l=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[u,h]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[h,u],p=[h,u,r];if(l||i){const v=at().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Wl==null||v!==Hx)&&(Hx=v,Wl=document.createElement("canvas").getContext("2d",{willReadFrequently:Hx})),Wl.canvas.width=u,Wl.canvas.height=h,Wl.drawImage(a,0,0,u,h),a=Wl.canvas}const m=e.makeTensorInfo(d,"int32");e.texData.get(m.dataId).usage=Fs.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(m.dataId),a);const y=at().getBool("WEBGL_PACK")?new m9(p):new p9(p),b=e.runWebGLProgram(y,[m],"int32");return e.disposeData(m.dataId),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:d,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s,v=zr(d),w=vn(a.shape,r.shape,u,p,h,m,!1,v);let S;const T=[],$=i!=null,C=l!=null,I=y==="leakyrelu",R=()=>{const M=[a,r],O=(_,A)=>{if(A==="NCHW"&&_.shape.length===1&&_.shape[0]!==1){const G=Nt({inputs:{x:_},backend:e,attrs:{shape:[_.shape[0],1,1]}});return T.push(G),G}return _};if($&&M.push(O(i,d)),C&&M.push(O(l,d)),I){const _=e.makeTensorInfo([],"float32",Fr(b,"float32"));M.push(_),T.push(_)}return M};if(w.filterHeight===1&&w.filterWidth===1&&w.dilationHeight===1&&w.dilationWidth===1&&w.strideHeight===1&&w.strideWidth===1&&(w.padInfo.type==="SAME"||w.padInfo.type==="VALID"))S=tD({x:a,filter:r,convInfo:w,backend:e,bias:i,activation:y,preluActivationWeights:l,leakyreluAlpha:b});else if(w.strideWidth<=2&&v==="channelsLast"&&at().getBool("WEBGL_EXP_CONV")){const M=y?Gh(y,!0):null,O=new JR(w,$,M,C,I),_=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],A=R();S=e.runWebGLProgram(O,A,"float32",_)}else if(at().getBool("WEBGL_CONV_IM2COL"))S=eD({x:a,filter:r,convInfo:w,backend:e,bias:i,activation:y,preluActivationWeights:l,leakyreluAlpha:b});else{const M=y?Gh(y,!1):null,O=new QR(w,$,M,C,I),_=R();S=e.runWebGLProgram(O,_,"float32")}const L=Nt({inputs:{x:S},backend:e,attrs:{shape:w.outShape}});return T.push(S),T.forEach(M=>e.disposeIntermediateTensorInfo(M)),L}const x9={kernelName:Oh,backendName:"webgl",kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v9(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dilations:d,dimRoundingMode:p,activation:m,leakyreluAlpha:y}=s,b=[];let v=d;v==null&&(v=[1,1]),D(Rn(u,v),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${v}'`);const w=vn(a.shape,r.shape,u,v,h,p,!0),S=at().getBool("WEBGL_PACK_DEPTHWISECONV")&&w.strideWidth<=2&&w.outChannels/w.inChannels===1,T=m?Gh(m,S):null,$=[a,r],C=i!=null,I=l!=null,R=m==="leakyrelu";if(C&&$.push(i),I&&$.push(l),R){const _=e.makeTensorInfo([],"float32",Fr(y,"float32"));$.push(_),b.push(_)}let L;S?L=new aD(w,C,T,I,R):L=new sD(w,C,T,I,R);const M=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],O=e.runWebGLProgram(L,$,"float32",M);return b.forEach(_=>e.disposeIntermediateTensorInfo(_)),O}const w9={kernelName:_h,backendName:"webgl",kernelFunc:v9};class S9{constructor(t,e,s,a){this.sliceDim=t,this.strides=e,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=s;const r=xe(s.length);let i=`
    int index;`;for(let l=0;l<this.sliceDim;l++)i+=`
          index = round(getIndices(coords[0], ${l}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[l]};
          flattenIndex += index * ${this.strides[l]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(n){const{inputs:t,backend:e}=n,{params:s,indices:a}=t,r=a.shape,i=r[r.length-1],l=ht(s.shape),[u,h,d,p]=qy(s,a),m=Nt({inputs:{x:a},backend:e,attrs:{shape:[h,i]}}),y=Nt({inputs:{x:s},backend:e,attrs:{shape:[ht(s.shape)/d,d]}});if(e.shouldExecuteOnCPU([s,a])||s.dtype==="string"){const S=e.readSync(a.dataId),T=e.bufferSync(s),$=k5(S,T,s.dtype,h,i,d,p,s.shape,l);return e.makeTensorInfo(u,s.dtype,$.values)}const b=new S9(i,p,[h,d],s.shape),v=e.runWebGLProgram(b,[y,m],y.dtype),w=Nt({inputs:{x:v},backend:e,attrs:{shape:u}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(v),w}const T9={kernelName:$g,backendName:"webgl",kernelFunc:N9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C9{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=xe(this.rank),a=$9(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${a}));
      }
    `}}function $9(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<n.length;a++)a===2?s.push("index"):s.push(`${e[a]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,indices:r}=t,{axis:i,batchDims:l}=s,u=Kt(i,a.shape)[0];if(at().get("DEBUG")){const T=e.readSync(r.dataId),$=a.shape[u];for(let C=0;C<T.length;++C){const I=T[C];D(I<=$-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${$-1}]`)}}const h=Zw(a,r,u,l),d=ht(r.shape),p=[],m=Nt({inputs:{x:a},backend:e,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),y=Nt({inputs:{x:r},backend:e,attrs:{shape:[h.batchSize,d/h.batchSize]}});p.push(m),p.push(y);const b=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize];if(e.shouldExecuteOnCPU([a,r])||a.dtype==="string"){const T=e.bufferSync(y),$=e.bufferSync(m),C=I5($,T,b);return p.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.makeTensorInfo(h.outputShape,C.dtype,C.values)}const v=new C9(m.shape,b),w=e.runWebGLProgram(v,[m,y],m.dtype);p.push(w);const S=Nt({inputs:{x:w},backend:e,attrs:{shape:h.outputShape}});return p.forEach(T=>e.disposeIntermediateTensorInfo(T)),S}const k9={kernelName:yd,backendName:"webgl",kernelFunc:oD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I9="return float(a > b);",E9=`
  return vec4(greaterThan(a, b));
`,A9=_n({opSnippet:I9,packedOpSnippet:E9,cpuKernelImpl:E5,dtype:"bool"}),R9={kernelName:bd,backendName:"webgl",kernelFunc:A9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D9="return float(a >= b);",O9=`
  return vec4(greaterThanEqual(a, b));
`,_9=_n({opSnippet:D9,packedOpSnippet:O9,dtype:"bool",cpuKernelImpl:A5}),F9={kernelName:Au,backendName:"webgl",kernelFunc:_9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L9(n){const{inputs:t,backend:e}=n,{input:s}=t;return iD(s,!0,e)}const z9={kernelName:kg,backendName:"webgl",kernelFunc:L9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M9="return float(!isnan(x) && !isinf(x));",B9=oe({opSnippet:M9,dtype:"bool"}),V9={kernelName:Du,backendName:"webgl",kernelFunc:B9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P9="return float(isinf(x));",U9=oe({opSnippet:P9,dtype:"bool"}),W9={kernelName:Ou,backendName:"webgl",kernelFunc:U9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G9="return float(isnan(x));",H9=oe({opSnippet:G9,dtype:"bool"}),j9={kernelName:_u,backendName:"webgl",kernelFunc:H9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q9="return float(a < b);",K9=`
  return vec4(lessThan(a, b));
`,X9=_n({opSnippet:q9,packedOpSnippet:K9,cpuKernelImpl:R5,dtype:"bool"}),Y9={kernelName:vd,backendName:"webgl",kernelFunc:X9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z9="return float(a <= b);",Q9=`
  return vec4(lessThanEqual(a, b));
`,J9=_n({opSnippet:Z9,packedOpSnippet:Q9,cpuKernelImpl:D5,dtype:"bool"}),tY={kernelName:wd,backendName:"webgl",kernelFunc:J9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eY(n){const{backend:t,attrs:e}=n,{start:s,stop:a,num:r}=e,i=O5(s,a,r);return t.makeTensorInfo([i.length],"float32",i)}const nY={kernelName:Eg,backendName:"webgl",kernelFunc:eY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sY=xc+`
  return x < 0.0 ? 0./0. : log(x);
`,aY=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,rY=oe({opSnippet:sY,packedOpSnippet:aY,cpuKernelImpl:_5}),iY={kernelName:Fu,backendName:"webgl",kernelFunc:rY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oY=xc+`
  return log(1.0 + x);
`,lY=oe({opSnippet:oY}),uY={kernelName:Lu,backendName:"webgl",kernelFunc:lY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cY="return float(a >= 1.0 && b >= 1.0);",hY=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dY=_n({opSnippet:cY,packedOpSnippet:hY,dtype:"bool"}),fY={kernelName:Sd,backendName:"webgl",kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pY="return float(!(x >= 1.0));",mY=oe({opSnippet:pY}),gY={kernelName:Nd,backendName:"webgl",kernelFunc:mY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yY="return float(a >= 1.0 || b >= 1.0);",bY=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,xY=_n({opSnippet:yY,packedOpSnippet:bY,dtype:"bool"}),vY={kernelName:Td,backendName:"webgl",kernelFunc:xY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wY{constructor(t,e,s,a,r){this.variableNames=["x"],this.outputShape=[];const i=e,l=t[3]-1;this.outputShape=t;let u;const h=`float(${s}) + float(${a}) * sum`;r===.5?u=`inversesqrt(${h})`:r===1?u=`1.0/(${h})`:u=`exp(log(${h}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${l}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SY{constructor(t,e,s,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,l=t[3]-1;this.outputShape=t;let u;const h=`float(${s}) + float(${a}) * sum`;r===.5?u=`inversesqrt(${h})`:r===1?u=`1.0/(${h})`:u=`exp(log(${h}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{depthRadius:r,bias:i,alpha:l,beta:u}=s,h=at().getBool("WEBGL_PACK_NORMALIZATION")?new SY(a.shape,r,i,l,u):new wY(a.shape,r,i,l,u);return e.runWebGLProgram(h,[a],a.dtype)},TY={kernelName:Cd,backendName:"webgl",kernelFunc:NY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CY{constructor(t,e,s,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=a,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a,y:r,dy:i}=t,{depthRadius:l,bias:u,alpha:h,beta:d}=s,p=new CY(a.shape,l,u,h,d);return e.runWebGLProgram(p,[a,r,i],a.dtype)},kY={kernelName:Ag,backendName:"webgl",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IY(n,t,e,s){const a=ht(t),i=ht(n.shape)/a,l=Nt({inputs:{x:n},attrs:{shape:[i,a]},backend:s}),u=al(l,n.dtype,"max",s),h=Nt({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(u),h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reductionIndices:r,keepDims:i}=s,l=a.shape.length,u=Kt(r,a.shape);let h=u;const d=ze(h,l),p=d!=null,m=e.shouldExecuteOnCPU([a]);let y=a;if(p){if(m){const $=e.texData.get(y.dataId).values,C=new Array(l);for(let L=0;L<C.length;L++)C[L]=a.shape[d[L]];const I=uS($,a.shape,a.dtype,d,C);y=e.makeTensorInfo(C,a.dtype);const R=e.texData.get(y.dataId);R.values=I}else y=eb(a,d,e);h=Ke(h.length,l)}Dn("max",h,l);const[b,v]=wn(y.shape,h);let w=b;i&&(w=qe(b,u));let S;if(m){const $=e.texData.get(y.dataId).values,C=F5($,ht(v),w,a.dtype);S=e.makeTensorInfo(w,a.dtype);const I=e.texData.get(S.dataId);I.values=C}else S=IY(y,v,w,e);return p&&e.disposeIntermediateTensorInfo(y),S}const EY={kernelName:$d,backendName:"webgl",kernelFunc:lD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AY=cS+`
  return max(a, b);
`,RY=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+sl+`
  return result;
`,DY=_n({opSnippet:AY,packedOpSnippet:RY,cpuKernelImpl:L5}),OY={kernelName:zu,backendName:"webgl",kernelFunc:DY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Y(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;$f(a,"maxPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;D(Rn(i,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const d=ha(a.shape,r,i,h,l,u);if(d.filterWidth===1&&d.filterHeight===1&&Zt(d.inShape,d.outShape))return ws({inputs:{x:a},backend:e});const p=new Hh(d,"max",!1);return e.runWebGLProgram(p,[a],a.dtype)}const FY={kernelName:kd,backendName:"webgl",kernelFunc:_Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LY(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dataFormat:u,dimRoundingMode:h}=s,d=[1,1,1],p=Lr(a.shape,r,i,d,l,h,u),m=new dS(p,"max",!1);return e.runWebGLProgram(m,[a],a.dtype)}const zY={kernelName:Id,backendName:"webgl",kernelFunc:LY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MY{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,r=t.effectiveFilterHeight,i=t.effectiveFilterWidth,l=r-1-t.padInfo.top,u=i-1-t.padInfo.left,h=r*i-1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${h} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class BY{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,a=t.strideWidth,r=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=u-1-t.padInfo.front,m=h-1-t.padInfo.top,y=d-1-t.padInfo.left,b=u*h*d-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${b} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${h} * ${d} +
                  wR * ${d} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VY(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r,{filterSize:l,strides:u,pad:h,dimRoundingMode:d}=s,p=[1,1,1],m=Lr(i.shape,l,u,p,h,d),y=new dS(m,"max",!0),b=e.runWebGLProgram(y,[i],i.dtype),v=new BY(m),w=e.runWebGLProgram(v,[a,b],i.dtype);return e.disposeIntermediateTensorInfo(b),w}const PY={kernelName:Dg,backendName:"webgl",kernelFunc:VY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r,output:i}=t,l=r;$f([r,i],"maxPoolGrad");const{filterSize:u,strides:h,pad:d,dimRoundingMode:p}=s,m=ha(l.shape,u,h,1,d,p),y=!0,b=new Hh(m,"max",y),v=e.runWebGLProgram(b,[l],l.dtype),w=new MY(m),S=e.runWebGLProgram(w,[a,v],l.dtype);return e.disposeIntermediateTensorInfo(v),S}const WY={kernelName:Rg,backendName:"webgl",kernelFunc:UY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(n,t,e,s){let a=new Hh(e,"max",!1);const r=s.runWebGLProgram(a,[n],"float32");a=new Hh(e,"max",!0,!0,t);const i=s.runWebGLProgram(a,[n],"float32");return[r,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HY={kernelName:Og,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:a,strides:r,pad:i,includeBatchInIndex:l}=t,u=e;D(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const h=[1,1];D(Rn(r,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${h}'`);const d=ha(s.shape,a,r,h,i),[p,m]=GY(s,l,d,u);return[p,m]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jY(n,t,e,s){const a=ht(t),i=ht(n.shape)/a,l=Nt({inputs:{x:n},attrs:{shape:[i,a]},backend:s}),u=al(l,"float32","mean",s),h=Nt({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(u),h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qY={kernelName:Ed,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:a,axis:r}=t,i=e,l=s.shape.length,u=Kt(r,s.shape);let h=u;const d=ze(h,l),p=d!=null,m=i.shouldExecuteOnCPU([s]),y=[];let b=s;if(p){if(m){const C=i.texData.get(b.dataId).values,I=new Array(l);for(let M=0;M<I.length;M++)I[M]=s.shape[d[M]];const R=uS(C,s.shape,s.dtype,d,I);b=i.makeTensorInfo(I,s.dtype);const L=i.texData.get(b.dataId);L.values=R}else b=eb(s,d,i);y.push(b),h=Ke(h.length,l)}Dn("sum",h,l);const[v,w]=wn(b.shape,h);let S=v;a&&(S=qe(v,u));const T=jY(b,w,S,i);for(const $ of y)i.disposeIntermediateTensorInfo($);return T}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=Kt(r,a.shape);let h=u;const d=ze(h,l);let p=a;d!=null&&(p=Xn({inputs:{x:a},backend:e,attrs:{perm:d}}),h=Ke(h.length,a.shape.length)),Dn("min",h,l);const[m,y]=wn(p.shape,h),b=ht(y),v=Nt({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),w=al(v,v.dtype,"min",e);let S;if(i){const T=qe(m,u);S=Nt({inputs:{x:w},backend:e,attrs:{shape:T}})}else S=Nt({inputs:{x:w},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),d!=null&&e.disposeIntermediateTensorInfo(p),S}const XY={kernelName:Ad,backendName:"webgl",kernelFunc:KY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY=cS+`
  return min(a, b);
`,ZY=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+sl+`
  return result;
`,QY=_n({opSnippet:YY,packedOpSnippet:ZY,cpuKernelImpl:z5}),JY={kernelName:Mu,backendName:"webgl",kernelFunc:QY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tZ{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((d,p)=>d[0]+t[p]+d[1]);const a=t.length,r=xe(a),i=e.map(d=>d[0]).join(","),l=e.map((d,p)=>d[0]+t[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),h=s==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${h};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${h};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${l});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${h};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${h};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eZ{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((b,v)=>b[0]+t[v]+b[1]);const a=t.length,r=xe(a),i=e.map(b=>b[0]).join(","),l=e.map((b,v)=>b[0]+t[v]).join(","),u=Kn("rc",a),h=Kn("source",a),d=`${u[a-1]} < ${this.outputShape[a-1]}`,p=a===1?"source":`vec2(${h.slice(-2).join()})`,m=s==="reflect"?0:1;let y="";if(a===1){const b=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;y=`
        ${r} rc = outputLoc;
        ${b}
        result[0] = getChannel(getX(${h.join()}), ${p});
        ${u[a-1]} += 1;
        if(${d}) {
          ${b}
          result[1] = getChannel(getX(${h.join()}), ${p});
        }
      `}else{const b=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;y=`
        ${r} rc = outputLoc;
        ${b}
        result[0] = getChannel(getX(${h.join()}), ${p});
        ${u[a-1]} += 1;
        if(${d}) {
          ${b}
          result[1] = getChannel(getX(${h.join()}), ${p});
        }
        rc = outputLoc;
        ${u[a-2]} += 1;
        if(${u[a-2]} < ${this.outputShape[a-2]}) {
          ${b}
          result[2] = getChannel(getX(${h.join()}), ${p});
          ${u[a-1]} += 1;
          if(${d}) {
            ${b}
            result[3] = getChannel(getX(${h.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${l});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${y}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nZ=({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:a,mode:r}=e,i=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eZ(s.shape,a,r):new tZ(s.shape,a,r);return t.runWebGLProgram(i,[s],s.dtype)},sZ={kernelName:Rd,backendName:"webgl",kernelFunc:nZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aZ=`if (b == 0.0) return NAN;
  return mod(a, b);`,rZ=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+sl+`
  return result;
`,iZ=_n({opSnippet:aZ,packedOpSnippet:rZ}),oZ={kernelName:Bu,backendName:"webgl",kernelFunc:iZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lZ{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uZ=`
if (a == b) {
  return 1.0;
};
return a / b;`,cZ=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,uD=_n({opSnippet:uZ,packedOpSnippet:cZ,checkOutOfBounds:!0}),hZ={kernelName:Nu,backendName:"webgl",kernelFunc:uD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X$="return a - b;",cD=_n({opSnippet:X$,packedOpSnippet:X$,supportsComplex:!0,cpuKernelImpl:a8}),dZ={kernelName:ec,backendName:"webgl",kernelFunc:cD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{dim:r}=s,i=Kt([r],a.shape),l=lD({inputs:{x:a},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),u=qe(l.shape,i),h=Nt({inputs:{x:l},backend:e,attrs:{shape:u}}),d=cD({inputs:{a,b:h},backend:e}),p=rD({inputs:{x:d},backend:e}),m=nb({inputs:{x:p},backend:e,attrs:{axis:i,keepDims:!1}}),y=Nt({inputs:{x:m},backend:e,attrs:{shape:u}}),b=uD({inputs:{a:p,b:y},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),b}const fZ={kernelName:Xd,backendName:"webgl",kernelFunc:hD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pZ(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{numSamples:r,seed:i,normalized:l}=s,u=l?a:hD({inputs:{logits:a},backend:e,attrs:{dim:a.shape.length-1}}),h=u.shape[0],d=u.shape[1],p=new lZ(h,d,r),m=[[i]],y=e.runWebGLProgram(p,[u],"int32",m);return l||e.disposeIntermediateTensorInfo(u),y}const mZ={kernelName:_g,backendName:"webgl",kernelFunc:pZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gZ=da+`
  return -x;
`,yZ=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function bZ(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const r=e.texData.get(s.dataId),[i,l]=B5(r.values,s.shape,s.dtype);return e.makeTensorInfo(l,s.dtype,i)}let a;return at().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new mi(s.shape,yZ):a=new Ha(s.shape,gZ),e.runWebGLProgram(a,[s],s.dtype)}const xZ={kernelName:Dd,backendName:"webgl",kernelFunc:bZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vZ=Wy;function wZ(n){Ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=s,h=e.readSync(a.dataId),d=e.readSync(r.dataId),{selectedIndices:p}=vZ(h,d,i,l,u);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}const SZ={kernelName:Fg,backendName:"webgl",kernelFunc:wZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NZ=Gy;function TZ(n){Ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:h}=s,d=e.readSync(a.dataId),p=e.readSync(r.dataId),{selectedIndices:m,validOutputs:y}=NZ(d,p,i,l,u,h);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([y]))]}const CZ={kernelName:Lg,backendName:"webgl",kernelFunc:TZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Z=Hy;function kZ(n){Ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:h}=s,d=e.readSync(a.dataId),p=e.readSync(r.dataId),m=i,y=l,b=u,v=h,{selectedIndices:w,selectedScores:S}=$Z(d,p,m,y,b,v);return[e.makeTensorInfo([w.length],"int32",new Int32Array(w)),e.makeTensorInfo([S.length],"float32",new Float32Array(S))]}const IZ={kernelName:zg,backendName:"webgl",kernelFunc:kZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EZ{constructor(t,e,s,a){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AZ=n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:a}=t,{dtype:r,depth:i,onValue:l,offValue:u}=s,h=ht(a.shape),d=new EZ(h,i,l,u),p=Nt({inputs:{x:a},backend:e,attrs:{shape:[h]}}),m=e.runWebGLProgram(d,[p],r);e.disposeIntermediateTensorInfo(p);const y=[...a.shape,i],b=Nt({inputs:{x:m},backend:e,attrs:{shape:y}});return e.disposeIntermediateTensorInfo(m),b},RZ={kernelName:Fd,backendName:"webgl",kernelFunc:AZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vm(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const a=If({inputs:{input:s},backend:e}),r=Vm({inputs:{x:a},backend:e}),i=sb({inputs:{input:s},backend:e}),l=Vm({inputs:{x:i},backend:e}),u=Wi({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return Ef({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const DZ={kernelName:Jd,backendName:"webgl",kernelFunc:Vm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const a=If({inputs:{input:s},backend:e}),r=dD({inputs:{x:a},backend:e}),i=sb({inputs:{input:s},backend:e}),l=Vm({inputs:{x:i},backend:e}),u=Wi({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return Ef({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const OZ={kernelName:_d,backendName:"webgl",kernelFunc:dD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Z(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s;if(t.length===1)return z1({inputs:{input:t[0]},backend:e,attrs:{dim:a}});const r=t[0].shape,i=t[0].dtype;t.forEach(d=>{An(r,d.shape,"All tensors passed to stack must have matching shapes"),D(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=t.map(d=>{const p=z1({inputs:{input:d},backend:e,attrs:{dim:a}});return l.push(p),p}),h=ZR({inputs:u,backend:e,attrs:{axis:a}});return l.forEach(d=>e.disposeIntermediateTensorInfo(d)),h}const FZ={kernelName:Ld,backendName:"webgl",kernelFunc:_Z};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LZ{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((h,d)=>h[0]+t[d]+h[1]);const a=t.length,r=xe(a),i=e.map(h=>h[0]).join(","),l=e.map((h,d)=>h[0]+t[d]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${l});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zZ{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((v,w)=>v[0]+t[w]+v[1]);const a=t.length,r=xe(a),i=e.map(v=>v[0]).join(","),l=e.map((v,w)=>v[0]+t[w]).join(","),u=Kn("rc",a),h=Kn("source",a),d=`${u[a-1]} < ${this.outputShape[a-1]}`,p=a===1?"source":`vec2(${h.slice(-2).join()})`,m=[`${r} rc = outputLoc;`,`${u[a-1]} += 1;
       if(${d}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${u[a-2]} += 1;
       if(${u[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${u[a-1]} += 1;
         if(${d}) {`],y=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let b="";for(let v=0,w=a===1?2:4;v<w;v++)b+=`
        ${m[v]}
        if (${y}) {
          result[${v}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${v}] = getChannel(getX(${h.join()}), ${p});
        }
      `;b+=a===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${l});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${b}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fD=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,constantValue:i}=s;if(ht(a.shape)===0){const h=r.map((d,p)=>d[0]+a.shape[p]+d[1]);return Ef({backend:e,attrs:{shape:h,value:i,dtype:a.dtype}})}const l=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zZ(a.shape,r,i):new LZ(a.shape,r,i),u=[[i]];return e.runWebGLProgram(l,[a],a.dtype,u)},MZ={kernelName:zd,backendName:"webgl",kernelFunc:fD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BZ=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,VZ=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+sl+`
  return result;
`,PZ=_n({opSnippet:BZ,packedOpSnippet:VZ}),UZ={kernelName:Pu,backendName:"webgl",kernelFunc:PZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=[],h=Kt(r,a.shape);let d=h;const p=ze(d,l);let m=a;p!=null&&(m=Xn({inputs:{x:a},backend:e,attrs:{perm:p}}),d=Ke(d.length,l),u.push(m)),Dn("prod",d,l);let y;if(e.shouldExecuteOnCPU([m])){const b=e.texData.get(m.dataId).values,{outVals:v,outShape:w,outDtype:S}=P5(m.shape,m.dtype,b,d);y=e.makeTensorInfo(w,S,v)}else{const[b,v]=wn(m.shape,d),w=ht(v),S=Nt({inputs:{x:m},backend:e,attrs:{shape:[-1,w]}}),T=uy(a.dtype),$=al(S,T,"prod",e);y=Nt({inputs:{x:$},backend:e,attrs:{shape:b}}),u.push(S),u.push($)}if(i){u.push(y);const b=qe(y.shape,h);y=Nt({inputs:{x:y},backend:e,attrs:{shape:b}})}return u.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const GZ={kernelName:Bd,backendName:"webgl",kernelFunc:WZ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HZ(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=t,{outputRaggedRank:l}=s,u=a.map(S=>e.readSync(S.dataId)),h=a.map(S=>S.shape),d=e.readSync(r.dataId),p=e.readSync(i.dataId),[m,y,b]=U5(u,h,d,r.shape,r.dtype,p,i.shape,l),v=m.map(S=>e.makeTensorInfo([S.length],"int32",S)),w=e.makeTensorInfo(b,r.dtype,y);return v.concat([w])}const jZ={kernelName:Mg,backendName:"webgl",kernelFunc:HZ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qZ(n){const{inputs:t,backend:e}=n,{starts:s,limits:a,deltas:r}=t,i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,d]=W5(i,s.shape,s.dtype,l,a.shape,u,r.shape),p=e.makeTensorInfo([h.length],"int32",h),m=e.makeTensorInfo([d.length],s.dtype,d);return[p,m]}const KZ={kernelName:Bg,backendName:"webgl",kernelFunc:qZ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XZ(n){const{inputs:t,backend:e,attrs:s}=n,{shape:a,values:r,defaultValue:i,rowPartitionTensors:l}=t,{rowPartitionTypes:u}=s,h=e.readSync(a.dataId),d=e.readSync(r.dataId),p=e.readSync(i.dataId),m=l.map(w=>e.readSync(w.dataId)),y=l.map(w=>w.shape),[b,v]=G5(h,a.shape,d,r.shape,r.dtype,p,i.shape,m,y,u);return e.makeTensorInfo(b,r.dtype,v)}const YZ={kernelName:Vg,backendName:"webgl",kernelFunc:XZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pD=n=>{const{backend:t,attrs:e}=n,{start:s,stop:a,step:r,dtype:i}=e,l=H5(s,a,r,i);return t.makeTensorInfo([l.length],i,l)},ZZ={kernelName:Pg,backendName:"webgl",kernelFunc:pD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QZ="return 1.0 / x;",JZ=oe({opSnippet:QZ}),tQ={kernelName:Uu,backendName:"webgl",kernelFunc:JZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eQ=da+`
  return (x < 0.0) ? 0.0 : x;
`,nQ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,sQ=oe({opSnippet:eQ,packedOpSnippet:nQ}),aQ={kernelName:Wu,backendName:"webgl",kernelFunc:sQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rQ=da+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,iQ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,oQ=oe({opSnippet:rQ,packedOpSnippet:iQ}),lQ={kernelName:Gu,backendName:"webgl",kernelFunc:oQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uQ{constructor(t,e,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const d=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s];let m;r?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/p[0]},
          ${d[1]/p[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cQ{constructor(t,e,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const d=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s];let m;r?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/p[0]},
          ${d[1]/p[1]},
          ${d[1]/p[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${h-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hQ(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s,[u,h]=l,d=at().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cQ(a.shape,u,h,r,i):new uQ(a.shape,u,h,r,i);return e.runWebGLProgram(d,[a],"float32")}const dQ={kernelName:Ud,backendName:"webgl",kernelFunc:hQ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fQ{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,i,l]=t,u=[s&&i>1?a-1:a,s&&l>1?r-1:r],h=[s&&i>1?i-1:i,s&&l>1?l-1:l],d=u[0]/h[0],p=u[1]/h[1],m=1/d,y=1/p,b=Math.ceil(m)*2+2,v=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${y});

        const int winHeight = int(${b});
        const int winWidth = int(${v});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pQ(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s,l=new fQ(r.shape,a.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}const mQ={kernelName:Gg,backendName:"webgl",kernelFunc:pQ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gQ{constructor(t,e,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const d=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s],m=a?"0.5":"0.0";let y;r?y="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":y="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/p[0]},
          ${d[1]/p[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${y};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yQ{constructor(t,e,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const d=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s],m=a?"0.5":"0.0";let y;r?y="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":y="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/p[0]},
          ${d[1]/p[1]},
          ${d[1]/p[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${y};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${h-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bQ(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s,[u,h]=l,d=at().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yQ(a.shape,u,h,r,i):new gQ(a.shape,u,h,r,i);return e.runWebGLProgram(d,[a],a.dtype)}const xQ={kernelName:Pd,backendName:"webgl",kernelFunc:bQ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vQ{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,i,l]=t,u=[s&&i>1?a-1:a,s&&l>1?r-1:r],h=[s&&i>1?i-1:i,s&&l>1?l-1:l],d=u[0]/h[0],p=u[1]/h[1],m=1/d,y=1/p,b=Math.ceil(m)*2+2,v=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${y});

        const int winHeight = int(${b});
        const int winWidth = int(${v});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${h[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${h[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wQ(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s,l=new vQ(r.shape,a.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}const SQ={kernelName:Wg,backendName:"webgl",kernelFunc:wQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NQ{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const a=l=>e.indexOf(l)!==-1&&t[l]!==1?`${t[l]} - coords[${l}] - 1`:`coords[${l}]`,r=t.map((l,u)=>a(u)).join(","),i=xe(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TQ{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const a=Kn("rc",s),r=`${a[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${a[s-2]} + 1 < ${this.outputShape[s-2]}`,l=xe(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${l} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(a.slice())};
          if(${r}){
            result.g = ${h(a.slice())};
          }
          if(${i}) {
            result.b = ${d(a.slice())};
            if(${r}) {
              result.a = ${p(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(b){return m(b)}function h(b){return b[s-1]="("+b[s-1]+" + 1)",m(b)}function d(b){return b[s-2]="("+b[s-2]+" + 1)",m(b)}function p(b){return b[s-1]="("+b[s-1]+" + 1)",b[s-2]="("+b[s-2]+" + 1)",m(b)}function m(b){const v=t.map((T,$)=>y($,b)),w=v.join(","),S=v.slice(-2).join(",");return`getChannel(getX(${w}), vec2(${S}))`}function y(b,v){return e.indexOf(b)!==-1&&t[b]!==1?`${t[b]} - ${v[b]} - 1`:`${v[b]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dims:r}=s,i=a.shape.length,l=Kt(r,a.shape);if(i===0)return ws({inputs:{x:a},backend:e});const u=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TQ(a.shape,l):new NQ(a.shape,l);return e.runWebGLProgram(u,[a],a.dtype)}const $Q={kernelName:Wd,backendName:"webgl",kernelFunc:CQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kQ{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],a=t[2];this.outputShape=t;let r="";typeof e=="number"?r=`float outputValue = ${e.toFixed(2)};`:r=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IQ={kernelName:oy,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:a,fillValue:r,center:i}=t,l=e,u=new kQ(s.shape,r),[h,d]=Fw(i,s.shape[1],s.shape[2]),p=[[h,d,Math.sin(a),Math.cos(a)]];return l.runWebGLProgram(u,[s],s.dtype,p)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EQ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,AQ=oe({opSnippet:EQ}),RQ={kernelName:Hu,backendName:"webgl",kernelFunc:AQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DQ="return inversesqrt(x);",OQ=oe({opSnippet:DQ,cpuKernelImpl:j5}),_Q={kernelName:ju,backendName:"webgl",kernelFunc:OQ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fS{constructor(t,e,s,a,r,i,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const h=xe(r.length),d=xe(i.length);let p="";s===1?p="i":s===2&&(p="i, j");const m=`getIndices(${p})`;let y="";a===1?y="i":a===2&&(y="i, coords[1]");const b=`getUpdates(${y})`;let v="";u&&(v="coords[0], coords[1]");const w=`getDefaultValue(${v})`,S=e>1?"strides[j]":"strides";this.userCode=`
        ${h} strides = ${h}(${r});

        void main() {
          ${d} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${S};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${b};
              found = true;
            }
          }
          setOutput(mix(${w}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FQ{constructor(t,e,s,a,r,i,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const h=xe(r.length),d=xe(i.length);let p="";s===1?p="i":s===2&&(p="i, j");const m=`getIndices(${p})`;let y="";a===1?y="i":a===2&&(y="i, coords[1]");const b=`getUpdates(${y})`;let v="";u&&(v="coords[0], coords[1]");const w=`getDefaultValue(${v})`,S=e>1?"strides[j]":"strides",T=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${h} strides = ${h}(${r});

        void main() {
          ${d} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${m});
              flattenedIndex += index.xz * ${S};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${T};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${b};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${w}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LQ(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a,updates:r}=t,{shape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=Pi(r,a,i),m=[p/h,h];if(p===0)return e.makeTensorInfo(i,a.dtype);const y=Nt({inputs:{x:a},backend:e,attrs:{shape:[u,l]}}),b=Nt({inputs:{x:r},backend:e,attrs:{shape:[u,h]}}),v=e.makeTensorInfo([],"float32",new Float32Array([0]));let w;at().getBool("WEBGL_PACK")?w=new FQ(u,l,y.shape.length,b.shape.length,d,m):w=new fS(u,l,y.shape.length,b.shape.length,d,m);const S=e.runWebGLProgram(w,[b,y,v],b.dtype),T=Nt({inputs:{x:S},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(v),T}const zQ={kernelName:Hg,backendName:"webgl",kernelFunc:LQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MQ{constructor(t,e,s,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,l=at().getNumber("WEBGL_VERSION")===2?r:i,u=a==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${l}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BQ(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:a,values:r}=t,{side:i}=s,l=new MQ(a.shape[0],a.shape[1],r.shape[1],i),u=[[a.shape[1]]];return e.runWebGLProgram(l,[a,r],"int32",u)}const VQ={kernelName:qg,backendName:"webgl",kernelFunc:BQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PQ{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let a,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",a="resRC";else{const l=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],h=[];for(let d=0;d<e.length;d++)h.push(`${l[d]}`),d<t&&u.push(`${l[d]}`);a=u.join(),r=h.join()}const i=xe(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(n){const{inputs:t,backend:e}=n,{condition:s,t:a,e:r}=t,i=new PQ(s.shape.length,a.shape,a.shape.length);return e.runWebGLProgram(i,[s,a,r],rs(a.dtype,r.dtype))}const WQ={kernelName:Gd,backendName:"webgl",kernelFunc:UQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GQ=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Yy};
  float scale = ${Zy};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,HQ=oe({opSnippet:GQ}),jQ={kernelName:qu,backendName:"webgl",kernelFunc:HQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qQ=xc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,KQ=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,XQ=oe({opSnippet:qQ,packedOpSnippet:KQ,cpuKernelImpl:K5}),YQ={kernelName:Zu,backendName:"webgl",kernelFunc:XQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZQ=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,QQ=oe({opSnippet:ZQ}),JQ={kernelName:Yu,backendName:"webgl",kernelFunc:QQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tJ=xc+`
  return sin(x);
`,eJ=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${sl}
  return result;
`,nJ=oe({opSnippet:tJ,packedOpSnippet:eJ}),sJ={kernelName:Ku,backendName:"webgl",kernelFunc:nJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aJ=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,rJ=oe({opSnippet:aJ}),iJ={kernelName:Xu,backendName:"webgl",kernelFunc:rJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oJ=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,lJ=oe({opSnippet:oJ}),uJ={kernelName:Qu,backendName:"webgl",kernelFunc:lJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cJ=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,paddings:i}=s;D(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=r.reduce((S,T)=>S*T),u=[[0,0]];u.push(...i);for(let S=1+r.length;S<a.shape.length;++S)u.push([0,0]);const h=[],d=fD({inputs:{x:a},backend:e,attrs:{paddings:u,constantValue:0}}),p=wf(d.shape,r,l,!1),m=Sf(p.length,r.length,!1),y=Nf(d.shape,r,l,!1),b=Nt({inputs:{x:d},backend:e,attrs:{shape:p}}),v=Xn({inputs:{x:b},backend:e,attrs:{perm:m}}),w=Nt({inputs:{x:v},backend:e,attrs:{shape:y}});return h.push(d),h.push(b),h.push(v),h.forEach(S=>e.disposeIntermediateTensorInfo(S)),w},hJ={kernelName:qd,backendName:"webgl",kernelFunc:cJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dJ(n){const{inputs:t,backend:e}=n,{indices:s,values:a,denseShape:r,defaultValue:i}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=e.readSync(s.dataId),u=e.readSync(a.dataId),h=e.readSync(r.dataId),d=e.readSync(i.dataId)[0],[p,m,y,b,v]=Y5(l,s.shape,s.dtype,u,a.dtype,h,d);return[e.makeTensorInfo(m,s.dtype,p),e.makeTensorInfo([m[0]],a.dtype,y),e.makeTensorInfo([b.length],"bool",new Uint8Array(b.map(w=>Number(w)))),e.makeTensorInfo([v.length],s.dtype,new Int32Array(v))]}const fJ={kernelName:Kg,backendName:"webgl",kernelFunc:dJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pJ(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:a,newShape:r}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(e.readSync(a.dataId)),l=e.readSync(s.dataId),u=Array.from(e.readSync(r.dataId)),[h,d,p]=Z5(l,s.shape,s.dtype,i,u);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([p.length],r.dtype,new Int32Array(p))]}const mJ={kernelName:Xg,backendName:"webgl",kernelFunc:pJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gJ(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,d]=MR(i,s.shape,s.dtype,l,u,!0);return e.makeTensorInfo(d,s.dtype,h)}const yJ={kernelName:Yg,backendName:"webgl",kernelFunc:gJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bJ(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,d]=MR(i,s.shape,s.dtype,l,u);return e.makeTensorInfo(d,s.dtype,h)}const xJ={kernelName:Zg,backendName:"webgl",kernelFunc:bJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vJ(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:a,sparseValues:r,defaultValue:i}=t,{outputShape:l}=s,{sliceRank:u,numUpdates:h,sliceSize:d,strides:p,outputSize:m}=Pi(r,a,l),y=!1;if(r.dtype==="string"){const S=e.bufferSync(a),T=e.bufferSync(r),$=Er(e.readSync(i.dataId)[0]),C=q5(S,T,l,m,d,h,u,p,$,y);return e.makeTensorInfo(l,C.dtype,C.values)}const b=new fS(h,u,a.shape.length,r.shape.length,p,[m,1],y),v=e.runWebGLProgram(b,[r,a,i],r.dtype),w=Nt({inputs:{x:v},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(v),w}const wJ={kernelName:Qg,backendName:"webgl",kernelFunc:vJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{numOrSizeSplits:r,axis:i}=s,l=Kt(i,a.shape)[0],u=Yw(a,r,l),h=a.shape.length,d=new Array(h).fill(0),p=a.shape.slice();return u.map(m=>{const y=[...p];y[l]=m;const b=vc({inputs:{x:a},backend:e,attrs:{begin:d,size:y}});return d[l]+=m,b})}const NJ={kernelName:Kd,backendName:"webgl",kernelFunc:SJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y$="return sqrt(x);",TJ=oe({opSnippet:Y$,packedOpSnippet:Y$,cpuKernelImpl:Q5}),CJ={kernelName:Ju,backendName:"webgl",kernelFunc:TJ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $J="return x * x;",kJ=oe({opSnippet:$J}),IJ={kernelName:Jg,backendName:"webgl",kernelFunc:kJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z$="return (a - b) * (a - b);",EJ=_n({opSnippet:Z$,packedOpSnippet:Z$}),AJ={kernelName:tc,backendName:"webgl",kernelFunc:EJ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");const r=e.readSync(a.dataId),i=Or(r),l=J5(i,"string",s);return e.makeTensorInfo(a.shape,"string",l)}const DJ={kernelName:Yd,backendName:"webgl",kernelFunc:RJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJ({inputs:n,attrs:t,backend:e}){const{x:s}=n,a=da+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,r=new Ha(s.shape,a);return e.runWebGLProgram(r,[s],s.dtype)}const _J={kernelName:rc,backendName:"webgl",kernelFunc:OJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FJ{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const a=s.length,r=xe(s.length),i=xe(s.length);let l="";if(a===1)l="coords * strides + begin";else{let u=0;l=s.map((h,d)=>(u++,s.length===1?`coords * strides[${d}] + begin[${d}]`:`coords[${u-1}] * strides[${d}] + begin[${d}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${t});
      ${r} strides = ${r}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,end:i,strides:l,beginMask:u,endMask:h,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:m}=s,{finalShapeSparse:y,finalShape:b,isIdentity:v,sliceDim0:w,isSimpleSlice:S,begin:T,end:$,strides:C}=Rw(a.shape,r,i,l,u,h,d,p,m);let I;if(v)I=Nt({inputs:{x:a},backend:e,attrs:{shape:b}});else if(w||S){D(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const L=Iw(T,$,C),M=vc({inputs:{x:a},backend:e,attrs:{begin:T,size:L}});I=Nt({inputs:{x:M},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(M)}else if(e.shouldExecuteOnCPU([a])){const M=e.readSync(a.dataId),O=Wt(a.shape,a.dtype,M),_=t8(y,O,C,T);I=e.makeTensorInfo(b,a.dtype,_.values)}else{const M=new FJ(T,C,y);I=e.runWebGLProgram(M,[a],a.dtype)}const R=Nt({inputs:{x:I},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(I),R}const zJ={kernelName:ty,backendName:"webgl",kernelFunc:LJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MJ(n){const{inputs:t,backend:e,attrs:s}=n,{separator:a,nGramWidths:r,leftPad:i,rightPad:l,padWidth:u,preserveShortSequences:h}=s,{data:d,dataSplits:p}=t,m=e.readSync(d.dataId),y=e.readSync(p.dataId),[b,v]=e8(m,y,a,r,i,l,u,h);return[e.makeTensorInfo([b.length],"string",b),e.makeTensorInfo(p.shape,"int32",v)]}const BJ={kernelName:ey,backendName:"webgl",kernelFunc:MJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VJ(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:a}=s,{input:r,delimiter:i}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=e.readSync(r.dataId),u=e.readSync(i.dataId)[0],[h,d,p]=n8(l,u,a),m=d.length;return[e.makeTensorInfo([m,2],"int32",h),e.makeTensorInfo([m],"string",d),e.makeTensorInfo([2],"int32",new Int32Array(p))]}const PJ={kernelName:ny,backendName:"webgl",kernelFunc:VJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UJ(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:a}=s,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=e.readSync(r.dataId),l=s8(i,a);return e.makeTensorInfo(r.shape,"int32",l)}const WJ={kernelName:sy,backendName:"webgl",kernelFunc:UJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GJ="return tan(x);",HJ=oe({opSnippet:GJ}),jJ={kernelName:nc,backendName:"webgl",kernelFunc:HJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qJ=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,KJ=oe({opSnippet:qJ}),XJ={kernelName:sc,backendName:"webgl",kernelFunc:KJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YJ(n){const{inputs:t,backend:e,attrs:s}=n,{tensor:a,indices:r,updates:i}=t,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=Pi(i,r,a.shape),m=[p/h,h];if(p===0)return e.makeTensorInfo(a.shape,r.dtype);const y=Nt({inputs:{x:r},backend:e,attrs:{shape:[u,l]}}),b=Nt({inputs:{x:i},backend:e,attrs:{shape:[u,h]}}),v=Nt({inputs:{x:a},backend:e,attrs:{shape:m}}),w=new fS(u,l,y.shape.length,b.shape.length,d,m,!1,!0),S=e.runWebGLProgram(w,[b,y,v],v.dtype),T=Nt({inputs:{x:S},backend:e,attrs:{shape:a.shape}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(S),T}const ZJ={kernelName:jg,backendName:"webgl",kernelFunc:YJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QJ{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[i]*e[i];this.outputShape=s,this.rank=s.length;const a=xe(this.rank),r=JJ(t);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function JJ(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let a=0;a<n.length;a++)s.push(`imod(${e[a]}, ${n[a]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reps:r}=s;if(a.dtype==="string"||a.shape.length>5){const u=e.readSync(a.dataId),h=a.dtype==="string"?u.map(m=>Er(m)):u,d=Wt(a.shape,a.dtype,h),p=r8(d,r);return e.makeTensorInfo(p.shape,p.dtype,p.values)}const i=new QJ(a.shape,r);return e.runWebGLProgram(i,[a],a.dtype)}const ttt={kernelName:ac,backendName:"webgl",kernelFunc:mD};class ett{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class ntt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function go(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function Q$(n){let t=1;for(;t<n;)t*=2;return t}function stt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{k:r,sorted:i}=s,l=at().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=at().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),h=a.shape,d=h[h.length-1];if(e.shouldExecuteOnCPU([a])||d<l||r>u){const _=e.readSync(a.dataId),[A,G]=i8(_,h,a.dtype,r,i);return[e.makeTensorInfo(A.shape,A.dtype,A.values),e.makeTensorInfo(G.shape,G.dtype,G.values)]}if(r===0)return h[h.length-1]=0,[e.makeTensorInfo(h,a.dtype,[]),e.makeTensorInfo(h,"int32",[])];if(d===1)return[a,Ef({attrs:{shape:h,dtype:"int32",value:0},backend:e})];const p=e.texData.get(a.dataId),m=p!==null&&p.isPacked,y=m?e.unpackTensor(a):a,v=ht(h)/d,w=Nt({inputs:{x:y},attrs:{shape:[v,d]},backend:e});m&&go(e,y);const S=Q$(r),T=Q$(d);let $=null;const C=()=>$===null?[w,w]:[w,$],I=(_,A,G)=>{const X=C(),tt=new ett(G),U=[[d],[$===null?1:0],[Number.NEGATIVE_INFINITY],[_],[A]],et=$;$=e.runWebGLProgram(tt,X,"int32",U),go(e,et)};for(let _=1;_<S;_*=2){const A=_*2;for(let G=_;G>=1;G/=2)I(A,G,[v,T])}for(let _=T;_>S;_/=2){const A=C(),G=new ntt([v,_/2]),tt=[[d],[$===null?1:0],[S]],Q=$;$=e.runWebGLProgram(G,A,"int32",tt),go(e,Q);const U=S/2,et=U*2;for(let Y=U;Y>=1;Y/=2)I(et,Y,$.shape)}let R=$;$=vc({inputs:{x:$},backend:e,attrs:{begin:0,size:[v,r]}}),go(e,R);let L=oD({inputs:{x:w,indices:$},backend:e,attrs:{axis:1,batchDims:1}});go(e,w);const M=h.slice(0,-1);M.push(r),R=$,$=Nt({inputs:{x:$},attrs:{shape:M},backend:e}),go(e,R);const O=L;return L=Nt({inputs:{x:L},attrs:{shape:M},backend:e}),go(e,O),[L,$]}const att={kernelName:ay,backendName:"webgl",kernelFunc:stt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rtt{constructor(t,e,s,a,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const l=s==="nearest"?1:2;let u;switch(a){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${l} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function itt(n){const{inputs:t,backend:e,attrs:s}=n,{image:a,transforms:r}=t,{interpolation:i,fillMode:l,fillValue:u,outputShape:h}=s,[d,p,m,y]=a.shape,[b,v]=h??[p,m],w=[d,b,v,y],S=new rtt(p,m,i,l,u,w);return e.runWebGLProgram(S,[a,r],"float32")}const ott={kernelName:ry,backendName:"webgl",kernelFunc:itt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ltt(n){const{inputs:t,attrs:e,backend:s}=n,{axis:a}=e,{x:r}=t;$f(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:l,outputShape:u,indices:h}=o8(i,a,r.shape,r.dtype);return[s.makeTensorInfo(u,r.dtype,l),s.makeTensorInfo([h.length],"int32",h)]}const utt={kernelName:iy,backendName:"webgl",kernelFunc:ltt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ctt(n){const{inputs:t,backend:e,attrs:s}=n,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a,l=i.shape.length,u=a.shape[r],h=new Array(l-1);let d=0;for(let v=0;v<l;v++)v!==r&&(h[d++]=i.shape[v]);const p=[],m=new Array(l).fill(0),y=i.shape.slice();y[r]=1;const b=new Array(u);for(let v=0;v<b.length;v++){m[r]=v;const w=vc({inputs:{x:i},backend:e,attrs:{begin:m,size:y}}),S=Nt({inputs:{x:w},backend:e,attrs:{shape:h}});b[v]=S,p.push(w)}return p.forEach(v=>e.disposeIntermediateTensorInfo(v)),b}const htt={kernelName:Zd,backendName:"webgl",kernelFunc:ctt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dtt{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,a=t.batchSize,r=t.inSize,i=t.numSegments,l=i*Math.ceil(r/s);this.outputShape=[a,l];const u="0.0",h="sumValue",d=Math.floor(s/4)*4,p=s%4,m=`
        sumValue += dot(values, segFilter);
    `;let y="";r%s>0&&(y=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let b="";r%s>0&&(b=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${y}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${b}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${d};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${h});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ftt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,segmentIds:r}=t,{numSegments:i}=s,l=a.shape.length,u=[];let h=0;const d=ze([h],l);let p=a;d!=null&&(p=Xn({inputs:{x:a},backend:e,attrs:{perm:d}}),u.push(p),h=Ke(1,l)[0]);const m=hA(p.shape,h,i),y=ht([p.shape[h]]),b=Nt({inputs:{x:p},backend:e,attrs:{shape:[-1,y]}});u.push(b);const v=uy(a.dtype),w=(C,I,R,L,M)=>{const O=C.shape[0],_=C.shape[1],A=cA(_,M),G={windowSize:A,inSize:_,batchSize:O,numSegments:M},X=new dtt(G,I),tt=e.compileAndRun(X,[C,R],L);if(u.push(tt),tt.shape[1]===M)return tt;const Q=pD({backend:e,attrs:{start:0,stop:M,step:1,dtype:"float32"}}),U=mD({inputs:{x:Q},backend:e,attrs:{reps:[_/A]}});return u.push(Q),u.push(U),w(tt,I,U,L,M)},S=w(b,"unsortedSegmentSum",r,v,i),T=Nt({inputs:{x:S},backend:e,attrs:{shape:m}});let $=T;if(d!=null){u.push(T);const C=Mi(d);$=Xn({inputs:{x:$},backend:e,attrs:{perm:C}})}return u.forEach(C=>e.disposeIntermediateTensorInfo(C)),$}const ptt={kernelName:Qd,backendName:"webgl",kernelFunc:ftt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mtt=[Q8,tK,sK,iK,lK,hK,fK,mK,xK,wK,TK,kK,AK,_K,zK,BK,PK,HK,qK,XK,JK,iX,lX,dX,pX,vX,SX,$X,F8,EX,_X,MX,GX,qX,XX,ZX,JX,s7,i7,u7,h7,f7,m7,b7,v7,T7,$7,E7,D7,_7,M7,U7,j7,X7,Q7,J7,e9,s9,r9,o9,u9,f9,g9,x9,w9,T9,k9,R9,F9,_8,z9,DX,V9,W9,j9,z8,Y9,tY,nY,iY,uY,fY,gY,vY,TY,kY,EY,OY,FY,zY,PY,WY,HY,qY,XY,JY,sZ,oZ,mZ,V8,xZ,SZ,CZ,IZ,gX,RZ,OZ,FZ,MZ,UZ,B8,GZ,jZ,KZ,YZ,ZZ,yX,hZ,tQ,aQ,lQ,U8,dQ,mQ,xQ,SQ,$Q,IQ,RQ,_Q,zQ,VQ,WQ,jQ,YQ,JQ,sJ,iJ,aX,fZ,uJ,hJ,fJ,mJ,yJ,xJ,wJ,NJ,CJ,IJ,AJ,DJ,_J,zJ,BJ,PJ,WJ,dZ,X8,jJ,XJ,ZJ,ttt,att,ott,Y8,utt,htt,ptt,DZ];for(const n of mtt)ly(n);var Sm={exports:{}},gtt=Sm.exports,J$;function ytt(){return J$||(J$=1,function(n,t){(function(s,a){n.exports=a(Jm())})(gtt,function(e){return function(s){var a={};function r(i){if(a[i])return a[i].exports;var l=a[i]={i,l:!1,exports:{}};return s[i].call(l.exports,l,l.exports,r),l.l=!0,l.exports}return r.m=s,r.c=a,r.d=function(i,l,u){r.o(i,l)||Object.defineProperty(i,l,{enumerable:!0,get:u})},r.r=function(i){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})},r.t=function(i,l){if(l&1&&(i=r(i)),l&8||l&4&&typeof i=="object"&&i&&i.__esModule)return i;var u=Object.create(null);if(r.r(u),Object.defineProperty(u,"default",{enumerable:!0,value:i}),l&2&&typeof i!="string")for(var h in i)r.d(u,h,(function(d){return i[d]}).bind(null,h));return u},r.n=function(i){var l=i&&i.__esModule?function(){return i.default}:function(){return i};return r.d(l,"a",l),l},r.o=function(i,l){return Object.prototype.hasOwnProperty.call(i,l)},r.p="",r(r.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(s,a,r){r.r(a);var i=r("react"),l=function(){var m=function(y,b){return m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(v,w){v.__proto__=w}||function(v,w){for(var S in w)w.hasOwnProperty(S)&&(v[S]=w[S])},m(y,b)};return function(y,b){m(y,b);function v(){this.constructor=y}y.prototype=b===null?Object.create(b):(v.prototype=b.prototype,new v)}}(),u=function(){return u=Object.assign||function(m){for(var y,b=1,v=arguments.length;b<v;b++){y=arguments[b];for(var w in y)Object.prototype.hasOwnProperty.call(y,w)&&(m[w]=y[w])}return m},u.apply(this,arguments)},h=function(m,y){var b={};for(var v in m)Object.prototype.hasOwnProperty.call(m,v)&&y.indexOf(v)<0&&(b[v]=m[v]);if(m!=null&&typeof Object.getOwnPropertySymbols=="function")for(var w=0,v=Object.getOwnPropertySymbols(m);w<v.length;w++)y.indexOf(v[w])<0&&Object.prototype.propertyIsEnumerable.call(m,v[w])&&(b[v[w]]=m[v[w]]);return b};(function(){typeof window>"u"||(navigator.mediaDevices===void 0&&(navigator.mediaDevices={}),navigator.mediaDevices.getUserMedia===void 0&&(navigator.mediaDevices.getUserMedia=function(y){var b=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return b?new Promise(function(v,w){b.call(navigator,y,v,w)}):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}))})();function d(){return!!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)}var p=function(m){l(y,m);function y(b){var v=m.call(this,b)||this;return v.canvas=null,v.ctx=null,v.requestUserMediaId=0,v.unmounted=!1,v.state={hasUserMedia:!1},v}return y.prototype.componentDidMount=function(){var b=this,v=b.state,w=b.props;if(this.unmounted=!1,!d()){w.onUserMediaError("getUserMedia not supported");return}v.hasUserMedia||this.requestUserMedia(),w.children&&typeof w.children!="function"&&console.warn("children must be a function")},y.prototype.componentDidUpdate=function(b){var v=this.props;if(!d()){v.onUserMediaError("getUserMedia not supported");return}var w=JSON.stringify(b.audioConstraints)!==JSON.stringify(v.audioConstraints),S=JSON.stringify(b.videoConstraints)!==JSON.stringify(v.videoConstraints),T=b.minScreenshotWidth!==v.minScreenshotWidth,$=b.minScreenshotHeight!==v.minScreenshotHeight;(S||T||$)&&(this.canvas=null,this.ctx=null),(w||S)&&(this.stopAndCleanup(),this.requestUserMedia())},y.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},y.stopMediaStream=function(b){b&&(b.getVideoTracks&&b.getAudioTracks?(b.getVideoTracks().map(function(v){b.removeTrack(v),v.stop()}),b.getAudioTracks().map(function(v){b.removeTrack(v),v.stop()})):b.stop())},y.prototype.stopAndCleanup=function(){var b=this.state;b.hasUserMedia&&(y.stopMediaStream(this.stream),b.src&&window.URL.revokeObjectURL(b.src))},y.prototype.getScreenshot=function(b){var v=this,w=v.state,S=v.props;if(!w.hasUserMedia)return null;var T=this.getCanvas(b);return T&&T.toDataURL(S.screenshotFormat,S.screenshotQuality)},y.prototype.getCanvas=function(b){var v=this,w=v.state,S=v.props;if(!this.video||!w.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var T=this.video.videoWidth,$=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var C=T/$;T=S.minScreenshotWidth||this.video.clientWidth,$=T/C,S.minScreenshotHeight&&$<S.minScreenshotHeight&&($=S.minScreenshotHeight,T=$*C)}this.canvas=document.createElement("canvas"),this.canvas.width=(b==null?void 0:b.width)||T,this.canvas.height=(b==null?void 0:b.height)||$,this.ctx=this.canvas.getContext("2d")}var I=this,R=I.ctx,L=I.canvas;return R&&L&&(L.width=(b==null?void 0:b.width)||L.width,L.height=(b==null?void 0:b.height)||L.height,S.mirrored&&(R.translate(L.width,0),R.scale(-1,1)),R.imageSmoothingEnabled=S.imageSmoothing,R.drawImage(this.video,0,0,(b==null?void 0:b.width)||L.width,(b==null?void 0:b.height)||L.height),S.mirrored&&(R.scale(-1,1),R.translate(-L.width,0))),L},y.prototype.requestUserMedia=function(){var b=this,v=this.props,w=function($,C){var I={video:typeof C<"u"?C:!0};v.audio&&(I.audio=typeof $<"u"?$:!0),b.requestUserMediaId++;var R=b.requestUserMediaId;navigator.mediaDevices.getUserMedia(I).then(function(L){b.unmounted||R!==b.requestUserMediaId?y.stopMediaStream(L):b.handleUserMedia(null,L)}).catch(function(L){b.handleUserMedia(L)})};if("mediaDevices"in navigator)w(v.audioConstraints,v.videoConstraints);else{var S=function($){return{optional:[{sourceId:$}]}},T=function($){var C=$.deviceId;return typeof C=="string"?C:Array.isArray(C)&&C.length>0?C[0]:typeof C=="object"&&C.ideal?C.ideal:null};MediaStreamTrack.getSources(function($){var C=null,I=null;$.forEach(function(M){M.kind==="audio"?C=M.id:M.kind==="video"&&(I=M.id)});var R=T(v.audioConstraints);R&&(C=R);var L=T(v.videoConstraints);L&&(I=L),w(S(C),S(I))})}},y.prototype.handleUserMedia=function(b,v){var w=this.props;if(b||!v){this.setState({hasUserMedia:!1}),w.onUserMediaError(b);return}this.stream=v;try{this.video&&(this.video.srcObject=v),this.setState({hasUserMedia:!0})}catch{this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(v)})}w.onUserMedia(v)},y.prototype.render=function(){var b=this,v=this,w=v.state,S=v.props,T=S.audio;S.forceScreenshotSourceSize;var $=S.disablePictureInPicture;S.onUserMedia,S.onUserMediaError,S.screenshotFormat,S.screenshotQuality,S.minScreenshotWidth,S.minScreenshotHeight,S.audioConstraints,S.videoConstraints,S.imageSmoothing;var C=S.mirrored,I=S.style,R=I===void 0?{}:I,L=S.children,M=h(S,["audio","forceScreenshotSourceSize","disablePictureInPicture","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),O=C?u(u({},R),{transform:(R.transform||"")+" scaleX(-1)"}):R,_={getScreenshot:this.getScreenshot.bind(this)};return i.createElement(i.Fragment,null,i.createElement("video",u({autoPlay:!0,disablePictureInPicture:$,src:w.src,muted:!T,playsInline:!0,ref:function(A){b.video=A},style:O},M)),L&&L(_))},y.defaultProps={audio:!1,disablePictureInPicture:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},y}(i.Component);a.default=p},react:function(s,a){s.exports=e}}).default})}(Sm)),Sm.exports}var btt=ytt();const xtt=Ok(btt);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gD={kernelName:Zh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,Jo(wt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vtt={kernelName:hu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=be(wt(e,"float32")),a=xn(kt(_t(1),s));return ke(At(n,a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wtt={kernelName:du,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=xn(kt(be(wt(e,"float32")),1));return At(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Stt={kernelName:Yo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{let l=n;const u=en(e.shape,a);return u.length>0&&(l=Et(l,u)),j(l,e.shape)},b:()=>{let l=n;const u=en(s.shape,a);return u.length>0&&(l=Et(l,u)),j(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ntt={kernelName:Qh,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,a)=>{e[a]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ttt={kernelName:Jh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ne(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ctt={kernelName:td,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ne(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $tt={kernelName:fu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>At(n,xn(kt(_t(1),be(wt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ktt={kernelName:pu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=xn(yt(_t(1),be(wt(e,"float32"))));return At(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Itt={kernelName:yu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=yt(be(e),be(s));let u=H(n,At(s,l));const h=en(e.shape,a);return h.length>0&&(u=Et(u,h)),j(u,e.shape)},b:()=>{const l=yt(be(e),be(s));let u=ke(H(n,At(e,l)));const h=en(s.shape,a);return h.length>0&&(u=Et(u,h)),j(u,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ett={kernelName:mu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>At(n,yt(be(wt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Att={kernelName:gu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>At(n,kt(_t(1),be(wt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rtt(n,t,e,s,a,r){const i=F(n,"dy","avgPool3dGrad"),l=F(t,"input","avgPool3dGrad");let u=i,h=l,d=!1;l.rank===4&&(d=!0,u=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=j(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),D(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),D(h.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),Yn("avgPool3dGrad",a,r);const p={dy:u,input:h},m={filterSize:e,strides:s,pad:a,dimRoundingMode:r},y=P.runKernel(ig,p,m);return d?j(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const Dtt=W({avgPool3dGrad_:Rtt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ott={kernelName:nd,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:a,strides:r,pad:i,dimRoundingMode:l}=e;return{x:()=>Dtt(n,s,a,r,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _tt(n,t,e,s,a){const r=F(n,"dy","avgPoolGrad"),i=F(t,"input","avgPoolGrad");D(i.rank===r.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`);let l=i,u=r,h=!1;i.rank===3&&(h=!0,l=j(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=j(r,[1,r.shape[0],r.shape[1],r.shape[2]])),D(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`);const d={dy:u,input:l},p={filterSize:e,strides:s,pad:a},m=P.runKernel(rg,d,p);return h?j(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Ftt=W({avgPoolGrad_:_tt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ltt={kernelName:ed,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:a,strides:r,pad:i}=e;return{x:()=>Ftt(n,s,a,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ztt={kernelName:sd,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,a]=t,{transposeA:r,transposeB:i}=e;return!r&&!i?{a:()=>jt(n,a,!1,!0),b:()=>jt(s,n,!0,!1)}:!r&&i?{a:()=>jt(n,a,!1,!1),b:()=>jt(n,s,!0,!1)}:r&&!i?{a:()=>jt(a,n,!1,!0),b:()=>jt(s,n,!1,!1)}:{a:()=>jt(a,n,!0,!0),b:()=>jt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mtt={kernelName:ad,gradFunc:(n,t,e)=>{const{blockShape:s,crops:a}=e;return{x:()=>pf(n,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Btt={kernelName:Gk,gradFunc:(n,t,e)=>{const s=e,a=s.inputShape,r=s.shape,i=Array.from(r);for(let u=a.length-1;u>=0;u--)if(a[u]===r[u])i[u]=1;else if(a[u]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${r}].`);const l=[];for(let u=0;u<i.length;u++)i[u]>1&&l.push(u);return{x:()=>Et(n,l,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vtt={kernelName:bu,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ptt={kernelName:xu,gradFunc:n=>({x:()=>ne(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Utt={kernelName:vu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:a,clipValueMax:r}=e;return{x:()=>In(Ia(Mr(s,a),Bi(s,r)),n,ne(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wtt={kernelName:id,inputsToSave:["x"],gradFunc:gD.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gtt={kernelName:od,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(u=>u.shape),{axis:a}=e,r=Kt(a,t[0].shape)[0],i=s.map(u=>u[r]);return as(n,i,r).map(u=>()=>u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Htt={kernelName:ld,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,{dilations:r,strides:i,pad:l,dataFormat:u}=e;return D(ki(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>Dv(s.shape,n,a,i,l,u),filter:()=>mw(s,n,a.shape,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jtt={kernelName:ud,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,{strides:r,pad:i,dataFormat:l,dimRoundingMode:u}=e;return{dy:()=>Rr(n,a,r,i,l,1,u),filter:()=>mw(n,s,a.shape,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qtt(n,t,e,s,a){let r=n;n.rank===4&&(r=j(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=t;i.rank===4&&(i=j(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),D(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),D(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),D(r.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${e[3]}.`),D(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);const l={x:r,dy:i},u={strides:s,pad:a,filterShape:e};return P.runKernel(hg,l,u)}const Ktt=W({conv3DBackpropFilter_:qtt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xtt={kernelName:cd,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:a,pad:r}=e;D(ki(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,l]=t;return{x:()=>CI(i.shape,n,l,a,r),filter:()=>Ktt(i,n,l.shape,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ytt={kernelName:wu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(ke(Ey(wt(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ztt={kernelName:Su,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(Ay(wt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qtt={kernelName:hd,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a,exclusive:r,reverse:i}=e;return{x:()=>{const l=ze([a],s.rank);let u=my(n,a,r,!i);return l!=null&&(u=Jt(u,l)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jtt={kernelName:dd,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:a,pad:r,dimRoundingMode:i}=e,l=s??[1,1];D(ki(l),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${l}'`);const[u,h]=t;return D(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),D(h.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${h.rank}.`),D(u.shape[3]===h.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),D(Rn(a,l),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${l}'.`),Yn("depthwiseConv2d",r,i),{x:()=>pE(u.shape,n,h,a,r,l,i),filter:()=>fE(u,n,h.shape,a,r,l,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tet={kernelName:fd,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,r={x:s,filter:a,dy:n},i={x:s,filter:a,dy:n};return{x:()=>P.runKernel($m,r,e),filter:()=>P.runKernel(km,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eet={kernelName:Tu,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>P.runKernel(Sg,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const net={kernelName:Cu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=H(ls(ke(be(e))),2/Math.sqrt(Math.PI));return{x:()=>H(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const set={kernelName:$u,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aet={kernelName:md,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>j(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ret={kernelName:ku,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,ls(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iet={kernelName:Iu,gradFunc:n=>({x:()=>ne(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oet={kernelName:Eu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=At(n,wt(s,"float32")),u=en(e.shape,a);return u.length>0?j(Et(l,u),e.shape):l},b:()=>{let l=H(n,wt(e,"float32"));const u=en(s.shape,a);u.length>0&&(l=j(Et(l,u),s.shape));const h=be(s);return ke(At(l,wt(h,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uet={kernelName:gd,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[a,r,i,l]=t,u=l??_t(1),h=en(r.shape,a.shape),d=[];if(r.rank===1){for(let C=0;C<a.shape.length-1;++C)d.push(a.shape[C]);d.push(1)}const p=kt(a,r),m=H(n,u),y=$y(yt(i,_t(s))),b=H(H(H(y,y),y),_t(-.5));return{x:()=>r.rank===1?j(H(H(n,_s(j(y,[1,1,1,r.shape[0]]),d)),u),a.shape):j(H(H(n,y),u),a.shape),mean:()=>{let C=H(H(y,_t(-1)),m);return r.rank===1&&(C=Et(C,h)),j(C,r.shape)},variance:()=>{let C=H(H(b,p),m);return r.rank===1&&(C=Et(C,h)),j(C,r.shape)},scale:()=>{const C=H(p,y);let I=H(n,C);return r.rank===1&&(I=Et(I,h)),j(I,r.shape)},offset:()=>{let C=n;return r.rank===1&&(C=Et(C,h)),j(C,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cet={kernelName:yd,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,a]=t,{axis:r,batchDims:i}=e,l=Kt(r,s.shape)[0],u=(h,d,p)=>()=>{const m=h.shape,y=d.size,b=m.slice(0,l),v=b.length,w=m.slice(r,m.length).slice(1),S=w.length,T=tk(0,v),$=tk(v+1,v+1+S),C=ek([b,[y],w]),I=j(p,C),R=j(d,[y]),L=ek([[v],T,$]),M=Jt(I,L);let O=Ly(M,R,h.shape[l]);const _=Mi(L);return O=Jt(O,_),O};if(i===1){const h=s.shape[0],d=s.split(h,0);return{x:()=>us(d.map((y,b)=>u(y,a.slice(b,1),n.slice(b,1))())).reshape(s.shape),indices:()=>a}}else return{x:u(s,a,n),indices:()=>a}}};function tk(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function ek(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const het={kernelName:Au,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>ne(e),b:()=>ne(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const det={kernelName:Ru,gradFunc:n=>({x:()=>wt(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fet={kernelName:Du,gradFunc:n=>({x:()=>ne(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pet={kernelName:Ou,gradFunc:n=>({x:()=>ne(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const met={kernelName:_u,gradFunc:n=>({x:()=>ne(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const get={kernelName:xd,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:a}=e,r=hs(s,0);return{x:()=>In(r,n,H(n,a))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yet={kernelName:Lu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>At(n,yt(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bet={kernelName:Fu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>At(n,wt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xet={kernelName:Hk,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e;return{logits:()=>{const i=ls(s);return kt(n,H(Et(n,a,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vet(n,t,e,s=5,a=1,r=1,i=.5){const l={x:n,y:t,dy:e},u={depthRadius:s,bias:a,alpha:r,beta:i};return P.runKernel(Ag,l,u)}const wet=W({localResponseNormalizationBackprop_:vet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Net={kernelName:Cd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{depthRadius:r,bias:i,alpha:l,beta:u}=e;return{x:()=>wet(s,a,n,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(n,t,e,s){return t.rank<e.rank&&(t=j(t,qe(t.shape,s))),n.rank<e.rank&&(n=j(n,qe(n.shape,s))),{x:()=>H(n,wt(ca(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nk={kernelName:$d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:a}=s,r=t[0],i=t[1],l=Kt(a,r.shape),u=yD(n,i,r,l);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tet={kernelName:zu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>H(n,wt(Mr(e,s),"float32")),b:()=>H(n,wt(tu(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cet(n,t,e,s,a,r,i){const l=F(n,"dy","maxPool3dGrad"),u=F(t,"input","maxPool3dGrad"),h=F(e,"output","maxPool3dGrad");let d=l,p=u,m=h,y=!1;u.rank===4&&(y=!0,d=j(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=j(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),m=j(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),D(d.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),D(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),D(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),Yn("maxPool3dGrad",r,i);const b={dy:d,input:p,output:m},v={filterSize:s,strides:a,pad:r,dimRoundingMode:i},w=P.runKernel(Dg,b,v);return y?j(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}const $et=W({maxPool3dGrad_:Cet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ket={kernelName:Id,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=e;return{x:()=>$et(n,s,a,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iet(n,t,e,s,a,r,i){const l=F(n,"dy","maxPoolGrad"),u=F(t,"input","maxPoolGrad"),h=F(e,"output","maxPoolGrad");D(u.rank===l.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${l.rank})`),D(l.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Yn("maxPoolGrad",r,i);const d={dy:l,input:u,output:h},p={filterSize:s,strides:a,pad:r,dimRoundingMode:i};return P.runKernel(Rg,d,p)}const Eet=W({maxPoolGrad_:Iet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aet={kernelName:kd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{filterSize:r,strides:i,pad:l}=e;return{x:()=>Eet(n,s,a,r,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ret={kernelName:Ed,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e,r=Kt(a,s.shape),l=wn(s.shape,r)[1],u=ht(l);return{x:()=>{const d=s.shape.slice();r.forEach(y=>{d[y]=1});const p=j(n,d);return At(H(p,ss(s.shape,"float32")),u)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Det={kernelName:Ad,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:a}=s,[r,i]=t,l=Kt(a,r.shape),u=yD(n,i,r,l);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oet={kernelName:Mu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>H(n,wt(Bi(e,s),"float32")),b:()=>H(n,wt(hs(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _et={kernelName:Rd,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:a}=e,r=a.map(i=>i[0]);return{x:()=>ee(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fet={kernelName:Bu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=en(e.shape,a);return l.length>0?j(Et(n,l),e.shape):n},b:()=>{const l=H(n,ke(cc(At(e,s)))),u=en(s.shape,a);return u.length>0?j(Et(l,u),s.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Let={kernelName:Vu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=H(n,wt(s,"float32")),u=en(e.shape,a);return u.length>0?j(Et(l,u),e.shape):l},b:()=>{const l=H(n,wt(e,"float32")),u=en(s.shape,a);return u.length>0?j(Et(l,u),s.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zet={kernelName:Dd,gradFunc:n=>({x:()=>ke(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Met={kernelName:Fd,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>Je(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bet={kernelName:_d,gradFunc:n=>({x:()=>ne(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vet={kernelName:Ld,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return Bs(n,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sk={kernelName:zd,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:a}=e,r=a.map(i=>i[0]);return{x:()=>ee(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pet={kernelName:Pu,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,a]=t,r=e,i=s,l=Pt(r.shape,i.shape);return{a:()=>{const d=wt(i,"float32");let p=H(n,H(d,Ja(r,kt(d,_t(1)))));const m=en(r.shape,l);return m.length>0&&(p=Et(p,m)),j(p,r.shape)},b:()=>{const d=hs(r,0),p=In(d,xs(r),ne(r));let m=H(n,H(a,p));const y=en(i.shape,l);return y.length>0&&(m=Et(m,y)),j(m,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uet={kernelName:Md,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,a=hs(e,0);return{x:()=>In(a,n,H(n,s)),alpha:()=>{let r=In(a,ne(n),H(n,e));const i=en(s.shape,n.shape);return i.length>0&&(r=Et(r,i)),j(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wet(n,t,e){const s=n.shape.slice();s[e]=1;const a=j(t,s),r=Uh(n,e,!0,!1),i=Uh(n,e,!0,!0),l=H(r,i);return H(a,l)}function Get(n,t,e){const s=n.shape.length,a=s-e.length,r=ze(e,s);let i=n;r!=null&&(i=Jt(n,r));const l=i.shape.slice(),h=l.splice(s-e.length,e.length).reduce((m,y)=>m*y,1);l.push(h);const d=i.reshape(l);let p=Wet(d,t,a);if(p=p.reshape(i.shape),r!=null){const m=Mi(r);p=Jt(p,m)}return p}const Het={kernelName:Bd,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e;let r=[];return a==null?r=s.shape.map((i,l)=>l):typeof a=="number"?r=[a]:r=a,{x:()=>Get(s,n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jet={kernelName:Nu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=At(n,wt(s,"float32")),u=en(e.shape,a);return u.length>0?j(Et(l,u),e.shape):l},b:()=>{let l=H(n,wt(e,"float32"));const u=en(s.shape,a);u.length>0&&(l=j(Et(l,u),s.shape));const h=be(s);return ke(At(l,wt(h,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qet={kernelName:Uu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>At(n,ke(be(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ket={kernelName:Gu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=H(Bi(e,6),Jo(e));return{x:()=>H(n,wt(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xet={kernelName:Wu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,wt(Jo(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yet={kernelName:Vd,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>j(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zet={kernelName:Ud,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,a={dy:n,images:s};return{images:()=>P.runKernel(Gg,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qet={kernelName:Pd,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,a={dy:n,images:s};return{images:()=>P.runKernel(Wg,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jet={kernelName:Wd,gradFunc:(n,t,e)=>{const{dims:s}=e,a=Kt(s,n.shape);return{x:()=>Ms(n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tnt={kernelName:Hu,gradFunc:n=>({x:()=>ne(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ent={kernelName:ju,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ke(At(n,H(Ja(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nnt={kernelName:Gd,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>wt(ne(e),"float32"),t:()=>H(n,wt(e,n.dtype)),e:()=>H(n,wt(hf(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const snt={kernelName:qu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=hs(e,_t(0)),a=_t(Yy),r=_t(Zy),i=H(n,r),l=H(H(n,a),ls(wt(e,"float32")));return In(s,i,l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ant={kernelName:Zu,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,H(e,kt(_t(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rnt={kernelName:Yu,gradFunc:n=>({x:()=>ne(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const int={kernelName:Ku,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(rf(wt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ont={kernelName:Xu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(py(wt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lnt={kernelName:Hd,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:a,size:r}=e,i=s.shape,[l,u]=Ky(s,a,r),h=[];for(let d=0;d<n.rank;d++)h.push([l[d],i[d]-l[d]-u[d]]);return{x:()=>Br(n,h)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unt={kernelName:Xd,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:a}=e,r=!0,i=H(n,s);return{logits:()=>kt(i,H(Et(i,[a],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cnt={kernelName:Qu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,ua(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ak={kernelName:qd,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:a}=e;return{x:()=>af(n,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rk={kernelName:Kd,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>Pe(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hnt={kernelName:Ju,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>At(n,H(xn(wt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dnt={kernelName:Jg,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,H(wt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fnt={kernelName:tc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=_t(2);return{a:()=>H(n,H(a,kt(e,s))),b:()=>H(n,H(a,kt(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pnt={kernelName:rc,gradFunc:n=>({x:()=>ne(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mnt={kernelName:ec,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{let l=n;const u=en(e.shape,a);return u.length>0&&(l=Et(l,u)),j(l,e.shape)},b:()=>{let l=n;const u=en(s.shape,a);return u.length>0&&(l=Et(l,u)),j(ke(l),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gnt={kernelName:jd,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,a=s.shape.slice(),{axis:r}=e;Kt(r,s.shape).forEach(h=>{a[h]=1});const l=j(n,a),u=H(l,ss(s.shape,"float32"));return{x:()=>u}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ynt={kernelName:nc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>At(n,be(rf(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bnt={kernelName:sc,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(kt(_t(1),be(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xnt={kernelName:ac,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:a}=e;return{x:()=>{let i=ne(s);if(s.rank===1)for(let l=0;l<a[0];++l)i=yt(i,ee(n,[l*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)i=yt(i,ee(n,[l*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)for(let h=0;h<a[2];++h)i=yt(i,ee(n,[l*s.shape[0],u*s.shape[1],h*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)for(let h=0;h<a[2];++h)for(let d=0;d<a[3];++d)i=yt(i,ee(n,[l*s.shape[0],u*s.shape[1],h*s.shape[2],d*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vnt={kernelName:Io,gradFunc:(n,t,e)=>{const s=e,{perm:a}=s,r=Mi(a);return{x:()=>Jt(n,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wnt={kernelName:Zd,gradFunc:(n,t,e)=>{const s=e,{axis:a}=s;return{value:()=>us(n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Snt={kernelName:Qd,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Nnt(n,e)}}};function Nnt(n,t){const e=sr(t,ne(t)),s=hc(n,e);let a=Mr(t,_t(0,"int32"));const r=s.rank-a.rank;for(let l=0;l<r;++l)a=rn(a,l+1);a=Ia(a,ss(s.shape,"bool"));const i=ne(s);return In(a,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tnt={kernelName:Jd,gradFunc:n=>({x:()=>ne(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cnt=[gD,vtt,wtt,Stt,Ntt,Ttt,Ctt,$tt,ktt,Itt,Ett,Att,Ott,Ltt,ztt,Mtt,Btt,Vtt,Ptt,Utt,Wtt,Gtt,jtt,Htt,Xtt,Ytt,Ztt,Qtt,Jtt,tet,jet,eet,net,set,aet,ret,oet,iet,uet,cet,het,det,fet,pet,met,get,yet,bet,xet,Net,nk,nk,Tet,ket,Aet,Ret,Det,Oet,_et,Fet,Let,zet,Met,Bet,Vet,sk,sk,Pet,Uet,Het,qet,Ket,Xet,Yet,Zet,Qet,Jet,tnt,ent,nnt,snt,ant,rnt,int,ont,lnt,unt,cnt,ak,ak,rk,rk,hnt,fnt,dnt,pnt,mnt,gnt,ynt,bnt,xnt,vnt,wnt,Snt,Tnt];for(const n of Cnt)jk(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.abs=function(){return this.throwIfDisposed(),Qe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.acos=function(){return this.throwIfDisposed(),fv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.acosh=function(){return this.throwIfDisposed(),pv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.add=function(n){return this.throwIfDisposed(),yt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.all=function(n,t){return this.throwIfDisposed(),hy(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.any=function(n,t){return this.throwIfDisposed(),Bh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.argMax=function(n){return this.throwIfDisposed(),$i(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.argMin=function(n){return this.throwIfDisposed(),mv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asScalar=function(){return this.throwIfDisposed(),D(this.size===1,()=>"The array must have only 1 element."),j(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asType=function(n){return this.throwIfDisposed(),wt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as1D=function(){return this.throwIfDisposed(),j(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as2D=function(n,t){return this.throwIfDisposed(),j(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),j(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),j(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as5D=function(n,t,e,s,a){return this.throwIfDisposed(),j(this,[n,t,e,s,a])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asin=function(){return this.throwIfDisposed(),gv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asinh=function(){return this.throwIfDisposed(),yv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atan=function(){return this.throwIfDisposed(),bv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atan2=function(n){return this.throwIfDisposed(),xv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atanh=function(){return this.throwIfDisposed(),vv(this)};dt().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),sf(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),af(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.batchNorm=function(n,t,e,s,a){return this.throwIfDisposed(),ic(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Eo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cast=function(n){return this.throwIfDisposed(),wt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.ceil=function(){return this.throwIfDisposed(),kv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),os(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof he&&(n=[n]),Pe([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv1d=function(n,t,e,s,a,r){return this.throwIfDisposed(),dy(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv2dTranspose=function(n,t,e,s,a){return this.throwIfDisposed(),fy(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),Rr(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cos=function(){return this.throwIfDisposed(),rf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cosh=function(){return this.throwIfDisposed(),py(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),Uh(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),my(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),Fv(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.depthwiseConv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),oc(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.dilation2d=function(n,t,e,s,a){return this.throwIfDisposed(),Lv(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.divNoNan=function(n){return this.throwIfDisposed(),zv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.div=function(n){return this.throwIfDisposed(),At(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.dot=function(n){return this.throwIfDisposed(),Mv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.elu=function(){return this.throwIfDisposed(),lc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.equal=function(n){return this.throwIfDisposed(),ca(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.erf=function(){return this.throwIfDisposed(),gy(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),Vv(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.exp=function(){return this.throwIfDisposed(),ls(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.expandDims=function(n){return this.throwIfDisposed(),rn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.expm1=function(){return this.throwIfDisposed(),Pv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.fft=function(){return this.throwIfDisposed(),xf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.flatten=function(){return this.throwIfDisposed(),j(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.floor=function(){return this.throwIfDisposed(),cc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.floorDiv=function(n){return this.throwIfDisposed(),cy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.gather=function(n,t,e){return this.throwIfDisposed(),hc(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Mr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.greater=function(n){return this.throwIfDisposed(),hs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.ifft=function(){return this.throwIfDisposed(),au(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.irfft=function(){return this.throwIfDisposed(),Dy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isFinite=function(){return this.throwIfDisposed(),Uv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isInf=function(){return this.throwIfDisposed(),Wv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isNaN=function(){return this.throwIfDisposed(),Gv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.leakyRelu=function(n){return this.throwIfDisposed(),lf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.lessEqual=function(n){return this.throwIfDisposed(),Bi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.less=function(n){return this.throwIfDisposed(),tu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),Hv(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSigmoid=function(){return this.throwIfDisposed(),jv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSoftmax=function(n){return this.throwIfDisposed(),xy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),cf(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.log=function(){return this.throwIfDisposed(),xs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.log1p=function(){return this.throwIfDisposed(),uf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Ia(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalNot=function(){return this.throwIfDisposed(),hf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalOr=function(n){return this.throwIfDisposed(),vy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalXor=function(n){return this.throwIfDisposed(),qv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),jt(this,n,t,e)};dt().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),df(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.max=function(n,t){return this.throwIfDisposed(),zs(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.maximum=function(n){return this.throwIfDisposed(),sr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mean=function(n,t){return this.throwIfDisposed(),_e(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.min=function(n,t){return this.throwIfDisposed(),Jl(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.minimum=function(n){return this.throwIfDisposed(),Ei(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),Xv(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mod=function(n){return this.throwIfDisposed(),Yv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mul=function(n){return this.throwIfDisposed(),H(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.neg=function(){return this.throwIfDisposed(),ke(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.norm=function(n,t,e){return this.throwIfDisposed(),uc(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.notEqual=function(n){return this.throwIfDisposed(),Bo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),eu(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.onesLike=function(){return this.throwIfDisposed(),vs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.pad=function(n,t){return this.throwIfDisposed(),Br(this,n,t)};dt().prototype.pool=function(n,t,e,s,a,r){return this.throwIfDisposed(),Qv(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.pow=function(n){return this.throwIfDisposed(),Ja(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.prelu=function(n){return this.throwIfDisposed(),mf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.prod=function(n,t){return this.throwIfDisposed(),Jv(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reciprocal=function(){return this.throwIfDisposed(),sw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.relu=function(){return this.throwIfDisposed(),Oa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.relu6=function(){return this.throwIfDisposed(),Ty(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reshapeAs=function(n){return this.throwIfDisposed(),j(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reshape=function(n){return this.throwIfDisposed(),j(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),bE(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),xE(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reverse=function(n){return this.throwIfDisposed(),Ms(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.rfft=function(){return this.throwIfDisposed(),vf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.round=function(){return this.throwIfDisposed(),Cy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.rsqrt=function(){return this.throwIfDisposed(),$y(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.selu=function(){return this.throwIfDisposed(),ky(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.separableConv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),Iy(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sigmoid=function(){return this.throwIfDisposed(),ua(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sign=function(){return this.throwIfDisposed(),aw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sin=function(){return this.throwIfDisposed(),Ey(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sinh=function(){return this.throwIfDisposed(),Ay(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.slice=function(n,t){return this.throwIfDisposed(),ee(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.softmax=function(n){return this.throwIfDisposed(),bf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.softplus=function(){return this.throwIfDisposed(),Qo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),pf(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.split=function(n,t){return this.throwIfDisposed(),as(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sqrt=function(){return this.throwIfDisposed(),xn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.square=function(){return this.throwIfDisposed(),be(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Oy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.squeeze=function(n){return this.throwIfDisposed(),Vr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof he?[this,n]:[this,...n];return us(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.step=function(n){return this.throwIfDisposed(),Jo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.stridedSlice=function(n,t,e,s,a,r,i,l){return this.throwIfDisposed(),rw(this,n,t,e,s,a,r,i,l)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sub=function(n){return this.throwIfDisposed(),kt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sum=function(n,t){return this.throwIfDisposed(),Et(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tan=function(){return this.throwIfDisposed(),iw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tanh=function(){return this.throwIfDisposed(),Ii(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tile=function(n){return this.throwIfDisposed(),_s(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toBool=function(){return this.throwIfDisposed(),wt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toFloat=function(){return this.throwIfDisposed(),wt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toInt=function(){return this.throwIfDisposed(),wt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.topk=function(n,t){return this.throwIfDisposed(),uw(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.transpose=function(n){return this.throwIfDisposed(),Jt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unique=function(n){return this.throwIfDisposed(),cw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),Ly(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unstack=function(n){return this.throwIfDisposed(),Bs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.where=function(n,t){return this.throwIfDisposed(),In(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.zerosLike=function(){return this.throwIfDisposed(),ne(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Pa extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Pa.prototype)}}class oa extends Error{constructor(t){super(t),Object.setPrototypeOf(this,oa.prototype)}}class K extends Error{constructor(t){super(t),Object.setPrototypeOf(this,K.prototype)}}class Gt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Gt.prototype)}}class pS extends Error{constructor(t){super(t),Object.setPrototypeOf(this,pS.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bD{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jo(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function Ua(n,t){if(!n)throw new pS(t)}function ik(n,t){let e=0;for(const s of n)s===t&&e++;return e}function ns(n){return n.length===1?n[0]:n}function ge(n){return Array.isArray(n)?n:[n]}function Cr(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function To(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let ea={};function mS(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function M1(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>M1(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:M1(s))}}}function Af(n,t={},e={},s="object",a=!1){if(typeof n=="string"){const r=n;let i;if(r in e)i=e[r];else if(r in ea)i=ea[r];else if(i=t[r],i==null)throw new K(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const r=n;if(r.className==null||r.config==null)throw new K(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const i=r.className;let l,u;if(i in e?[l,u]=e[i]:i in ea?[l,u]=ea.className:i in t&&([l,u]=t[i]),l==null)throw new K(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const h={};for(const y of Object.keys(ea))h[y]=ea[y];for(const y of Object.keys(e))h[y]=e[y];const d=r.config;d.customObjects=h;const p=Object.assign({},ea);for(const y of Object.keys(e))ea[y]=e[y];M1(r.config);const m=u(l,r.config,e,a);return ea=Object.assign({},p),m}else{const h=Object.assign({},ea);for(const p of Object.keys(e))ea[p]=e[p];const d=new l(r.config);return ea=Object.assign({},h),d}}}function $nt(n,t){return n<t?-1:n>t?1:0}function om(n,t){return-1*$nt(n,t)}function vi(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function knt(n){if(n==null)throw new K(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function rl(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new K(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function gS(n,t,e=0,s=1/0){return Ua(e>=0),Ua(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(a=>typeof a===t)}function yn(n,t){Array.isArray(n)?(D(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>yn(e,`element ${s+1} of ${t}`))):D(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${xD(n)}.`)}function xD(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>xD(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function Int(n,t,e){let s=e!=null?e():Gn(),a;return(...i)=>{const l=e!=null?e():Gn();return l-s<t||(s=l,a=n(...i)),a}}function vD(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ent=0;function wD(){return Ent++}const lm={};function ab(n=""){return n in lm||(lm[n]=0),lm[n]+=1,n+lm[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ant=["channelsFirst","channelsLast"],Rnt=["nearest","bilinear"],Dnt=["valid","same","causal"],Ont=["max","avg"],_nt=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Gl=new Map;function Ye(n){rl(Ant,"DataFormat",n)}function Fnt(n){rl(Rnt,"InterpolationFormat",n)}function Vs(n){rl(Dnt,"PaddingMode",n)}function SD(n){rl(Ont,"PoolMode",n)}const Ah=[],ok="/";function Ro(n,t){Ah.push(n);try{const e=t();return Ah.pop(),e}catch(e){throw Ah.pop(),e}}function Lnt(){return Ah.length===0?"":Ah.join(ok)+ok}function ND(n){if(!CD(n))throw new Error("Not a valid tensor name: '"+n+"'");return Lnt()+n}function TD(n){if(!CD(n))throw new Error("Not a valid tensor name: '"+n+"'");Gl.has(n)||Gl.set(n,0);const t=Gl.get(n);if(Gl.set(n,Gl.get(n)+1),t>0){const e=`${n}_${t}`;return Gl.set(e,1),e}else return n}const znt=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function CD(n){return!!n.match(znt)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mnt(n){return n===parseInt(n.toString(),10)}function wi(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let a=t;a<e;++a)s*=n[a];return s}function lu(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function Ri(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function Aa(n,t){if(t<n)throw new K(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let jx;function ln(){return jx==null&&(jx=uv().epsilon()),jx}function Ra(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xa(n,t){return wt(n,t)}function Rf(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),j(n,e)}function Bnt(n,t){return nt(()=>{if(n.shape.length!==2)throw new K(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=Rf(n,1);return B1(e,[1,t,1])})}function Vnt(n){const t=[wi(n.shape)];return j(n,t)}function Pnt(n){if(n.rank<=1)throw new K(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],wi(n.shape,1)];return j(n,t)}function Do(n,t,e){return nt(()=>{switch(n.rank){case 1:return gf(n,t,e);case 2:return Ry(n,[t,0],[e,n.shape[1]]);case 3:return yf(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return su(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return ee(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return ee(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new K(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function qx(n,t,e){return nt(()=>{switch(n.rank){case 1:return gf(n,t,e);case 2:return Ry(n,[0,t],[n.shape[0],e]);case 3:return yf(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return su(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function um(n,t,e,s){return nt(()=>{switch(n.rank){case 1:return gf(n,t,e);case 2:switch(s){case 1:return Do(n,t,e);case 2:return qx(n,t,e);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Do(n,t,e);case 2:return yf(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return qx(n,t,e);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Do(n,t,e);case 2:return su(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return su(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return qx(n,t,e);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function yS(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),Pe(n,t)}function lk(n,t){switch(n.rank){case 1:return Iv([n,t]);case 2:return Ev([n,t],0);case 3:return Av([n,t],0);case 4:return Rv([n,t],0);default:throw new K(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function B1(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new K(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return _s(n,t)}function rb(n,t=0,e=1,s,a){return Ny(n,t,e,s,a)}function Ya(n,t,e,s){if(n.rank<2||t.rank<2)throw new Gt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const a=n.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(a!==r)throw new Gt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return m1({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?V1(n.rank,s,Ra()):null,activation:e});{const a=n.shape.slice(),r=a.pop();n=j(n,[-1,r]);const i=t.shape.slice(),l=i.pop(),u=i.pop(),h=[...i,l],d=Array.from({length:t.rank},(b,v)=>v===0?t.rank-2:v<=t.rank-2?v-1:v);t=j(Jt(t,d),[u,-1]);const p=[...a,...h];return j(m1({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?V1(n.rank,s,Ra()):null,activation:e}),p)}}function $D(n,t,e){return nt(()=>(Array.isArray(t)?t=Mn(t,"int32"):t=wt(t,"int32"),hc(n,t,e)))}function Df(n){return H(n,n)}function V1(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new K(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?j(t,[1,s[0],1,1,1]):j(t,[1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?j(t,[1,1,1,1,s[0]]):j(t,[1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?j(t,[1,s[0],1,1]):j(t,[1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?j(t,[1,1,1,s[0]]):j(t,[1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?j(t,[1,s[0],1]):j(t,[1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?j(t,[1,1,s[0]]):j(t,[1].concat(s))}else if(n<3)return t;throw new K(`Unsupported input rank by biasAdd: ${t.rank}`)}function _a(n,t,e){return nt(()=>(e==null&&(e=Ra()),Ye(e),yt(n,V1(n.rank,t,e))))}function Unt(n,t=1){if(t!==1)throw new Gt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return lc(n)}function Wnt(n){return nt(()=>At(n,yt(Qe(n),1)))}function kD(n,t,e,s){return nt(()=>fw(n,t,e,s))}function Gnt(n){return nt(()=>{const t=yt(.5,H(.2,n));return os(t,0,1)})}function Of(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Hnt=["fanIn","fanOut","fanAvg"],jnt=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qnt(n){rl(Hnt,"FanMode",n)}function Knt(n){rl(jnt,"Distribution",n)}class fa extends tl{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ID extends fa{apply(t,e){return Je(t,e)}}ID.className="Zeros";xt(ID);class bS extends fa{apply(t,e){return ss(t,e)}}bS.className="Ones";xt(bS);class ED extends fa{constructor(t){if(super(),typeof t!="object")throw new K(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new K(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return nt(()=>H(_t(this.value),ss(t,e)))}getConfig(){return{value:this.value}}}ED.className="Constant";xt(ED);class AD extends fa{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Vi(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}AD.className="RandomUniform";xt(AD);class RD extends fa{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Gt(`randomNormal does not support dType ${e}.`);return rb(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}RD.className="RandomNormal";xt(RD);class DD extends fa{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Gt(`truncatedNormal does not support dType ${e}.`);return Fy(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}DD.className="TruncatedNormal";xt(DD);class OD extends fa{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return nt(()=>{if(t.length!==2||t[0]!==t[1])throw new K("Identity matrix initializer can only be used for 2D square matrices.");return H(this.gain,yy(t[0]))})}getConfig(){return{gain:this.gain}}}OD.className="Identity";xt(OD);function Xnt(n,t="channelsLast"){let e,s;if(Ye(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const a=wi(n,2);e=n[1]*a,s=n[0]*a}else if(t==="channelsLast"){const a=wi(n,0,n.length-2);e=n[n.length-2]*a,s=n[n.length-1]*a}}else{const a=wi(n);e=Math.sqrt(a),s=Math.sqrt(a)}return[e,s]}class Ss extends fa{constructor(t){if(super(),t.scale<0)throw new K(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,qnt(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,Knt(this.distribution),this.seed=t.seed}apply(t,e){const s=Xnt(t),a=s[0],r=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,a):this.mode==="fanOut"?i/=Math.max(1,r):i/=Math.max(1,(a+r)/2),this.distribution==="normal"){const l=Math.sqrt(i);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Gt(`${this.getClassName()} does not support dType ${e}.`);return Fy(t,0,l,e,this.seed)}else{const l=Math.sqrt(3*i);return Vi(t,-l,l,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ss.className="VarianceScaling";xt(Ss);class xS extends Ss{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ss.className}}xS.className="GlorotUniform";xt(xS);class vS extends Ss{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ss.className}}vS.className="GlorotNormal";xt(vS);class wS extends Ss{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ss.className}}wS.className="HeNormal";xt(wS);class SS extends Ss{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ss.className}}SS.className="HeUniform";xt(SS);class NS extends Ss{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ss.className}}NS.className="LeCunNormal";xt(NS);class TS extends Ss{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ss.className}}TS.className="LeCunUniform";xt(TS);class _D extends fa{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return nt(()=>{if(t.length<2)throw new Gt("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;const s=ht(t.slice(0,-1)),a=t[t.length-1],r=s*a;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const i=[Math.max(a,s),Math.min(a,s)],l=rb(i,0,1,e,this.seed),u=yw.qr(l,!1);let h=u[0];const p=u[1].flatten().stridedSlice([0],[Math.min(a,s)*Math.min(a,s)],[Math.min(a,s)+1]);return h=H(h,p.sign()),s<a&&(h=h.transpose()),H(_t(this.gain),h.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}_D.className="Orthogonal";xt(_D);const uk={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ck(n,t={}){return Af(n,Os.getMap().classNameMap,t,"initializer")}function Fe(n){return mS(n)}function Re(n){if(typeof n=="string"){const t=n in uk?uk[n]:n;if(t==="GlorotNormal")return new vS;if(t==="GlorotUniform")return new xS;if(t==="HeNormal")return new wS;if(t==="HeUniform")return new SS;if(t==="LeCunNormal")return new NS;if(t==="LeCunUniform")return new TS;{const e={};return e.className=t,e.config={},ck(e)}}else return n instanceof fa?n:ck(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function P1(n){return Array.isArray(n)&&Array.isArray(n[0])}function Pm(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Vt(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new K(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function ue(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new K(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Um(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,a)=>s*a);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const hk="Variable";class Ynt{constructor(t,e="float32",s=hk,a=!0,r=null){this.dtype=e??"float32",this.shape=t.shape,this.id=wD(),s=s??hk,this.originalName=ND(s),this.name=TD(this.originalName),this.trainable_=a,this.constraint=r,this.val=hw(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),Znt(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Znt(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function U1(n){return n.map(t=>t.read())}function CS(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class un{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class nr{constructor(t,e,s,a,r,i,l){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=a,this.callArgs=r,this.outputTensorIndex=l,this.id=wD(),i!=null&&(this.originalName=ND(i),this.name=TD(this.originalName)),this.rank=e.length}}let Qnt=0;class ib{constructor(t,e){this.callArgs=e,this.id=Qnt++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Jnt=0;class Xt extends tl{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Jnt++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=Cr(s)+"_"+ab(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let r=null;t.batchSize!=null&&(r=t.batchSize),s=[r].concat(t.inputShape)}this.batchInputShape=s;let a=t.dtype;a==null&&(a=t.inputDType),a==null&&(a="float32"),this.dtype=a}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new oa(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new K(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return ns(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return ns(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Pa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Pa(`Layer ${this.name} is not connected, no input to return.`);return ns(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Pa(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Pa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ns(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=ge(t);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=ge(this.inputSpec);if(e.length!==s.length)throw new K(`Layer ${this.name} expects ${s.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let a=0;a<e.length;a++){const r=e[a],i=s[a];if(i==null)continue;const l=r.rank;if(i.ndim!=null&&l!==i.ndim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${l}`);if(i.maxNDim!=null&&l>i.maxNDim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${l}`);if(i.minNDim!=null&&l<i.minNDim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${l}.`);if(i.dtype!=null&&r.dtype!==i.dtype)throw new K(`Input ${a} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const u=r.shape;for(const h in i.axes){const d=Number(h),p=i.axes[h],m=d>=0?u[d]:u[u.length+d];if(p!=null&&[p,null].indexOf(m)===-1)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected axis ${d} of input shape to have value ${p} but got shape ${u}.`)}}if(i.shape!=null)for(let u=0;u<i.shape.length;++u){const h=i.shape[u],d=r.shape[u];if(h!=null&&d!=null&&h!==d)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=ge(t),a=nst(t),r=sst(t);if(a===r)throw new K("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ro(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const i=[];for(const l of ge(t))i.push(l.shape);this.build(ns(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let i=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,i);const l=ge(i),u=[];for(let h of l)s.indexOf(h)!==-1&&(h=h.clone()),u.push(h);if(i=ns(u),this.activityRegularizer!=null)throw new Gt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=tst(t),l=this.computeOutputShape(i);let u;const h=est(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),l!=null&&l.length>0&&Array.isArray(l[0])?u=l.map((d,p)=>new nr(h,d,this,ge(t),e,this.name,p)):u=new nr(h,l,this,ge(t),e,this.name),this.addInboundNode(t,u,null,null,i,l,e),this._refCount++,this.activityRegularizer!=null)throw new Gt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,a)=>{s!=null&&t[a]!=null&&t[a]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Pa(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Pa(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new oa(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Um(this.weights)}build(t){this.built=!0}getWeights(t=!1){return U1(t?this.trainableWeights:this.weights)}setWeights(t){nt(()=>{const e=this.weights;if(e.length!==t.length)throw new K(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],a=U1(e);for(let r=0;r<a.length;++r){const i=a[r],l=e[r],u=t[r];if(!Zt(i.shape,u.shape))throw new K(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);s.push([l,u])}CS(s)})}addWeight(t,e,s,a,r,i,l,u){if(this._addedWeightNames.indexOf(t)!==-1)throw new K(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(a=u!=null?u():Re("zeros"));const h=a.apply(e,s),d=new Ynt(h,s,t,i,l);return h.dispose(),r!=null&&this.addLoss(()=>r.apply(d.read())),i==null&&(i=!0),i?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=ge(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,s){if(!this.supportsMasking)return;const a=this.computeMask(t,s),r=ge(e),i=ge(a);if(r.length!==i.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let l=0;l<r.length;l++)r[l].kerasMask=i[l]}addInboundNode(t,e,s,a,r,i,l=null){const u=ge(t);e=ge(e),s=ge(s),a=ge(a),r=Pm(r),i=Pm(i);const h=[],d=[],p=[];for(const m of u)h.push(m.sourceLayer),d.push(m.nodeIndex),p.push(m.tensorIndex);new ib({outboundLayer:this,inboundLayers:h,nodeIndices:d,tensorIndices:p,inputTensors:u,outputTensors:e,inputMasks:s,outputMasks:a,inputShapes:r,outputShapes:i},l);for(let m=0;m<e.length;m++)e[m].sourceLayer=this,e[m].nodeIndex=this.inboundNodes.length-1,e[m].tensorIndex=m}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function tst(n){n=ge(n);const t=[];for(const e of n)t.push(e.shape);return ns(t)}function est(n){return"float32"}function FD(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const a=[];for(let r=0;r<s.inboundLayers.length;r++){const i=s.inputTensors[r],l=s.inboundLayers[r],u=s.nodeIndices[r],h=FD(i,l,u);for(const d of h)a.indexOf(d)===-1&&a.push(d)}return a}}}function nst(n){let t=!0;for(const e of ge(n))if(!(e instanceof nr)){t=!1;break}return t}function sst(n){let t=!0;for(const e of ge(n))if(e instanceof nr){t=!1;break}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _f extends Xt{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:ab("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new K("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new K("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new K("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const a=new nr(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new ib({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new K(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}_f.className="InputLayer";xt(_f);function ast(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new K("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new _f({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rst(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return wt(t,n.dtype)}catch{throw new K(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class gi{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof gi)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=rst(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new K(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof nr){if(this.id2Value[t.id]==null)throw new K(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new K(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof nr){if(this.id2Value[t.id]==null)throw new K(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new K(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&qt(this.id2Mask)}}const Wm=new bD,Gm=new bD;function ist(n){Wm!=null&&Wm.setMaxEntries(n),Gm!=null&&Gm.setMaxEntries(n)}function Ih(n,t,e,s){const a=e==null?!1:e.training,r=Array.isArray(n),i=r?n:[n],l=i.map(b=>b.name),u=[],h=t.names();for(const b of l)h.indexOf(b)!==-1?u.push(t.getValue(b)):u.push(null);const d=l.join(",")+"|"+t.names().sort().join(",");let p=Wm.get(d),m;if(p==null){const b=ost(i,t);p=b.sorted,m=b.recipientCounts,Wm.put(d,p),Gm.put(d,m)}m={},a||Object.assign(m,Gm.get(d));const y=new gi(t);for(let b=0;b<p.length;++b){const v=p[b],w=v.sourceLayer;if(w instanceof _f)continue;const S=[],T=[],$=[];let C=!1;for(const O of v.inputs){const _=y.getValue(O),A=y.getMask(O);S.push(_),T.push(A),A!=null&&(C=!0),a||(m[O.name]--,m[O.name]===0&&!t.hasKey(O)&&l.indexOf(O.name)===-1&&!_.isDisposed&&O.sourceLayer.stateful!==!0&&$.push(_))}C&&(e=e||{},e.mask=T[0]);const I=ge(w.apply(S,e));let R=null;w.supportsMasking&&(R=w.computeMask(S,T));const L=ust(v),M=Array.isArray(L)?L:[L];for(let O=0;O<M.length;++O){y.hasKey(M[O])||y.add(M[O],I[O],Array.isArray(R)?R[0]:R);const _=l.indexOf(M[O].name);_!==-1&&(u[_]=I[O])}a||qt($)}return y.disposeMasks(),r?u:u[0]}function ost(n,t){D(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const a=dk(n[0],t);e=a.sorted,s=a.recipientMap}else{const a=new Set;for(const r of n){const{sorted:i,recipientMap:l}=dk(r,t);for(const u of i)a.has(u.name)||(e.push(u),a.add(u.name));for(const u in l)s[u]==null&&(s[u]=new Set),l[u].forEach(h=>s[u].add(h))}}return{sorted:e,recipientCounts:lst(s)}}function lst(n){const t={};for(const e in n)t[e]=n[e].size;return t}function dk(n,t){const e=new Set,s=[],a={};for(const l of t.names())e.add(l);const r=[],i=[];for(r.push(n);r.length>0;){const l=r[r.length-1];if(e.has(l.name)){r.pop();continue}const u=i[i.length-1]===r.length-1;if(l.inputs.length===0||u)r.pop(),s.push(l),e.add(l.name),u&&i.pop();else{i.push(r.length-1);for(const h of l.inputs)a[h.name]==null&&(a[h.name]=new Set),a[h.name].add(l.name),!e.has(h.name)&&r.push(h)}}return{sorted:s,recipientMap:a}}function ust(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const a of n.sourceLayer.inboundNodes[s].outputTensors)if(a.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cst=at();cst.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,ist);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $S(n,t){return nt(()=>xn(Et(H(n,n),t,!0)))}class Ff extends tl{getConfig(){return{}}}class LD extends Ff{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return nt(()=>{const e=$S(t,this.axis),s=os(e,0,this.maxValue);return H(t,At(s,yt(ln(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}LD.className="MaxNorm";xt(LD);class zD extends Ff{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return nt(()=>At(t,yt(ln(),$S(t,this.axis))))}getConfig(){return{axis:this.axis}}}zD.className="UnitNorm";xt(zD);class MD extends Ff{apply(t){return Oa(t)}}MD.className="NonNeg";xt(MD);class BD extends Ff{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return nt(()=>{const e=$S(t,this.axis),s=yt(H(this.rate,os(e,this.minValue,this.maxValue)),H(1-this.rate,e));return H(t,At(s,yt(ln(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}BD.className="MinMaxNorm";xt(BD);const fk={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function cn(n){return mS(n)}function pk(n,t={}){return Af(n,Os.getMap().classNameMap,t,"constraint")}function hn(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in fk?fk[n]:n,config:{}};return pk(e)}else return n instanceof Ff?n:pk(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function yo(n){if(n==null)return;const t=[],e=[],s=[];for(const a in n){const r=n[a];if(typeof r!="number"){const i=r;t.push(i.data()),e.push(a),s.push(i)}}if(t.length>0){const a=await Promise.all(t);for(let r=0;r<a.length;++r)n[e[r]]=a[r][0];qt(s)}}function VD(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var mk;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(mk||(mk={}));const hst=125;class qh{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class dst{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class fst extends qh{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const a in e){const r=e[a];if(typeof r=="number")this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+r*s;else{let i;a in this.totals?i=this.totals[a]:this.totals[a]=0;const l=nt(()=>yt(this.totals[a],H(r,s)));this.totals[a]=l,i!=null&&i.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:nt(()=>{const a=H(At(1,this.seen),this.totals[s]);e[s]=a,this.totals[s].dispose(),on(e[s])}))}}class pst extends qh{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const r in this.history){const i=this.history[r];for(let l=0;l<i.length;++l)if(typeof i[l]!="number"){const u=i[l];t.push(u.data()),e.push(r),s.push(l)}}const a=await Promise.all(t);for(let r=0;r<a.length;++r)this.history[e[r]][s[r]].dispose(),this.history[e[r]][s[r]]=a[r][0]}}class mst extends qh{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Dw,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=hst),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Tm(this.yieldEvery)&&(this.maybeWait=Int(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const a=[];this.yield!=null&&(await yo(s),a.push(this.yield(t,e,s))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await yo(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await yo(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await yo(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await yo(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Tm(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await yo(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await yo(t),await this.trainEnd(t))}}function PD(n,t){return n==null&&(n={}),n instanceof qh?[n]:Array.isArray(n)&&n[0]instanceof qh?n:ge(n).map(s=>new mst(s,t))}class na{constructor(){}static registerCallbackConstructor(t,e){D(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),na.checkForDuplicate(e),na.constructors[t]==null&&(na.constructors[t]=[]),na.constructors[t].push(e)}static checkForDuplicate(t){for(const e in na.constructors)na.constructors[+e].forEach(a=>{if(a===t)throw new K("Duplicate callback constructor.")})}static clear(){na.constructors={}}static createCallbacks(t){const e=[];for(const s in na.constructors){const a=+s;t>=a&&e.push(...na.constructors[a])}return e.map(s=>new s)}}na.constructors={};function UD(n,t,e,s,a,r,i,l,u){const h=new pst,d=[new fst,...na.createCallbacks(t)];n!=null&&d.push(...n),d.push(h);const p=new dst(d);return p.setParams({epochs:e,initialEpoch:s,samples:a,steps:r,batchSize:i,verbose:t,doValidation:l,metrics:u}),{callbackList:p,history:h}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ir(n,t={},e=!1){return Af(n,Os.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hm(n,t){return nt(()=>{n.dtype!=="float32"&&(n=wt(n,"float32"));const e=Et(Df(n),t,!0),s=Zo(e.shape,ln()),a=xn(sr(e,s));return At(n,a)})}function ob(n,t){return nt(()=>_e(Df(kt(t,n)),-1))}function kS(n,t){return nt(()=>_e(Qe(kt(t,n)),-1))}function IS(n,t){return nt(()=>{const e=kt(n,t),s=os(Qe(n),ln(),Number.MAX_VALUE),a=Qe(At(e,s));return H(100,_e(a,-1))})}function gst(n,t){return nt(()=>{const e=os(t,ln(),Number.MAX_VALUE),s=xs(yt(1,e)),a=os(n,ln(),Number.MAX_VALUE),r=xs(yt(1,a));return _e(Df(kt(s,r)),-1)})}function yst(n,t){return nt(()=>{const e=sr(0,kt(1,H(n,t)));return _e(Df(e),-1)})}function bst(n,t){return nt(()=>{const e=sr(0,kt(1,H(n,t)));return _e(e,-1)})}function xst(n,t){return nt(()=>{const e=Et(H(n,t),-1),s=zs(H(kt(1,n),t),-1);return sr(0,yt(1,kt(s,e)))})}function vst(n,t){return nt(()=>{const e=Math.log(2),s=kt(t,n),a=kt(yt(s,Qo(H(-2,s))),e);return _e(a,-1)})}function Kh(n,t,e=!1){return nt(()=>{if(e)t=bf(t);else{const s=Et(t,t.shape.length-1,!0);t=At(t,s)}return t=os(t,ln(),1-ln()),ke(Et(H(wt(n,"float32"),xs(t)),t.shape.length-1))})}function jm(n,t,e=!1){return nt(()=>{const s=wt(cc(Vnt(n)),"int32");t=os(t,ln(),1-ln());const a=t.shape,r=j(eu(s,a[a.length-1]),a);return Kh(r,t,e)})}function wst(n,t){if(!Zt(n.shape,t.shape))throw new K(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return nt(()=>{const e=Oa(t),s=ke(Qe(t));return yt(kt(e,H(t,n)),uf(ls(s)))})}function lb(n,t){return nt(()=>{let e;return e=os(t,ln(),1-ln()),e=xs(At(e,kt(1,e))),_e(wst(n,e),-1)})}function Sst(n,t){return nt(()=>{const e=os(n,ln(),1),s=os(t,ln(),1);return Et(H(n,xs(At(e,s))),-1)})}function Nst(n,t){return nt(()=>{const e=xs(yt(ln(),t));return _e(kt(t,H(n,e)),-1)})}function WD(n,t){return nt(()=>{const e=Hm(n,-1),s=Hm(t,-1),a=H(e,s);return ke(Et(a,-1))})}const qm={meanSquaredError:ob,meanAbsoluteError:kS,meanAbsolutePercentageError:IS,meanSquaredLogarithmicError:gst,squaredHinge:yst,hinge:bst,categoricalHinge:xst,logcosh:vst,categoricalCrossentropy:Kh,sparseCategoricalCrossentropy:jm,binaryCrossentropy:lb,kullbackLeiblerDivergence:Sst,poisson:Nst,cosineProximity:WD};function Kx(n){if(typeof n=="string"){if(n in qm)return qm[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new K(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function GD(n,t){return nt(()=>{const e=H(.5,vs(t)),s=Xa(hs(t,e),n.dtype);return _e(ca(n,s),-1)})}function HD(n,t){return nt(()=>Xa(ca($i(n,-1),$i(t,-1)),"float32"))}function Tst(n,t){return nt(()=>wt(Et(Ia(ca(n,1),ca(t,1))),"float32"))}function Cst(n,t){return nt(()=>wt(Et(Ia(ca(n,0),ca(t,1))),"float32"))}function $st(n,t){return nt(()=>{const e=Tst(n,t),s=Cst(n,t),a=yt(e,s);return wt(In(hs(a,0),At(e,a),0),"float32")})}function kst(n,t){return lb(n,t)}function Ist(n,t){return n.rank===t.rank&&(n=Vr(n,[n.rank-1])),t=$i(t,-1),t.dtype!==n.dtype&&(t=wt(t,n.dtype)),wt(ca(n,t),"float32")}const Est=ob,Ast=ob,Rst=kS,Dst=kS,Ost=IS,_st=IS,jD=Kh,Fst=WD,qD=jm,Km={binaryAccuracy:GD,categoricalAccuracy:HD,precision:$st,categoricalCrossentropy:jD,sparseCategoricalCrossentropy:qD,mse:Est,MSE:Ast,mae:Rst,MAE:Dst,mape:Ost,MAPE:_st,cosine:Fst};function Lst(n){if(typeof n=="string"&&n in Km)return Km[n];if(typeof n!="string"&&n!=null)return n;throw new K(`Unknown metric ${n}`)}function cm(n){if(Ua(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(qm))if(qm[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(Km))if(Km[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zst(n){const t={Adagrad:()=>xo.adagrad(.01),Adadelta:()=>xo.adadelta(1,.95,ln()),Adam:()=>xo.adam(.001,.9,.999,ln()),Adamax:()=>xo.adamax(.002,.9,.999,ln(),0),RMSProp:()=>xo.rmsprop(.001,.9,0,ln()),SGD:()=>xo.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new K(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const gk=1*1024*1024;function yk(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!W1(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>gk&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${gk}.`)}}function W1(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!W1(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!W1(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mst(n,t,e,s=console.log){const a=Vst(n),r=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(d=>Math.floor(t*d)));let i;if(!a){r.push("Receives inputs"),i=[];for(const d in n.nodesByDepth)i.push(...n.nodesByDepth[d])}s("_".repeat(t)),Xm(r,e,s),s("=".repeat(t));const l=n.layers;for(let d=0;d<l.length;++d)a?Pst(l[d],e,s):Ust(l[d],e,i,s),s((d===l.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const u=Bst(n),h=Um(n.nonTrainableWeights);s(`Total params: ${u+h}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${h}`),s("_".repeat(t))}function Bst(n){let t;return n.collectedTrainableWeights!=null?t=Um(n.collectedTrainableWeights):t=Um(n.trainableWeights),t}function Vst(n){let t=!0;const e=[],s=[];for(const a in n.nodesByDepth)e.push(n.nodesByDepth[a]);for(const a of e){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}s.push(...a)}if(t)for(const a of n.layers){let r=!1;for(const i of a.inboundNodes)if(s.indexOf(i)!==-1)if(r){t=!1;break}else r=!0;if(!t)break}return t}function Xm(n,t,e=console.log){let s="";for(let a=0;a<n.length;++a)a>0&&(s=s.slice(0,s.length-1)+" "),s+=n[a],s=s.slice(0,t[a]),s+=" ".repeat(t[a]-s.length);e(s)}function Pst(n,t,e){let s,a;try{a=n.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{a="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,i=n.getClassName(),l=[`${r} (${i})`,a,s,n.countParams().toString()];Xm(l,t,e)}function Ust(n,t,e,s){let a,r;try{r=n.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{r="multiple"}try{a=JSON.stringify(n.outputShape)}catch{a="multiple"}const i=[];for(const p of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){const y=p.inboundLayers[m].name,b=p.nodeIndices[m],v=p.tensorIndices[m];i.push(`${y}[${b}][${v}]`)}const l=n.name,u=n.getClassName(),h=i.length===0?"":i[0],d=[`${l} (${u})`,r,a,n.countParams().toString(),h];Xm(d,t,s);for(let p=1;p<i.length;++p)Xm(["","","","",i[p]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function KD(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function G1(n,t){if(n===null)return null;if(typeof n=="string")return To(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let a=0;a<s;++a){const r=n[a];KD(t,a,r)?e.push(r):e.push(G1(r,t))}return e}else{const e={};for(const s of Object.keys(n)){const a=n[s];if(s==="name"&&typeof a=="string")e[s]=a;else{const r=To(s);e[r]=G1(a,r)}}return e}}function H1(n,t){if(n==null)return null;if(typeof n=="string")return Cr(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let a=0;a<s;++a){const r=n[a];KD(t,a,r)?e.push(r):e.push(H1(r,t))}return e}else{const e={};for(const s of Object.keys(n)){const a=n[s],r=Cr(s);(s==="name"||s==="className")&&typeof a=="string"?e[r]=a:e[r]=H1(a,s)}return e}}/** @license See the LICENSE file. */const XD="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Wst=n=>{const t=Object.keys(n);if(t.length===0)return!1;const e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))};class Sa extends Xt{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const T=this.getClassName().toLowerCase();this.name=ab(T)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],vi(this.inputs).length!==this.inputs.length)throw new K(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(T=>T.name)}`);vi(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(T=>T.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const T of this.outputs){const $=T.sourceLayer,C=T.nodeIndex,I=T.tensorIndex;this.outputLayers.push($),this.outputLayersNodeIndices.push(C),this.outputLayersTensorIndices.push(I)}for(const T of this.inputs){const $=T.sourceLayer,C=T.nodeIndex,I=T.tensorIndex;Ua(C===0,"input layer has >1 nodes"),Ua(I===0,"input layer has >1 tensors"),this.inputLayers.push($),this.inputLayersNodeIndices.push(C),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let T=0;T<this.inputLayers.length;T++){const $=this.inputLayers[T];if(!($ instanceof _f))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${T} (0-based) originates from layer type ${$.getClassName()}.`);this.inputNames.push($.name),this.feedInputShapes.push($.batchInputShape),this.feedInputNames.push($.name)}for(const T of this.outputLayers)this.outputNames.push(T.name);this.internalInputShapes=this.inputs.map(T=>T.shape),this.internalOutputShapes=this.outputs.map(T=>T.shape);const e={},s={},a={},r={},i={},l=[],u=(T,$,C,I,R,L)=>{(I==null||R==null||L==null)&&(I=T.sourceLayer,R=T.nodeIndex,L=T.tensorIndex);const M=I.inboundNodes[R];if(C.indexOf(M)!==-1)throw new oa(`The tensor ${T.name} at layer "${I.name}" is part of a cycle.`);if($.indexOf(M)!==-1)return;this.containerNodes.add(Sa.nodeKey(I,R)),I.id in i||(i[I.id]=Object.keys(i).length),C.indexOf(M)===-1&&C.push(M);const O=M.inboundLayers.length;for(let _=0;_<O;_++){const A=M.inputTensors[_],G=M.inboundLayers[_],X=M.nodeIndices[_],tt=M.tensorIndices[_];u(A,$,C,G,X,tt)}for($.push(M);C.indexOf(M)>=0;)C.splice(C.indexOf(M),1);l.push(M)},h=[],d=[];for(const T of this.outputs)u(T,h,d);const p=l.slice().reverse();for(const T of p){s[T.id]=T,T.id in e||(e[T.id]=0);let $=e[T.id];const C=a[T.outboundLayer.id]==null?0:a[T.outboundLayer.id];$=Math.max($,C),a[T.outboundLayer.id]=$,r[T.outboundLayer.id]=T.outboundLayer,e[T.id]=$;for(let I=0;I<T.inboundLayers.length;I++){const R=T.inboundLayers[I],L=T.nodeIndices[I],M=R.inboundNodes[L],O=e[M.id]==null?0:e[M.id];e[M.id]=Math.max($+1,O),s[M.id]=M}}const m={};for(const T in e){const $=e[T];$ in m||(m[$]=[]),m[$].push(s[T])}const y={};for(const T in a){const $=a[T];$ in y||(y[$]=[]),y[$].push(r[T])}let b=Object.keys(y).map(T=>parseInt(T,10)).sort(om);this.layers=[];for(const T of b){const $=y[T];$.sort((C,I)=>{const R=i[C.id],L=i[I.id];return R<L?-1:R>L?1:0});for(const C of $)C instanceof Sa&&this.internalContainerRefs.push(C),this.layers.push(C)}this.layersByDepth=y,b=Object.keys(m).map(T=>parseInt(T,10)).sort(om);const v=this.inputs.slice(),w=[];for(const T of b)for(const $ of m[T]){const C=$.outboundLayer;if(C!=null){for(const I of $.inputTensors)if(v.indexOf(I)===-1)throw new oa(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${C.name}". The following previous layers were accessed without issue: ${w}`);for(const I of $.outputTensors)v.push(I);w.push(C.name)}}this.nodesByDepth=m;const S=this.layers.map(T=>T.name);for(const T of S){const $=S.filter(C=>C===T).length;if($!==1)throw new oa(`The name "${T}" is used ${$} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(S))}this.outboundNodes=[],this.inboundNodes=[],new ib({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(T=>null),outputMasks:this.outputs.map(T=>null),inputShapes:this.inputs.map(T=>T.shape),outputShapes:this.outputs.map(T=>T.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new K("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let a=0;const r=Wst(t);r&&this.parseWeights(t);for(const l of this.layers)for(const[u,h]of l.weights.entries()){const d=r?`${h.name.split("/").slice(0,-1).join("/")+"/"}${u}`:h.originalName;if(s[d]!=null)throw new K(`Duplicate weight name: ${d}`);s[d]=h,a++}const i=[];for(const l in t){let u=l;if(s[l]==null){const h=l.split("/");u=h.slice(0,-2).concat([h[h.length-1]]).join("/")}if(s[u]!=null)i.push([s[u],t[l]]);else if(e)throw new K(`Provided weight data has no target variable: ${l}`);delete s[u]}if(e){const l=[];for(const u in s)l.push(u);if(l.length>0)throw new K(`${l.length} of ${a} weights are not set: ${l}`)}CS(i)}parseWeights(t){for(const e in Object.keys(t)){const s=e.split("/"),a=["vars","layer_checkpoint_dependencies"],r=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!a.includes(i)).join("/");r!==e&&(t[r]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${XD}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=H1(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return nt(()=>{t=ge(t);const s=new gi;for(let a=0;a<this.inputs.length;++a)s.add(this.inputs[a],t[a]);return Ih(this.outputs,s,e)})}computeMask(t,e){return nt(()=>{t=ge(t);let s;return e==null?s=jo(null,t.length):s=ge(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=Pm(t);if(e.length!==this.inputLayers.length)throw new K(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let l=0;l<e.length;l++){const u=this.inputLayers[l],h=e[l],d=u.name+"_0_0";s[d]=h}const a=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(om);if(a.length>1)for(const l of a){const u=this.nodesByDepth[l];for(const h of u){const d=h.outboundLayer;if(this.inputLayers.map(v=>v.id).indexOf(d.id)!==-1)continue;const p=[];for(let v=0;v<h.inboundLayers.length;v++){const w=h.inboundLayers[v],S=h.nodeIndices[v],T=h.tensorIndices[v],$=`${w.name}_${S}_${T}`,C=s[$];p.push(C)}const m=d.computeOutputShape(ns(p)),y=Pm(m),b=d.inboundNodes.indexOf(h);for(let v=0;v<y.length;v++){const w=`${d.name}_${b}_${v}`;s[w]=y[v]}}}const r=[],i=[];for(let l=0;l<this.outputLayers.length;l++){const u=this.outputLayers[l],h=this.outputLayersNodeIndices[l],d=this.outputLayersTensorIndices[l],p=`${u.name}_${h}_${d}`;i.push(p)}for(let l=0;l<i.length;l++){const u=i[l];Ua(u in s),r.push(s[u])}return ns(r)}runInternalGraph(t,e){e==null&&(e=jo(null,t.length));const s={};for(let u=0;u<this.inputs.length;++u){const h=this.inputs[u],d=t[u],p=e[u];s[h.id]=[d,p]}const a=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(om);for(const u of a){const h=this.nodesByDepth[u];for(const d of h){const p=d.outboundLayer,m=d.inputTensors,y=d.outputTensors,b=new Array;for(const v of m)v.id in s&&b.push(s[v.id]);if(b.length===m.length){let v={},w,S,T,$;if(d.callArgs!=null&&(v=d.callArgs),b.length===1){const[C,I]=b[0];v.mask==null&&(v.mask=I),T=ge(p.call(C,v)),$=ge(p.computeMask(C,I)),w=[C],S=[I]}else w=b.map(C=>C[0]),S=b.map(C=>C[1]),v.mask==null&&(v.mask=S),T=ge(p.call(w,v)),$=ge(p.computeMask(w,S));if(p.activityRegularizer)throw new Gt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let C=0;C<y.length;++C){const I=y[C],R=T[C],L=$[C];s[I.id]=[R,L]}}}}const r=[],i=[],l=[];for(const u of this.outputs){Ua(u.id in s,`Could not compute output ${u.name} : ${u.id}`);const[h,d]=s[u.id];l.push(h.shape),r.push(h),i.push(d)}return[r,i,l]}buildNodeConversionMap(t){const e={};let s;for(const a of this.layers){s=a instanceof Sa?1:0;for(let r=0;r<a.inboundNodes.length;r++){const i=Sa.nodeKey(a,r);this.containerNodes.has(i)&&(e[i]=s,s+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new K("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(const s of this.layers)if(s.name===t)return s;throw new K(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new K(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return nt(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const a=Sa.nodeKey(e,s);this.containerNodes.has(a)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const l=i.getClassName(),u=i.getConfig(),h=[];for(let p=0;p<i.inboundNodes.length;p++){const m=i.inboundNodes[p],y=Sa.nodeKey(i,p);let b={};if(this.containerNodes.has(y)){if(m.callArgs)try{JSON.stringify(m.callArgs),b=m.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),b={}}if(m.inboundLayers.length>0){const v=[];for(let w=0;w<m.inboundLayers.length;w++){const S=m.inboundLayers[w],T=m.nodeIndices[w],$=m.tensorIndices[w],C=Sa.nodeKey(S,T);let I=e[C];I==null&&(I=0),v.push([S.name,I,$,b])}h.push(v)}}}const d={};d.name=i.name,d.className=l,d.config=u,d.inboundNodes=h,s.push(d)}t.layers=s;const a=[];for(let i=0;i<this.inputLayers.length;i++){const l=this.inputLayers[i],u=this.inputLayersNodeIndices[i],h=Sa.nodeKey(l,u);if(!this.containerNodes.has(h))continue;let d=e[h];d==null&&(d=0);const p=this.inputLayersTensorIndices[i];a.push([l.name,d,p])}t.inputLayers=a;const r=[];for(let i=0;i<this.outputLayers.length;i++){const l=this.outputLayers[i],u=this.outputLayersNodeIndices[i],h=Sa.nodeKey(l,u);if(!this.containerNodes.has(h))continue;let d=e[h];d==null&&(d=0);const p=this.outputLayersTensorIndices[i];r.push([l.name,d,p])}return t.outputLayers=r,t}static fromConfig(t,e,s={},a=!1){const r={},i={};function l(w,S){w.name in i?i[w.name].push(S):i[w.name]=[S]}function u(w,S){const T=[];let $;for(const C of S){const I=C[0],R=C[1],L=C[2];if($=C[3]==null?{}:C[3],!(I in r)){l(w,S);return}const M=r[I];if(M.inboundNodes.length<=R){l(w,S);return}const O=M.inboundNodes[R];T.push(O.outputTensors[L])}T.length>0&&w.apply(ns(T),$)}function h(w){const S=w.name,T=Ir(w,e.customObjects!=null?e.customObjects:{});T.setFastWeightInitDuringBuild(a),r[S]=T,w.inboundNodes.forEach(C=>{if(!(C instanceof Array))throw new K(`Corrupted configuration, expected array for nodeData: ${C}`);l(T,C)})}const d=e.name,p=e.layers;for(const w of p)h(w);for(;!knt(i);)for(const w of p){const S=r[w.name];if(S.name in i){const T=i[S.name];delete i[S.name];for(const $ of T)u(S,$)}}const m=[],y=[],b=e.inputLayers;for(const w of b){const S=w[0],T=w[1],$=w[2];Ua(S in r);const I=r[S].inboundNodes[T].outputTensors;m.push(I[$])}const v=e.outputLayers;for(const w of v){const S=w[0],T=w[1],$=w[2];Ua(S in r);const I=r[S].inboundNodes[T].outputTensors;y.push(I[$])}return new t({inputs:m,outputs:y,name:d})}get stateful(){if(this._stateful)throw new K("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){nt(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gst(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(a=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const a=[];return t.forEach(r=>{r in n?a.push(n[r]):a.push(null)}),a}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function YD(n,t){return Gst(n,t,"classWeight")}async function ZD(n,t,e,s){if(e!=null){const a=nt(()=>{if(n.shape.length===1)return qa(n);if(n.shape.length===2){if(n.shape[1]>1)return $i(n,1);if(n.shape[1]===1)return j(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await a.data());qt(a);const i=[];return r.forEach(l=>{if(e[l]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${l} exists in the data but not in classWeight`);i.push(e[l])}),Mn(i,"float32")}else return null}function Hst(n,t){return H(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const jst=32;function QD(n,t){let e,s;const a=t;e=a.xs,s=a.ys,D(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const r=bk("input",n.inputNames,e),i=bk("output",n.outputNames,s),l=r[0].shape[0];D(r.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),D(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let u=0;u<r.length;u++)D(r[u].shape[0]===l,()=>`Batch size mismatch: input ${n.inputNames[u]} has ${r[u].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);for(let u=0;u<i.length;u++)D(i[u].shape[0]===l,()=>`Batch size mismatch: output ${n.outputNames[u]} has ${i[u].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);return{xs:r,ys:i}}function bk(n,t,e){if(e instanceof he)return[e];if(Array.isArray(e))return D(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const a of t){if(e[a]==null)throw new K(`The feature data generated by the dataset lacks the required ${n} key '${a}'.`);s.push(e[a])}return s}}function qst(n){if(n.length===3)throw new Gt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function Kst(n,t,e){const s=e.batchesPerEpoch!=null;if(D(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),D(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),D(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),D(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),D(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const a=e.validationData!=null;let r,i;if(a)if(xk(e.validationData))D(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const w=qst(e.validationData);r=w.xs,i=w.ys}const l=n.makeTrainFunction(),u=n.getDedupedMetricsNames();let h;a?h=u.slice().concat(u.map(w=>"val_"+w)):h=u.slice();const d=PD(e.callbacks,e.yieldEvery),p=e.verbose==null?1:e.verbose,{callbackList:m,history:y}=UD(d,p,e.epochs,null,null,Xst(t,e),null,a,h);m.setModel(n),n.history=y,await m.onTrainBegin(),n.stopTraining_=!1;let b=e.initialEpoch==null?0:e.initialEpoch,v=await t.iterator();for(;b<e.epochs;){const w={};await m.onEpochBegin(b);let S=0,T=0;for(s||(v=await t.iterator());!s||S<e.batchesPerEpoch;){const $=await v.next();if(s&&$.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${S} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if($.value!=null){const{xs:C,ys:I}=QD(n,$.value),R={};R.batch=T,R.size=C[0].shape[0],await m.onBatchBegin(T,R);const L=[];if(e.classWeight!=null){const _=YD(e.classWeight,n.outputNames);for(let A=0;A<_.length;++A)L.push(await ZD(I[A],null,_[A]))}const M=C.concat(I).concat(L),O=l(M);qt(M);for(let _=0;_<u.length;++_){const A=u[_],G=O[_];R[A]=G,on(G)}await m.onBatchEnd(T,R),VD(R),T++,S++}if(s?S>=e.batchesPerEpoch:$.done){if(a){let C;xk(e.validationData)?C=ge(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):C=ge(n.evaluate(r,i,{batchSize:e.validationBatchSize==null?jst:e.validationBatchSize,verbose:0}));for(let I=0;I<n.metricsNames.length;++I)w[`val_${n.metricsNames[I]}`]=C[I]}break}if(n.stopTraining_)break}if(await m.onEpochEnd(b,w),b++,n.stopTraining_)break}return await m.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function Xst(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function xk(n){return typeof n.iterator=="function"}function Yst(n){return typeof n.next=="function"}async function Zst(n,t,e){e=e||{};const s=e.batches!=null,a=n.testFunction;let r=[];if(e.verbose>0)throw new Gt("Verbose mode is not implemented yet.");D(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const i=Yst(t)?t:await t.iterator();let l=0,u=0;for(;!s||u<e.batches;){const h=await i.next();if(r=nt(()=>{if(h.value){const{xs:d,ys:p}=QD(n,h.value),m=d.concat(p),y=nt(()=>a(m));if(qt(m),u===0)for(let v=0;v<y.length;++v)r.push(_t(0));const b=m[0].shape[0];for(let v=0;v<y.length;++v){const w=y[v],S=r[v];r[v]=nt(()=>yt(r[v],H(b,w))),u>0&&qt(S)}qt(y),l+=b,++u}return r}),h.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let h=0;h<r.length;++h){const d=r[h];r[h]=At(r[h],l),qt(d)}return ns(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xx(n){D(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Sh(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>Do(s,t,e-t)):Do(n,t,e-t)}function j1(n,t){return nt(()=>n==null?null:Array.isArray(n)?n.map(e=>j1(e,t)):$D(n,t.dtype==="int32"?t:wt(t,"int32")))}function Yx(n,t){const e=[];let s=0,a=null;for(;s<n;)a=s+t,a>=n&&(a=n),e.push([s,a]),s=a;return e}function JD(n){const t=[];n instanceof he&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(Rf(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function wa(n,t){if(n==null)return;const e=[];if(t instanceof he)e.push(t.id);else if(Array.isArray(t))t.forEach(a=>e.push(a.id));else if(t!=null)for(const a in t){const r=t[a];e.push(r.id)}const s=[];if(n instanceof he)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(a=>{e.indexOf(a.id)===-1&&s.push(a)});else if(n!=null)for(const a in n){const r=n[a];e.indexOf(r.id)===-1&&s.push(r)}s.forEach(a=>{a.isDisposed||a.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qst(n){return n instanceof he}function q1(n){return Array.isArray(n)}function vk(n){return!Qst(n)&&!q1(n)}function wk(n,t,e,s=!0,a=""){if(t==null||t.length===0){if(n!=null){let i=!1;if(q1(n)&&n.length>0)i=!0;else if(vk(n)){for(const l in n)if(n.hasOwnProperty(l)){i=!0;break}}else i=!0;if(i)throw new K(`Error when checking model ${a} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(i=>null);let r;if(vk(n)){n=n,r=[];for(const i of t){if(n[i]==null)throw new K(`No data provided for "${i}". Need data for each key in: ${t}`);r.push(n[i])}}else if(q1(n)){if(n=n,n.length!==t.length)throw new K(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);r=n}else{if(n=n,t.length>1)throw new K(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);r=[n]}if(r=JD(r),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const l=r[i];if(l.shape.length!==e[i].length)throw new K(`Error when checking ${a}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${l.shape}`);for(let u=0;u<e[i].length;++u){if(u===0&&!s)continue;const h=l.shape[u],d=e[i][u];if(d!=null&&d>=0&&h!==d)throw new K(`${a} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${a} received an input with ${l.shape[0]} examples, each with shape [${l.shape.slice(1,l.shape.length)}] (tensor shape [${l.shape}])`)}}return r}function Jst(n,t,e){const s=vi(n.map(r=>r.shape[0]));s.sort();const a=vi(t.map(r=>r.shape[0]));if(a.sort(),s.length>1)throw new K(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(r=>r.shape))}`);if(a.length>1)throw new K(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(s.length>0&&a.length>0&&!Zt(s,a))throw new K(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}function tat(n,t,e){const s=[ob,lb,Kh];for(let a=0;a<n.length;++a){const r=n[a],i=t[a],l=e[a];if(i!=null){if(i===Kh&&r.shape[r.shape.length-1]===1)throw new K(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const u=r.shape.slice(1),h=l.slice(1);for(let d=0;d<u.length;++d){const p=u[d],m=h[d];if(m!=null&&p!==m)throw new K(`A target Tensor with shape ${r.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Sk(n,t,e,s=!0,a=""){let r;if(Array.isArray(n)){if(n.length!==t.length)throw new K(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);r=n}else{if(t.length>1)throw new K(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);r=[n]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const l=r[i];if(l.shape.length!==e[i].length)throw new K(`Error when checking ${a}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(l.shape)}`);for(let u=0;u<e[i].length;++u){if(u===0&&!s)continue;const h=l.shape[u],d=e[i][u];if(d!=null&&d!==h)throw new K(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(l.shape)}.`)}}}function eat(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const a of t){let r=e.hasOwnProperty(a)?e[a]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const nat="layers-model";class Xl extends Sa{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new K("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Mst(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=zst(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Ur))throw new K("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new K(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push(Kx(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new K(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(l=>Kx(l))}else{const i=Kx(t.loss);this.outputs.forEach(l=>{e.push(i)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const l=this.internalOutputShapes[i],u=this.outputNames[i];this.feedOutputNames.push(u),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ro("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const l=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([l,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const a=eat(t.metrics,this.outputNames),r=(i,l,u)=>{this.outputNames.length>1&&(l=this.outputNames[i]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([u,i])};Ro("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const l=a[i];(h=>{const d="";let p,m,y;for(const b of h){if(typeof b=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(b)!==-1){const w=this.internalOutputShapes[i];w[w.length-1]===1||this.lossFunctions[i]===lb?["accuracy","acc"].indexOf(b)!==-1?m=GD:["crossentropy","ce"].indexOf(b)!==-1&&(m=kst):this.lossFunctions[i]===jm?["accuracy","acc"].indexOf(b)!==-1?m=Ist:["crossentropy","ce"].indexOf(b)!==-1&&(m=qD):["accuracy","acc"].indexOf(b)!==-1?m=HD:["crossentropy","ce"].indexOf(b)!==-1&&(m=jD);let S;["accuracy","acc"].indexOf(b)!==-1?S="acc":["crossentropy","ce"].indexOf(b)!==-1&&(S="ce"),y=m,p=d+S}else y=Lst(b),p=d+cm(b);let v;Ro(p,()=>{v=y}),r(i,p,v)}})(l)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const a=s.batchSize==null?32:s.batchSize;Xx(a);const i=this.standardizeUserDataXY(t,e,!0,a);try{const l=i[0].concat(i[1]);this.makeTestFunction();const u=this.testFunction,h=this.testLoop(u,l,a,s.verbose,s.steps);return ns(h)}finally{wa(i[0],t),wa(i[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),Zst(this,t,e)}checkNumSamples(t,e,s,a="steps"){let r;if(s!=null){if(r=null,e!=null)throw new K(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?r=t[0].shape[0]:r=t.shape[0];else throw new K(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return r}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new K("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),a=s?e:[e],r=this.retrieveSymbolicTensors(a),i=new gi;if(t instanceof he&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new K(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],t[u])}else for(const u of this.inputs){const h=t[u.name];if(h==null)throw new K(`No value is provided for the model's input ${u.name}`);i.add(u,h)}const l=Ih(r,i);return s?l:l[0]}retrieveSymbolicTensors(t){const e=jo(null,t.length);let s=t.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],i=r.map(l=>l.name);for(let l=0;l<t.length;++l){const u=i.indexOf(t[l]);if(u!==-1&&(e[l]=r[u],s--),s===0)break}if(s===0)break}if(s>0){const a=[];throw e.forEach((r,i)=>{r==null&&a.push(t[i])}),new K(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return e}predictLoop(t,e=32,s=!1){return nt(()=>{const a=this.checkNumSamples(t);if(s)throw new Gt("Verbose predictLoop() is not implemented yet.");const r=Yx(a,e),i=this.outputs.map(l=>[]);for(let l=0;l<r.length;++l)nt(()=>{const h=r[l][0],d=r[l][1],p=Sh(t,h,d),m=[];if(Array.isArray(p))for(let b=0;b<p.length;++b)m.push({key:this.inputs[b],value:p[b]});else m.push({key:this.inputs[0],value:p});const y=new gi(m);return Ih(this.outputs,y)}).forEach((h,d)=>i[d].push(h));return ns(i.map(l=>Pe(l,0)))})}predict(t,e={}){const s=JD(t);Sk(s,this.inputNames,this.feedInputShapes,!1);try{const a=e.batchSize==null?32:e.batchSize;return Xx(a),this.predictLoop(s,a)}finally{wa(s,t)}}predictOnBatch(t){Sk(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,a){if(this.optimizer_==null)throw new oa("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const l=this.feedOutputShapes[i];this.feedLossFns[i]===jm?r.push(l.slice(0,l.length-1).concat([1])):r.push(l)}if(t=wk(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=wk(e,this.feedOutputNames,r,!1,"target"),Jst(t,e),tat(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&a!=null&&a>0&&t[0].shape[0]%a!==0)throw new K(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,a,r=!0,i){const[l,u]=this.standardizeUserDataXY(t,e,r,i);if(s!=null)throw new Error("sample weight is not supported yet.");let h=null;if(a!=null){const d=YD(a,this.outputNames);h=[];for(let p=0;p<d.length;++p)h.push(await ZD(u[p],null,d[p]))}return[l,u,h]}testLoop(t,e,s,a=0,r){return nt(()=>{const i=this.checkNumSamples(e,s,r,"steps"),l=[];if(a>0)throw new Gt("Verbose mode is not implemented yet.");if(r!=null)throw new Gt("steps mode in testLoop() is not implemented yet");{const u=Yx(i,s),h=Mn(Aa(0,i));for(let d=0;d<u.length;++d){const p=u[d][0],m=u[d][1],y=Do(h,p,m-p),b=j1(e,y),v=t(b);if(d===0)for(let w=0;w<v.length;++w)l.push(_t(0));for(let w=0;w<v.length;++w){const S=v[w];l[w]=yt(l[w],H(m-p,S))}}for(let d=0;d<l.length;++d)l[d]=At(l[d],i)}return l})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const a=t[s];let r=a;if(ik(t,a)>1){const i=ik(t.slice(0,s),a);r+=`_${i}`}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],l=()=>{const p=[];for(let v=0;v<this.inputs.length;++v)p.push({key:this.inputs[v],value:s[v]});const m=new gi(p),y=Ih(this.outputs,m,{training:!0});let b;for(let v=0;v<this.lossFunctions.length;++v){const w=this.lossFunctions[v];let S=w(a[v],y[v]);r[v]!=null&&(S=Hst(S,r[v]));const T=_e(S);e.push(T),v===0?b=S:b=yt(b,S)}for(let v=0;v<this.metricsTensors.length;++v){let w;if(this.outputs.length>1&&v<this.outputs.length)w=e[v];else{const S=this.metricsTensors[v][0],T=this.metricsTensors[v][1];w=_e(S(a[T],y[T]))}on(w),i.push(w)}return b=_e(b),this.calculateLosses().forEach(v=>{b=yt(b,v)}),b},u=this.collectedTrainableWeights.map(p=>p.read());return[this.optimizer_.minimize(l,!0,u)].concat(i)}}makeTestFunction(){this.testFunction=t=>nt(()=>{const e=[];let s;const a=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let h=0;h<this.inputs.length;++h)i.push({key:this.inputs[h],value:a[h]});const l=new gi(i),u=Ih(this.outputs,l);for(let h=0;h<this.lossFunctions.length;++h){const d=this.lossFunctions[h],p=_e(d(r[h],u[h]));h===0?s=p:s=yt(s,p),e.push(s)}for(let h=0;h<this.metricsTensors.length;++h){const d=this.metricsTensors[h][0],p=this.metricsTensors[h][1],m=_e(d(r[p],u[p]));e.push(m)}return e})}async fit(t,e,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let a,r,i,l,u,h,d,p,m;try{const y=s.batchSize==null?32:s.batchSize;Xx(y);const v=await this.standardizeUserData(t,e,s.sampleWeight,s.classWeight,!1,y);a=v[0],r=v[1],m=v[2];let w=!1,S;if(s.validationData!=null&&s.validationData.length>0){if(w=!0,s.validationData.length===2)u=s.validationData[0],h=s.validationData[1];else throw s.validationData.length===3?new Gt("validationData including sample weights is not supported yet."):new K(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const _=await this.standardizeUserData(u,h,null,null,!0,y);d=_[0],p=_[1],S=d.concat(p)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){w=!0;const O=Math.floor(a[0].shape[0]*(1-s.validationSplit)),_=a[0].shape[0];d=Sh(a,O,_),i=a,a=Sh(a,0,O),p=Sh(r,O,_),l=r,r=Sh(r,0,O),S=d.concat(p)}else s.validationSteps!=null&&(w=!0);const T=a.concat(r).concat(m);this.checkTrainableWeightsConsistency();const $=this.makeTrainFunction(),C=this.getDedupedMetricsNames();let I,R;w?(this.makeTestFunction(),I=this.testFunction,R=C.slice().concat(C.map(O=>"val_"+O))):(I=null,S=[],R=C.slice());const L=PD(s.callbacks,s.yieldEvery);return await this.fitLoop($,T,C,y,s.epochs,s.verbose,L,I,S,s.shuffle,R,s.initialEpoch,null,null)}finally{this.isTraining=!1,wa(a,t),wa(r,e),wa(i,t),wa(l,e),wa(d,u),wa(p,h),m!=null&&qt(m)}}async fitLoop(t,e,s,a,r,i,l,u,h,d,p,m,y,b){a==null&&(a=32),r==null&&(r=1),d==null&&(d=!0),m==null&&(m=0);let v=!1;if(u!=null&&h!=null&&(v=!0),b!=null&&(v=!0,y==null))throw new K("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const w=this.checkNumSamples(e,a,y,"steps_per_epoch");let S;w!=null&&(S=Aa(0,w)),i==null&&(i=1);const{callbackList:T,history:$}=UD(l,i,r,m,w,y,a,v,p);T.setModel(this),this.history=$,await T.onTrainBegin(),this.stopTraining_=!1;for(let C=m;C<r;++C){await T.onEpochBegin(C);const I={};if(y!=null)throw new Gt("stepsPerEpoch mode is not implemented yet.");{if(d==="batch")throw new Gt("batch shuffling is not implemneted yet");d&&Z1(S);const R=Mn(S),L=Yx(w,a);for(let M=0;M<L.length;++M){const O={};if(await T.onBatchBegin(M,O),nt(()=>{const _=L[M][0],A=L[M][1],G=Do(R,_,A-_);O.batch=M,O.size=A-_;const X=j1(e,G),tt=t(X);for(let Q=0;Q<s.length;++Q){const U=s[Q],et=tt[Q];O[U]=et,on(et)}if(M===L.length-1&&v){const Q=this.testLoop(u,h,a);for(let U=0;U<s.length;++U){const et=s[U],Y=Q[U];on(Y),I["val_"+et]=Y}}}),await T.onBatchEnd(M,O),VD(O),this.stopTraining_)break}R.dispose()}if(await T.onEpochEnd(C,I),this.stopTraining_)break}return await T.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return Kst(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),a=s[0],r=s[1],l=this.makeTrainFunction()(a.concat(r)),u=[];for(const h of l){const d=await h.data();u.push(d[0])}return qt(l),wa(s[0],t),wa(s[1],e),ns(u)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,a=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let i=0;i<a.length;++i)s&&!a[i].trainable||e.push({name:a[i].originalName,tensor:r[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=o1().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-o1().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Cr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Cr(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const a of e)if(typeof s[a]=="string")t[a]=Cr(s[a]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Cr(cm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Cr(cm(t)));{const t={};for(const e in this.metrics)t[e]=Cr(cm(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=G1(t.optimizer_config),s=Ir(e);let a;if(typeof t.loss=="string")a=To(t.loss);else if(Array.isArray(t.loss))a=t.loss.map(i=>To(i));else if(t.loss!=null){a={};for(const i in t.loss)a[i]=To(t.loss[i])}let r;if(Array.isArray(t.metrics))r=t.metrics.map(i=>To(i));else if(t.metrics!=null){r={};for(const i in t.metrics)r[i]=To(t.metrics[i])}this.compile({loss:a,metrics:r,optimizer:s})}async save(t,e){if(typeof t=="string"){const h=fI(t);if(h.length===0)throw new K(`Cannot find any save handlers for URL '${t}'`);if(h.length>1)throw new K(`Found more than one (${h.length}) save handlers for URL '${t}'`);t=h[0]}if(t.save==null)throw new K("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await l1(this.getNamedWeights(e)),l={modelTopology:this.toJSON(null,!1),format:nat,generatedBy:`TensorFlow.js tfjs-layers v${XD}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){l.trainingConfig=this.getTrainingConfig();const h="optimizer",{data:d,specs:p}=await l1(await this.optimizer.getWeights(),h);s.specs.push(...p),s.data=cI([s.data,d])}return this.userDefinedMetadata!=null&&(yk(this.userDefinedMetadata,this.name,!0),l.userDefinedMetadata=this.userDefinedMetadata),l.weightData=s.data,l.weightSpecs=s.specs,t.save(l)}setUserDefinedMetadata(t){yk(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Xl.className="Model";xt(Xl);class tO extends Xl{}tO.className="Functional";xt(tO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Xh extends Xl{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:ab("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new K(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Xh||t instanceof Xl;let s;if(e){if(s=t,s.outputs.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new K("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new K("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=ast({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(a)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new K(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=FD(this.outputs[0])}this.inboundNodes=[],new ib({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:jo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=t.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(ue(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Xl({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new oa("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new oa("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new oa("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new oa("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},a=!1){let r,i={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new K("Legacy serialization format not supported yet.");r=e}else D(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=e.layers,delete e.layers,i=e;const l=new t(i);if(!(l instanceof Xh))throw new Gt(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const u of r){const d=Ir(u,void 0,a);a&&d.setFastWeightInitDuringBuild(!0),l.add(d)}return l}set stopTraining(t){if(this.model==null)throw new K("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new K("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}Xh.className="Sequential";xt(Xh);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Vn=class extends tl{getConfig(){return{}}};class eO extends Vn{apply(t,e=1){return Unt(t,e)}}eO.className="elu";xt(eO);class nO extends Vn{apply(t){return ky(t)}}nO.className="selu";xt(nO);class sO extends Vn{apply(t){return Oa(t)}}sO.className="relu";xt(sO);class aO extends Vn{apply(t){return nt(()=>Ei(6,Oa(t)))}}aO.className="relu6";xt(aO);class rO extends Vn{apply(t){return t}}rO.className="linear";xt(rO);class iO extends Vn{apply(t){return ua(t)}}iO.className="sigmoid";xt(iO);class oO extends Vn{apply(t){return Gnt(t)}}oO.className="hardSigmoid";xt(oO);class lO extends Vn{apply(t){return Qo(t)}}lO.className="softplus";xt(lO);class uO extends Vn{apply(t){return Wnt(t)}}uO.className="softsign";xt(uO);class cO extends Vn{apply(t){return Ii(t)}}cO.className="tanh";xt(cO);let ES=class extends Vn{apply(t,e=-1){return bf(t,e)}};ES.className="softmax";xt(ES);class hO extends Vn{apply(t,e=-1){return xy(t,e)}}hO.className="logSoftmax";xt(hO);class dO extends Vn{apply(t){return nt(()=>nt(()=>{const e=Math.sqrt(2),s=H(.5,yt(1,gy(At(t,e))));return H(t,s)}))}}dO.className="gelu";xt(dO);class fO extends Vn{apply(t){return nt(()=>H(.5,H(t,yt(1,Ii(H(xn(At(2,Math.PI)),yt(t,H(.044715,Ja(t,3)))))))))}}fO.className="gelu_new";xt(fO);class pO extends Vn{apply(t){return nt(()=>H(t,Ii(Qo(t))))}}pO.className="mish";xt(pO);class mO extends Vn{apply(t,e=1){return nt(()=>H(ua(H(t,e)),t))}}mO.className="swish";xt(mO);function Di(n){return n.getClassName()}function Zx(n,t={}){return Af(n,Os.getMap().classNameMap,t,"activation")}function Oi(n){if(n==null){const t={};return t.className="linear",t.config={},Zx(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},Zx(t)}else return n instanceof Vn?n:Zx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sat(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class gO extends tl{}class yO extends gO{constructor(t){super(),sat(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return nt(()=>{let e=Je([1]);return this.hasL1&&(e=yt(e,Et(H(this.l1,Qe(t))))),this.hasL2&&(e=yt(e,Et(H(this.l2,Df(t))))),j(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}yO.className="L1L2";xt(yO);const Nk={l1l2:"L1L2"};function Te(n){return mS(n)}function Tk(n,t={}){return Af(n,Os.getMap().classNameMap,t,"regularizer")}function De(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in Nk?Nk[n]:n,config:{}};return Tk(e)}else return n instanceof gO?n:Tk(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bO extends Xt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=Vt(t);let s=Oa(t);return this.maxValue!=null&&(s=os(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}bO.className="ReLU";xt(bO);class xO extends Xt{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Vt(t);return lf(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}xO.className="LeakyReLU";xt(xO);class vO extends Xt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Re(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=De(t.alphaRegularizer),this.alphaConstraint=hn(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new K(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=ue(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const a of this.sharedAxes)e[a-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let a=1;a<t.length;++a)s[a]=t[a];this.inputSpec=[new un({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=Vt(t),mf(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Fe(this.alphaInitializer),alphaRegularizer:Te(this.alphaRegularizer),alphaConstraint:cn(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}vO.className="PReLU";xt(vO);class wO extends Xt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new Gt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Vt(t);return lc(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}wO.className="ELU";xt(wO);class SO extends Xt{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=Vt(t);return H(s,wt(hs(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}SO.className="ThresholdedReLU";xt(SO);class NO extends Xt{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new ES().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return nt(()=>{let s=Vt(t);const a=e.mask;if(a!=null){const r=H(kt(ss(s.shape),wt(a,s.dtype)),_t(-1e9));s=yt(s,r)}return this.axis instanceof Array?this.axis.length>1?ls(kt(s,cf(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}NO.className="Softmax";xt(NO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yl(n,t,e){if(typeof n=="number")return jo(n,t);if(n.length!==t)throw new K(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const a=n[s];if(!Mnt(a))throw new K(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${a}`)}return n}function ka(n,t,e,s,a=1){if(n==null)return n;const r=t+(t-1)*(a-1);let i;return e==="same"?i=n:i=n-r+1,Math.floor((i+s-1)/s)}function Wa(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+Ri([e-t,0]);else if(s==="same")n=n*t;else throw new K(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function AS(n,t){return nt(()=>(Ye(t),t==="channelsFirst"?Jt(n,[0,2,3,1]):n))}function TO(n,t){return nt(()=>(Ye(t),t==="channelsFirst"?Jt(n,[0,2,3,4,1]):n))}function aat(n,t,e,s=1,a="valid",r,i=1){return nt(()=>{if(r==null&&(r=Ra()),Ye(r),n.shape.length!==3)throw new K(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new K(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new K(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(r==="channelsFirst"&&(n=Jt(n,[0,2,1])),a==="causal")throw new Gt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=dy(n,t,s,a==="same"?"same":"valid","NWC",i);return e!=null&&(l=_a(l,e)),l})}function Ck(n,t,e,s=[1,1],a="valid",r,i,l=null){return nt(()=>{if(r==null&&(r=Ra()),Ye(r),n.rank!==3&&n.rank!==4)throw new K(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new K(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let u=AS(n,r);if(a==="causal")throw new Gt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=dE({x:u,filter:t,strides:s,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:l}),r==="channelsFirst"&&(u=Jt(u,[0,3,1,2])),u})}function rat(n,t,e,s=[1,1,1],a="valid",r,i){return nt(()=>{if(r==null&&(r=Ra()),Ye(r),n.rank!==4&&n.rank!==5)throw new K(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new K(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let l=TO(n,r);if(a==="causal")throw new Gt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=Ov(l,t,s,a==="same"?"same":"valid","NDHWC",i),e!=null&&(l=_a(l,e)),r==="channelsFirst"&&(l=Jt(l,[0,4,1,2,3])),l})}class ub extends Xt{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ub.verifyArgs(e),this.rank=t,yn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Gt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Yl(e.kernelSize,t,"kernelSize"),this.strides=Yl(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Vs(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ye(this.dataFormat),this.activation=Oi(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=Re(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=hn(e.biasConstraint),this.biasRegularizer=De(e.biasRegularizer),this.activityRegularizer=De(e.activityRegularizer),this.dilationRate=Yl(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new K(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new K(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new K(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Ua("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!gS(t.kernelSize,"number",1,3))throw new K(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Di(this.activation),useBias:this.useBias,biasInitializer:Fe(this.biasInitializer),biasRegularizer:Te(this.biasRegularizer),activityRegularizer:Te(this.activityRegularizer),biasConstraint:cn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class wc extends ub{constructor(t,e){super(t,e),this.kernel=null,wc.verifyArgs(e),this.filters=e.filters,yn(this.filters,"filters"),this.kernelInitializer=Re(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=hn(e.kernelConstraint),this.kernelRegularizer=De(e.kernelRegularizer)}build(t){t=ue(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new K(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],a=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return nt(()=>{t=Vt(t);let s;const a=this.bias==null?null:this.bias.read(),r=vD(this.activation.getClassName());if(r!=null&&this.rank===2)s=Ck(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=aat(t,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=Ck(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=rat(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Gt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=ue(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<s.length;++r){const i=ka(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);e.push(i)}let a=[t[0]];return this.dataFormat==="channelsLast"?(a=a.concat(e),a.push(this.filters)):(a.push(this.filters),a=a.concat(e)),a}getConfig(){const t={filters:this.filters,kernelInitializer:Fe(this.kernelInitializer),kernelRegularizer:Te(this.kernelRegularizer),kernelConstraint:cn(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new K(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Lf extends wc{constructor(t){super(2,t),Lf.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!gS(t.kernelSize,"number",1,2))throw new K(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Lf.className="Conv2D";xt(Lf);class zf extends wc{constructor(t){super(3,t),zf.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new K(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}zf.className="Conv3D";xt(zf);class CO extends Lf{constructor(t){if(super(t),this.inputSpec=[new un({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=ue(t),t.length!==4)throw new K("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new un({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return nt(()=>{let s=Vt(t);if(s.shape.length!==4)throw new K(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,l;this.dataFormat==="channelsFirst"?(i=2,l=3):(i=1,l=2);const u=a[i],h=a[l],d=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],y=this.strides[1],b=Wa(u,m,d,this.padding),v=Wa(h,y,p,this.padding),w=[r,b,v,this.filters];this.dataFormat!=="channelsLast"&&(s=Jt(s,[0,2,3,1]));let S=fy(s,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=Jt(S,[0,3,1,2])),this.bias!=null&&(S=_a(S,this.bias.read(),this.dataFormat)),this.activation!=null&&(S=this.activation.apply(S)),S})}computeOutputShape(t){t=ue(t);const e=t.slice();let s,a,r;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3):(s=3,a=1,r=2);const i=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],h=this.strides[1];return e[s]=this.filters,e[a]=Wa(e[a],u,i,this.padding),e[r]=Wa(e[r],h,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}CO.className="Conv2DTranspose";xt(CO);class $O extends zf{constructor(t){if(super(t),this.inputSpec=[new un({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=ue(t),t.length!==5)throw new K("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new un({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return nt(()=>{let s=Vt(t);if(s.shape.length!==5)throw new K(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,l,u;this.dataFormat==="channelsFirst"?(u=2,i=3,l=4):(u=1,i=2,l=3);const h=a[u],d=a[i],p=a[l],m=this.kernelSize[0],y=this.kernelSize[1],b=this.kernelSize[2],v=this.strides[0],w=this.strides[1],S=this.strides[2],T=Wa(h,v,m,this.padding),$=Wa(d,w,y,this.padding),C=Wa(p,S,b,this.padding),I=[r,T,$,C,this.filters];this.dataFormat!=="channelsLast"&&(s=Jt(s,[0,2,3,4,1]));let R=_v(s,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(R=Jt(R,[0,4,1,2,3])),this.bias!==null&&(R=_a(R,this.bias.read(),this.dataFormat)),this.activation!==null&&(R=this.activation.apply(R)),R})}computeOutputShape(t){t=ue(t);const e=t.slice();let s,a,r,i;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3,i=4):(s=4,a=1,r=2,i=3);const l=this.kernelSize[0],u=this.kernelSize[1],h=this.kernelSize[2],d=this.strides[0],p=this.strides[1],m=this.strides[2];return e[s]=this.filters,e[a]=Wa(e[a],d,l,this.padding),e[r]=Wa(e[r],p,u,this.padding),e[i]=Wa(e[i],m,h,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}$O.className="Conv3DTranspose";xt($O);class kO extends wc{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new K("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new K("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new K(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Re(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=De(e.depthwiseRegularizer),this.depthwiseConstraint=hn(e.depthwiseConstraint),this.pointwiseInitializer=Re(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=De(e.pointwiseRegularizer),this.pointwiseConstraint=hn(e.pointwiseConstraint)}build(t){if(t=ue(t),t.length<this.rank+2)throw new K(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new K(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],a=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let l=0;l<this.rank;++l)r.push(1);r.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new un({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return nt(()=>{t=Vt(t);let s;if(this.rank===1)throw new Gt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Jt(t,[0,2,3,1])),s=Iy(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=_a(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Jt(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Fe(this.depthwiseInitializer),t.pointwiseInitializer=Fe(this.pointwiseInitializer),t.depthwiseRegularizer=Te(this.depthwiseRegularizer),t.pointwiseRegularizer=Te(this.pointwiseRegularizer),t.depthwiseConstraint=cn(this.depthwiseConstraint),t.pointwiseConstraint=cn(this.pointwiseConstraint),t}}kO.className="SeparableConv";class IO extends kO{constructor(t){super(2,t)}}IO.className="SeparableConv2D";xt(IO);class cb extends wc{constructor(t){super(1,t),cb.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!gS(t.kernelSize,"number",1,1))throw new K(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}cb.className="Conv1D";xt(cb);class EO extends Xt{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return nt(()=>{if(t=Vt(t),this.dataFormat==="channelsLast"){const s=um(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return um(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=um(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return um(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}EO.className="Cropping2D";xt(EO);class AO extends Xt{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ye(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,Fnt(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return nt(()=>{let s=Vt(t);const a=s.shape;if(this.dataFormat==="channelsFirst"){s=Jt(s,[0,2,3,1]);const r=this.size[0]*a[2],i=this.size[1]*a[3],l=this.interpolation==="nearest"?ra.resizeNearestNeighbor(s,[r,i]):ra.resizeBilinear(s,[r,i]);return Jt(l,[0,3,1,2])}else{const r=this.size[0]*a[1],i=this.size[1]*a[2];return this.interpolation==="nearest"?ra.resizeNearestNeighbor(s,[r,i]):ra.resizeBilinear(s,[r,i])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}AO.className="UpSampling2D";xt(AO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iat(n,t,e=[1,1],s="valid",a,r){return nt(()=>{a==null&&(a=Ra()),Ye(a);let i=AS(n,a);if(n.rank!==4)throw new K(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new K(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=oc(i,t,e,s==="same"?"same":"valid","NHWC",r),a==="channelsFirst"&&(i=Jt(i,[0,3,1,2])),i})}class RO extends ub{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Re(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=hn(t.depthwiseConstraint),this.depthwiseRegularizer=De(t.depthwiseRegularizer)}build(t){if(t=ue(t),t.length<4)throw new K(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new K(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],a=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return nt(()=>{t=Vt(t);let s=iat(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=_a(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=ue(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],a=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=ka(e,this.kernelSize[0],this.padding,this.strides[0]),i=ka(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],a,r,i]:[t[0],r,i,a]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Fe(this.depthwiseInitializer),t.depthwiseRegularizer=Te(this.depthwiseRegularizer),t.depthwiseConstraint=cn(this.depthwiseRegularizer),t}}RO.className="DepthwiseConv2D";xt(RO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function DO(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new K("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function a(r){return r==null||Array.isArray(r)?r:[r]}return t=a(t),e=a(e),{inputs:n,initialState:t,constants:e}}function OO(n,t,e,s=!1,a,r,i=!1,l=!1){return nt(()=>{const u=t.shape.length;if(u<3)throw new K(`Input should be at least 3D, but is ${u}D.`);const h=[1,0].concat(Aa(2,u));t=Jt(t,h),i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=wt(wt(a,"bool"),"float32"),a.rank===u-1&&(a=rn(a,-1)),a=Jt(a,h)),s&&(t=Ms(t,0),a!=null&&(a=Ms(a,0)));const d=[];let p,m=e;const y=t.shape[0],b=Bs(t);let v;a!=null&&(v=Bs(a));for(let S=0;S<y;++S){const T=b[S],$=nt(()=>n(T,m));if(a==null)p=$[0],m=$[1];else{const C=nt(()=>{const I=v[S],R=kt(vs(I),I),L=yt(H($[0],I),H(m[0],R)),M=m.map((O,_)=>yt(H($[1][_],I),H(O,R)));return{output:L,newStates:M}});p=C.output,m=C.newStates}l&&d.push(p)}let w;return l&&(w=us(d,1)),[p,w,m]})}class Gi extends Xt{constructor(t){super(t);let e;if(t.cell==null)throw new K("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new OS({cells:t.cell}):e=t.cell,e.stateSize==null)throw new K("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new un({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Aa(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){P1(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let a;if(this.returnSequences?a=[t[0],t[1],s]:a=[t[0],s],this.returnState){const r=[];for(const i of e)r.push([t[0],i]);return[a].concat(r)}else return a}computeMask(t,e){return nt(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const a=this.states.map(r=>null);return[s].concat(a)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new Gt("Constants support is not implemented in RNN yet.");P1(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new un({shape:[e,null,...s]});const a=[t[0]].concat(t.slice(2));this.cell.build(a);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Zt(this.stateSpec.map(i=>i.shape[i.shape.length-1]),r))throw new K(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(i=>new un({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){nt(()=>{if(!this.stateful)throw new Pa("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>Je([s,a])):this.states_=[Je([s,this.cell.stateSize])];else if(t==null)qt(this.states_),this.keptStates!=null&&(qt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>Je([s,a])):this.states_[0]=Je([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):qt(this.states_);for(let a=0;a<this.states_.length;++a){const r=t[a],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,l=[s,i];if(!Zt(r.shape,l))throw new K(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${r.shape}`);this.states_[a]=r}}this.states_=this.states_.map(a=>on(a.clone()))})}apply(t,e){let s=e==null?null:e.initialState,a=e==null?null:e.constants;e==null&&(e={});const r=DO(t,s,a,this.numConstants);t=r.inputs,s=r.initialState,a=r.constants;let i=[],l=[];if(s!=null){e.initialState=s,i=i.concat(s),this.stateSpec=[];for(const h of s)this.stateSpec.push(new un({shape:h.shape}));l=l.concat(this.stateSpec)}if(a!=null&&(e.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof nr){const h=[t].concat(i),d=this.inputSpec.concat(l),p=this.inputSpec;this.inputSpec=d;const m=super.apply(h,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return nt(()=>{const s=e==null?null:e.mask,a=e==null?null:e.training;let r=e==null?null:e.initialState;t=Vt(t),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new K(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:a},h=OO((b,v)=>{const w=this.cell.call([b].concat(v),l);return[w[0],w.slice(1)]},t,r,this.goBackwards,s,null,this.unroll,this.returnSequences),d=h[0],p=h[1],m=h[2];this.stateful&&this.resetStates(m,a);const y=this.returnSequences?p:d;return this.returnState?[y].concat(m):y})}getInitialState(t){return nt(()=>{let e=Je(t.shape);return e=Et(e,[1,2]),e=Rf(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?B1(e,[1,s]):e):this.cell.stateSize>1?[B1(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Gi.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),e)}static fromConfig(t,e,s={}){const a=e.cell,r=Ir(a,s);return new t(Object.assign(e,{cell:r}))}}Gi.className="RNN";xt(Gi);class hb extends Xt{}class RS extends hb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,yn(this.units,"units"),this.activation=Oi(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Re(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Re(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Re(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=De(t.kernelRegularizer),this.recurrentRegularizer=De(t.recurrentRegularizer),this.biasRegularizer=De(t.biasRegularizer),this.kernelConstraint=hn(t.kernelConstraint),this.recurrentConstraint=hn(t.recurrentConstraint),this.biasConstraint=hn(t.biasConstraint),this.dropout=lu([1,Ri([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=lu([1,Ri([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ue(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return nt(()=>{if(t=t,t.length!==2)throw new K(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const a=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=_i({ones:()=>vs(t),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=_i({ones:()=>vs(s),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));let r;const i=this.dropoutMask,l=this.recurrentDropoutMask;i!=null?r=Ya(H(t,i),this.kernel.read()):r=Ya(t,this.kernel.read()),this.bias!=null&&(r=_a(r,this.bias.read())),l!=null&&(s=H(s,l));let u=yt(r,Ya(s,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Di(this.activation),useBias:this.useBias,kernelInitializer:Fe(this.kernelInitializer),recurrentInitializer:Fe(this.recurrentInitializer),biasInitializer:Fe(this.biasInitializer),kernelRegularizer:Te(this.kernelRegularizer),recurrentRegularizer:Te(this.recurrentRegularizer),biasRegularizer:Te(this.biasRegularizer),activityRegularizer:Te(this.activityRegularizer),kernelConstraint:cn(this.kernelConstraint),recurrentConstraint:cn(this.recurrentConstraint),biasConstraint:cn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}RS.className="SimpleRNNCell";xt(RS);class _O extends Gi{constructor(t){t.cell=new RS(t),super(t)}call(t,e){return nt(()=>{this.cell.dropoutMask!=null&&(qt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(qt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return new t(e)}}_O.className="SimpleRNN";xt(_O);class DS extends hb{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new K("GRUCell does not support reset_after parameter set to true.");this.units=t.units,yn(this.units,"units"),this.activation=Oi(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Oi(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Re(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Re(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Re(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=De(t.kernelRegularizer),this.recurrentRegularizer=De(t.recurrentRegularizer),this.biasRegularizer=De(t.biasRegularizer),this.kernelConstraint=hn(t.kernelConstraint),this.recurrentConstraint=hn(t.recurrentConstraint),this.biasConstraint=hn(t.biasConstraint),this.dropout=lu([1,Ri([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=lu([1,Ri([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ue(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return nt(()=>{if(t=t,t.length!==2)throw new K(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=_i({ones:()=>vs(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=_i({ones:()=>vs(a),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let l,u,h;0<this.dropout&&this.dropout<1&&(t=H(t,r[0]));let d=Ya(t,this.kernel.read());this.useBias&&(d=_a(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=H(a,i[0]));const p=this.recurrentKernel.read(),[m,y]=as(p,[2*this.units,this.units],p.rank-1),b=Ya(a,m),[v,w,S]=as(d,3,d.rank-1),[T,$]=as(b,2,b.rank-1);l=this.recurrentActivation.apply(yt(v,T)),u=this.recurrentActivation.apply(yt(w,$));const C=Ya(H(u,a),y);h=this.activation.apply(yt(S,C));const I=yt(H(l,a),H(yt(1,ke(l)),h));return[I,I]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Di(this.activation),recurrentActivation:Di(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Fe(this.kernelInitializer),recurrentInitializer:Fe(this.recurrentInitializer),biasInitializer:Fe(this.biasInitializer),kernelRegularizer:Te(this.kernelRegularizer),recurrentRegularizer:Te(this.recurrentRegularizer),biasRegularizer:Te(this.biasRegularizer),activityRegularizer:Te(this.activityRegularizer),kernelConstraint:cn(this.kernelConstraint),recurrentConstraint:cn(this.recurrentConstraint),biasConstraint:cn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}DS.className="GRUCell";xt(DS);class FO extends Gi{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new DS(t),super(t)}call(t,e){return nt(()=>{this.cell.dropoutMask!=null&&(qt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(qt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}FO.className="GRU";xt(FO);class db extends hb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,yn(this.units,"units"),this.activation=Oi(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Oi(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Re(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Re(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Re(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=De(t.kernelRegularizer),this.recurrentRegularizer=De(t.recurrentRegularizer),this.biasRegularizer=De(t.biasRegularizer),this.kernelConstraint=hn(t.kernelConstraint),this.recurrentConstraint=hn(t.recurrentConstraint),this.biasConstraint=hn(t.biasConstraint),this.dropout=lu([1,Ri([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=lu([1,Ri([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=ue(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,i=this.units;a=new(e=class extends fa{apply(u,h){const d=r.apply([i]),p=new bS().apply([i]),m=r.apply([i*2]);return lk(lk(d,p),m)}},e.className="CustomInit",e)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return nt(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new K(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let a=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=_i({ones:()=>vs(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=_i({ones:()=>vs(a),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,l=this.recurrentDropoutMask;let u,h,d,p;0<this.dropout&&this.dropout<1&&(t=H(t,i[0]));let m=Ya(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=H(a,l[0])),m=yt(m,Ya(a,this.recurrentKernel.read())),this.useBias&&(m=_a(m,this.bias.read()));const[y,b,v,w]=as(m,4,m.rank-1);u=this.recurrentActivation.apply(y),h=this.recurrentActivation.apply(b),d=yt(H(h,r),H(u,this.activation.apply(v))),p=this.recurrentActivation.apply(w);const S=H(p,this.activation.apply(d));return[S,S,d]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Di(this.activation),recurrentActivation:Di(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Fe(this.kernelInitializer),recurrentInitializer:Fe(this.recurrentInitializer),biasInitializer:Fe(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Te(this.kernelRegularizer),recurrentRegularizer:Te(this.recurrentRegularizer),biasRegularizer:Te(this.biasRegularizer),activityRegularizer:Te(this.activityRegularizer),kernelConstraint:cn(this.kernelConstraint),recurrentConstraint:cn(this.recurrentConstraint),biasConstraint:cn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}db.className="LSTMCell";xt(db);class LO extends Gi{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new db(t),super(t)}call(t,e){return nt(()=>{this.cell.dropoutMask!=null&&(qt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(qt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}LO.className="LSTM";xt(LO);class OS extends hb{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return nt(()=>{t=t;let s=t.slice(1);const a=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?a.push(s.splice(0,l.stateSize.length)):a.push(s.splice(0,1));a.reverse();const r=[];let i;for(let l=0;l<this.cells.length;++l){const u=this.cells[l];s=a[l],l===0?i=[t[0]].concat(s):i=[i[0]].concat(s),i=u.call(i,e),r.push(i.slice(1))}s=[];for(const l of r.slice().reverse())s.push(...l);return[i[0]].concat(s)})}build(t){P1(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,a)=>{Ro(`RNNCell_${a}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=r=>({className:r.getClassName(),config:r.getConfig()}),a={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),a)}static fromConfig(t,e,s={}){const a=[];for(const r of e.cells)a.push(Ir(r,s));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return U1(t)}setWeights(t){const e=[];for(const s of this.cells){const a=s.weights.length,r=t.splice(a);for(let i=0;i<s.weights.length;++i)e.push([s.weights[i],r[i]])}CS(e)}}OS.className="StackedRNNCells";xt(OS);function _i(n){const{ones:t,rate:e,training:s=!1,count:a=1,dropoutFunc:r}=n,i=()=>r!=null?r(t(),e):kD(t(),e),l=()=>Of(i,t,s);return!a||a<=1?on(l().clone()):Array(a).fill(void 0).map(l).map(h=>on(h.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var oat=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,s=Object.getOwnPropertySymbols(n);a<s.length;a++)t.indexOf(s[a])<0&&Object.prototype.propertyIsEnumerable.call(n,s[a])&&(e[s[a]]=n[s[a]]);return e};class zO extends Gi{constructor(t){if(t.unroll)throw new Gt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Gt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new un({ndim:5})]}call(t,e){return nt(()=>{if(this.cell.dropoutMask!=null&&(qt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(qt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new K("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return nt(()=>{const{stateSize:e}=this.cell,s=t.shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)],i=Je(r);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){nt(()=>{if(!this.stateful)throw new Pa("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)];if(s[0]==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Je(r)):this.states_=[Je(r)];else if(t==null)qt(this.states_),this.keptStates!=null&&(qt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Je(r)):this.states_[0]=Je(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):qt(this.states_);for(let l=0;l<this.states_.length;++l){const u=t[l],h=r;if(!Zt(u.shape,h))throw new K(`State ${l} is incompatible with layer ${this.name}: expected shape=${h}, received shape=${u.shape}`);this.states_[l]=u}}this.states_=this.states_.map(l=>on(l.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:a,padding:r,strides:i,dilationRate:l}=this.cell,u=e==="channelsFirst",h=t[u?3:2],d=t[u?4:3],p=ka(h,a[0],r,i[0],l[0]),m=ka(d,a[1],r,i[1],l[1]);return[...t.slice(0,2),...u?[s,p,m]:[p,m,s]]}}zO.className="ConvRNN2D";class _S extends db{constructor(t){const{filters:e,kernelSize:s,strides:a,padding:r,dataFormat:i,dilationRate:l}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,yn(this.filters,"filters"),this.kernelSize=Yl(s,2,"kernelSize"),this.kernelSize.forEach(u=>yn(u,"kernelSize")),this.strides=Yl(a||1,2,"strides"),this.strides.forEach(u=>yn(u,"strides")),this.padding=r||"valid",Vs(this.padding),this.dataFormat=i||"channelsLast",Ye(this.dataFormat),this.dilationRate=Yl(l||1,2,"dilationRate"),this.dilationRate.forEach(u=>yn(u,"dilationRate"))}build(t){var e;t=ue(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new K(`The channel dimension of the input should be defined. Found ${t[s]}`);const a=t[s],r=4,i=this.kernelSize.concat([a,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const h=this.biasInitializer,d=this.filters;u=new(e=class extends fa{apply(m,y){const b=h.apply([d]),v=ss([d]),w=h.apply([d*2]);return yS([b,v,w])}},e.className="CustomInit",e)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return nt(()=>{if(t.length!==3)throw new K(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,a=t[0],r=t[1],i=t[2],l=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=_i({ones:()=>vs(a),rate:this.dropout,training:s,count:l,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,h=(B,q,lt)=>!q||!q[lt]?B:H(q[lt],B);let d=h(a,u,0),p=h(a,u,1),m=h(a,u,2),y=h(a,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=_i({ones:()=>vs(r),rate:this.recurrentDropout,training:s,count:l,dropoutFunc:this.dropoutFunc}));const b=this.recurrentDropoutMask;let v=h(r,b,0),w=h(r,b,1),S=h(r,b,2),T=h(r,b,3);const $=3,[C,I,R,L]=as(this.kernel.read(),l,$),[M,O,_,A]=this.useBias?as(this.bias.read(),l):[null,null,null,null];d=this.inputConv(d,C,M,this.padding),p=this.inputConv(p,I,O,this.padding),m=this.inputConv(m,R,_,this.padding),y=this.inputConv(y,L,A,this.padding);const[G,X,tt,Q]=as(this.recurrentKernel.read(),l,$);v=this.recurrentConv(v,G),w=this.recurrentConv(w,X),S=this.recurrentConv(S,tt),T=this.recurrentConv(T,Q);const U=this.recurrentActivation.apply(yt(d,v)),et=this.recurrentActivation.apply(yt(p,w)),Y=yt(H(et,i),H(U,this.activation.apply(yt(m,S)))),rt=H(this.recurrentActivation.apply(yt(y,T)),this.activation.apply(Y));return[rt,rt,Y]})}getConfig(){const t=super.getConfig(),{units:e}=t,s=oat(t,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),a)}inputConv(t,e,s,a){const r=Rr(t,e,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?_a(r,s,this.dataFormat):r}recurrentConv(t,e){return Rr(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}_S.className="ConvLSTM2DCell";xt(_S);class MO extends zO{constructor(t){const e=new _S(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}MO.className="ConvLSTM2D";xt(MO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class FS extends Xt{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let a=0;a<this.noiseShape.length;++a)s.push(this.noiseShape[a]==null?e[a]:this.noiseShape[a]);return s}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);if(0<this.rate&&this.rate<1){const a=e.training==null?!1:e.training,r=this.getNoiseShape(s);return Of(()=>kD(s,this.rate,r,this.seed),()=>s,a)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}FS.className="Dropout";xt(FS);class BO extends FS{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}BO.className="SpatialDropout1D";xt(BO);class VO extends Xt{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,yn(this.units,"units"),this.activation=Oi(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=Re(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Re(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=hn(t.kernelConstraint),this.biasConstraint=hn(t.biasConstraint),this.kernelRegularizer=De(t.kernelRegularizer),this.biasRegularizer=De(t.biasRegularizer),this.activityRegularizer=De(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=ue(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=ue(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t),a=vD(this.activation.getClassName());let r;return a!=null?r=Ya(s,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Ya(s,this.kernel.read()),this.bias!=null&&(r=_a(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const t={units:this.units,activation:Di(this.activation),useBias:this.useBias,kernelInitializer:Fe(this.kernelInitializer),biasInitializer:Fe(this.biasInitializer),kernelRegularizer:Te(this.kernelRegularizer),biasRegularizer:Te(this.biasRegularizer),activityRegularizer:Te(this.activityRegularizer),kernelConstraint:cn(this.kernelConstraint),biasConstraint:cn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}VO.className="Dense";xt(VO);class PO extends Xt{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=ue(t);for(const e of t.slice(1))if(e==null)throw new K(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],wi(t,1)]}call(t,e){return nt(()=>{this.invokeCallHook(t,e);let s=Vt(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const a=[0];for(let r=2;r<s.rank;++r)a.push(r);a.push(1),s=Jt(s,a)}return Pnt(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}PO.className="Flatten";xt(PO);class UO extends Xt{constructor(t){super(t),this.supportsMasking=!0,this.activation=Oi(t.activation)}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);return this.activation.apply(s)})}getConfig(){const t={activation:Di(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}UO.className="Activation";xt(UO);class WO extends Xt{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return nt(()=>(t=Vt(t),Bnt(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}WO.className="RepeatVector";xt(WO);class GO extends Xt{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",a=e.slice();let r=1,i=null;for(let u=0;u<a.length;++u){const h=a[u];if(this.isUnknown(h))if(i===null)i=u;else throw new K("Can only specifiy one unknown dimension.");else r*=h}const l=wi(t);if(i!==null){if(r===0||l%r!==0)throw new K(s);a[i]=l/r}else if(l!==r)throw new K(s);return a}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t),a=s.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return j(s,r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}GO.className="Reshape";xt(GO);class HO extends Xt{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Aa(1,t.dims.length+1);if(!Zt(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new un({ndim:this.dims.length+1})]}computeOutputShape(t){t=ue(t);const e=t.slice();return this.dims.forEach((s,a)=>{e[a+1]=t[s]}),e}call(t,e){return Jt(Vt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}HO.className="Permute";xt(HO);class jO extends Xt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=Vt(t);return Bh(Bo(s,this.maskValue),-1)}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t),i=Bh(Bo(s,this.maskValue),-1,!0);return H(s,wt(i,s.dtype))})}}jO.className="Masking";xt(jO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qO extends Xt{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(ge(t.inputLength))}this.inputDim=t.inputDim,yn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,yn(this.outputDim,"outputDim"),this.embeddingsInitializer=Re(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=De(t.embeddingsRegularizer),this.activityRegularizer=De(t.activityRegularizer),this.embeddingsConstraint=hn(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return nt(()=>this.maskZero?(t=Vt(t),Bo(t,ne(t))):null)}computeOutputShape(t){if(t=ue(t),this.inputLength==null)return[...t,this.outputDim];const e=ge(this.inputLength);if(e.length!==t.length-1)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let a=0;a<e.length;++a){const r=e[a],i=t[a+1];if(r!=null&&i!=null&&r!==i)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);r==null&&(e[s]=i),s++}}return[t[0],...e,this.outputDim]}call(t,e){return nt(()=>{this.invokeCallHook(t,e);let s=Vt(t);s.dtype!=="int32"&&(s=Xa(s,"int32"));const a=$D(this.embeddings.read(),j(s,[s.size]));return j(a,ue(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Fe(this.embeddingsInitializer),embeddingsRegularizer:Te(this.embeddingsRegularizer),activityRegularizer:Te(this.activityRegularizer),embeddingsConstraint:cn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}qO.className="Embedding";xt(qO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class il extends Xt{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Gt}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let a=0;a<e.length;++a){const r=t[t.length-e.length+a],i=e[a];if(r==null||i==null||r<0||i<0)s.push(null);else if(r===1)s.push(i);else if(i===1)s.push(r);else{if(r!==i)throw new K("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(r)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[ue(t)]),t=t,t.length<2)throw new K(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const r of t)r!=null&&r[0]!==null&&e.push(r[0]);if(e=vi(e),e.length>1)throw new K(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let r=1;r<t.length;++r){const i=t[r]==null?null:t[r].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const a=t.map(r=>r.length);t.indexOf(null)===-1&&vi(a).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return nt(()=>{if(t=t,this.reshapeRequired){const s=[],a=t.map(r=>r.rank);if(a.indexOf(null)===-1){const r=Ri(a);for(let i of t){const l=i.rank;for(let u=0;u<r-l;++u)i=Rf(i,1);s.push(i)}return this.mergeFunction(s)}else{let r=!1;for(const u of t){const h=u.rank;if(h==null){const d=u.shape,p=d[0],m=d.slice(1).concat([p]);let y=j(u,[p].concat(wi(d.slice(1))));y=Jt(y,[1,0]),y=j(y,m),s.push(y),r=!0}else if(h>1){const d=Aa(1,h).concat([0]);s.push(Jt(u,d)),r=!0}else s.push(u)}let i=this.mergeFunction(s);const l=i.rank;if(r){if(l==null){const u=i.shape,h=u.length,d=u[h-1],p=[d].concat(u.slice(0,u.length-1));i=j(Jt(j(i,[-1,d]),[1,0]),p)}else if(l>1){const u=[l-1].concat(Aa(0,l-1));i=Jt(i,u)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let a=1;a<t.length;++a){const r=t[a]==null?null:t[a].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let s=[];for(const a of t)a!=null&&a[0]!==null&&s.push(a[0]);return s=vi(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return nt(()=>{if(e==null)return null;if(!Array.isArray(e))throw new K("`mask` should be an Array");if(!Array.isArray(t))throw new K("`inputs` should be an Array");if(e.length!==t.length)throw new K(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(a=>a==null))return null;e=e.map(a=>a==null?a:rn(a,0));let s=e[0];for(let a=1;a<e.length-1;++a)s=Ia(s,e[a]);return s})}}class KO extends il{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=yt(e,t[s]);return e})}}KO.className="Add";xt(KO);class XO extends il{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=H(e,t[s]);return e})}}XO.className="Multiply";xt(XO);class YO extends il{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=yt(e,t[s]);return H(1/t.length,e)})}}YO.className="Average";xt(YO);class ZO extends il{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=sr(e,t[s]);return e})}}ZO.className="Maximum";xt(ZO);class QO extends il{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Ei(e,t[s]);return e})}}QO.className="Minimum";xt(QO);class JO extends il{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new K("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const a of t)if(a!=null){e=!1;break}if(e)return;const s=[];for(let a=0;a<t.length;++a){const r=t[a].slice();r.splice(this.axis,1);let i=!1;for(const l of s)if(Zt(l,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new K("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return nt(()=>yS(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new K("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),a=this.axis<0?s.length+this.axis:this.axis;for(const r of e.slice(1)){if(s[a]==null||r[a]==null){s[a]=null;break}s[a]+=r[a]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new K("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new K("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new K(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return nt(()=>{let s=!0;if(e.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const a=[];for(let i=0;i<t.length;++i)e[i]==null?a.push(wt(vs(t[i]),"bool")):e[i].rank<t[i].rank?a.push(rn(e[i],-1)):a.push(e[i]);const r=Pe(a,this.axis);return hy(r,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}JO.className="Concatenate";xt(JO);function Nh(n,t){for(;n<0;)n+=t;return n}function lat(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Gt("batchDot is not implemented for tensors of 4D or higher rank yet");if(D(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),D(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new Gt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,a=t.shape.length;e==null&&(e=[s-1,a-2]);const r=e;return nt(()=>{let i;if(s>a){i=s-a;const u=[];for(let h=0;h<i;++h)u.push(1);t=j(t,t.shape.concat(u))}else if(a>s){i=a-s;const u=[];for(let h=0;h<i;++h)u.push(1);n=j(n,n.shape.concat(u))}else i=0;let l;if(n.shape.length===2&&t.shape.length===2)r[0]===r[1]?l=Et(H(n,t),r[0]):l=Et(H(Jt(n,[1,0]),t),r[1]);else{const u=r[0]!==n.shape.length-1,h=r[1]===t.shape.length-1;l=jt(n,t,u,h)}if(i>0){let u;s>a?u=s+a-3:u=s-1;const h=[];for(let d=u;d<u+i;++d)h.push(d);l=Vr(l,h)}return l.shape.length===1&&(l=rn(l,1)),l})}class t_ extends il{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){D(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new Gt("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,s);if(e[a[0]]!==s[a[1]])throw new K(`Dimension incompatibility: ${e[a[0]]} !== ${s[a[1]]}`)}mergeFunction(t){if(t.length!==2)throw new K(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],a;return Array.isArray(this.axes)?a=this.axes.map((r,i)=>Nh(r,t[i].shape.length)):a=[Nh(this.axes,e.shape.length),Nh(this.axes,s.shape.length)],this.normalize&&(e=Hm(e,a[0]),s=Hm(s,a[1])),lat(e,s,a)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[Nh(this.axes,t.length),Nh(this.axes,e.length)],s}computeOutputShape(t){D(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new Gt("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,s);e.splice(a[0],1),s.splice(a[1],1),s.splice(0,1);const r=e.concat(s);return r.length===1&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}t_.className="Dot";xt(t_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class e_ extends Xt{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);return Of(()=>yt(rb(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}e_.className="GaussianNoise";xt(e_);class n_ extends Xt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);return this.rate>0&&this.rate<1?Of(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return H(s,rb(s.shape,1,r))},()=>s,e.training||!1):s})}}n_.className="GaussianDropout";xt(n_);class s_ extends Xt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Vt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return nt(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return Of(()=>{const r=Vt(t),l=-1.6732632423543772*1.0507009873554805;let u=Mr(Vi(s),this.rate);u=Xa(u,"float32");const h=((1-this.rate)*(1+this.rate*l**2))**-.5,d=-h*l*this.rate,p=yt(H(r,u),H(yt(u,-1),l));return yt(H(p,h),d)},()=>Vt(t),e.training||!1)}return t})}}s_.className="AlphaDropout";xt(s_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yh(n,t,e,s,a,r=.001){let i;if(n.rank===2)i=Nv(n,t,e,s,a,r);else if(n.rank===3)i=Tv(n,t,e,s,a,r);else if(n.rank===4)i=Cv(n,t,e,s,a,r);else throw new Gt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function uat(n,t,e,s,a=.001){return nt(()=>{const r=ff(n,s),i=r.mean,l=r.variance;return[Yh(n,i,l,e,t,a),i,l]})}function cat(n,t,e,s,a=.001){return nt(()=>{const r=ff(n,s),i=r.mean,l=r.variance,u=[];for(const b of Aa(0,n.rank))s.indexOf(b)!==-1?u.push(1):u.push(n.shape[b]);const h=j(i,u),d=j(l,u),p=t==null?null:j(t,u),m=e==null?null:j(e,u);return[Yh(n,h,d,m,p,a),i,l]})}function hat(n,t,e,s,a=.001){return Zt(s.slice().sort(),Aa(0,n.rank-1))?uat(n,t,e,s,a):cat(n,t,e,s,a)}class a_ extends Xt{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Re(t.betaInitializer||"zeros"),this.gammaInitializer=Re(t.gammaInitializer||"ones"),this.movingMeanInitializer=Re(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Re(t.movingVarianceInitializer||"ones"),this.betaConstraint=hn(t.betaConstraint),this.gammaConstraint=hn(t.gammaConstraint),this.betaRegularizer=De(t.betaRegularizer),this.gammaRegularizer=De(t.gammaRegularizer)}build(t){t=ue(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new K(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new un({ndim:t.length,axes:{[e]:s}})];const a=[s];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return nt(()=>{const s=e.training==null?!1:e.training,a=Vt(t),r=a.shape,i=r.length,l=Aa(0,i),u=this.axis>=0?this.axis:this.axis+i;l.splice(u,1);const h=jo(1,i);h[u]=r[u];const d=l.slice();d.sort();const p=!Zt(d,Aa(0,i).slice(0,i-1)),m=()=>{if(p){const T=j(this.movingMean.read(),h),$=j(this.movingVariance.read(),h),C=this.center?j(this.beta.read(),h):null,I=this.scale?j(this.gamma.read(),h):null;return Yh(a,T,$,C,I,this.epsilon)}else return Yh(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return m();const[y,b,v]=hat(a,this.gamma.read(),this.beta.read(),l,this.epsilon),w=(T,$,C)=>{nt(()=>{const I=1-C,R=T.read(),L=H(kt(R,$),I);T.write(kt(R,L))})};return(()=>{w(this.movingMean,b,this.momentum),w(this.movingVariance,v,this.momentum)})(),y})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Fe(this.betaInitializer),gammaInitializer:Fe(this.gammaInitializer),movingMeanInitializer:Fe(this.movingMeanInitializer),movingVarianceInitializer:Fe(this.movingVarianceInitializer),betaRegularizer:Te(this.betaRegularizer),gammaRegularizer:Te(this.gammaRegularizer),betaConstraint:cn(this.betaConstraint),gammaConstraint:cn(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}a_.className="BatchNormalization";xt(a_);class r_ extends Xt{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Re(t.betaInitializer||"zeros"),this.gammaInitializer=Re(t.gammaInitializer||"ones"),this.betaRegularizer=De(t.betaRegularizer),this.gammaRegularizer=De(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=ue(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==vi(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>t[r]),a=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(t,e){const s=Vt(t),a=s.shape,r=a.length;return nt(()=>{let{mean:l,variance:u}=ff(s,this.axis,!0);const h=jo(1,r);for(const v of this.axis)h[v]=a[v];const d=v=>v!=null&&v.shape.length!==r?j(v,h):v;let p=this.scale?d(this.gamma.read()):null,m=this.center?d(this.beta.read()):null;const y=[],b=[];for(let v=0;v<r;++v)this.axis.indexOf(v)!==-1?(y.push(a[v]),b.push(1)):(y.push(1),b.push(a[v]));return l=_s(l,y),u=_s(u,y),p!=null&&(p=_s(p,b)),m!=null&&(m=_s(m,b)),Yh(s,l,u,m,p,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Fe(this.betaInitializer),gammaInitializer:Fe(this.gammaInitializer),betaRegularizer:Te(this.betaRegularizer),gammaRegularizer:Te(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}r_.className="LayerNormalization";xt(r_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dat(n,t,e){return nt(()=>{if(n.rank!==4)throw new K(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new K("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Ra()),e!=="channelsLast"&&e!=="channelsFirst")throw new K(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Br(n,s)})}class i_ extends Xt{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Ra():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new K(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new K(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new K(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new un({ndim:4})]}computeOutputShape(t){t=ue(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return nt(()=>dat(Vt(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}i_.className="ZeroPadding2D";xt(i_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fb(n,t,e,s,a,r){return nt(()=>{Ye(a),SD(r),Vs(s),e==null&&(e=[1,1]),s==null&&(s="valid"),a==null&&(a=Ra()),r==null&&(r="max"),n=AS(n,a);let i;const l=s==="same"?"same":"valid";return r==="max"?i=df(n,t,e,l):i=sf(n,t,e,l),a==="channelsFirst"&&(i=Jt(i,[0,3,1,2])),i})}function o_(n,t,e,s,a,r){return nt(()=>{Ye(a),SD(r),Vs(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),a==null&&(a=Ra()),r==null&&(r="max"),n=TO(n,a);let i;const l=s==="same"?"same":"valid";return r==="max"?i=Kv(n,t,e,l):i=Sv(n,t,e,l),a==="channelsFirst"&&(i=Jt(i,[0,4,1,2,3])),i})}class l_ extends Xt{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new K(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(yn(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new K(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);yn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Vs(this.padding),this.inputSpec=[new un({ndim:3})]}computeOutputShape(t){t=ue(t);const e=ka(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return nt(()=>{this.invokeCallHook(t,e),t=Rf(Vt(t),2);const s=this.poolingFunction(Vt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Vr(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class u_ extends l_{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Ye(r),Vs(a),fb(t,e,s,a,r,"max")}}u_.className="MaxPooling1D";xt(u_);class c_ extends l_{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Ye(r),Vs(a),fb(t,e,s,a,r,"avg")}}c_.className="AveragePooling1D";xt(c_);class h_ extends Xt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new K(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];yn(this.poolSize,"poolSize"),yn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ye(this.dataFormat),Vs(this.padding),this.inputSpec=[new un({ndim:4})]}computeOutputShape(t){t=ue(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=ka(e,this.poolSize[0],this.padding,this.strides[0]),s=ka(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return nt(()=>(this.invokeCallHook(t,e),this.poolingFunction(Vt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class d_ extends h_{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Ye(r),Vs(a),fb(t,e,s,a,r,"max")}}d_.className="MaxPooling2D";xt(d_);class f_ extends h_{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Ye(r),Vs(a),fb(t,e,s,a,r,"avg")}}f_.className="AveragePooling2D";xt(f_);class p_ extends Xt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new K(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];yn(this.poolSize,"poolSize"),yn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ye(this.dataFormat),Vs(this.padding),this.inputSpec=[new un({ndim:5})]}computeOutputShape(t){t=ue(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],a=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=ka(e,this.poolSize[0],this.padding,this.strides[0]),s=ka(s,this.poolSize[1],this.padding,this.strides[1]),a=ka(a,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,a]:[t[0],e,s,a,t[4]]}call(t,e){return nt(()=>(this.invokeCallHook(t,e),this.poolingFunction(Vt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class m_ extends p_{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Ye(r),Vs(a),o_(t,e,s,a,r,"max")}}m_.className="MaxPooling3D";xt(m_);class g_ extends p_{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Ye(r),Vs(a),o_(t,e,s,a,r,"avg")}}g_.className="AveragePooling3D";xt(g_);class y_ extends Xt{constructor(t){super(t),this.inputSpec=[new un({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Gt}}class b_ extends y_{constructor(t){super(t||{})}call(t,e){return nt(()=>{const s=Vt(t);return _e(s,1)})}}b_.className="GlobalAveragePooling1D";xt(b_);class x_ extends y_{constructor(t){super(t||{})}call(t,e){return nt(()=>{const s=Vt(t);return zs(s,1)})}}x_.className="GlobalMaxPooling1D";xt(x_);class v_ extends Xt{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ye(this.dataFormat),this.inputSpec=[new un({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Gt}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class w_ extends v_{call(t,e){return nt(()=>{const s=Vt(t);return this.dataFormat==="channelsLast"?_e(s,[1,2]):_e(s,[2,3])})}}w_.className="GlobalAveragePooling2D";xt(w_);class S_ extends v_{call(t,e){return nt(()=>{const s=Vt(t);return this.dataFormat==="channelsLast"?zs(s,[1,2]):zs(s,[2,3])})}}S_.className="GlobalMaxPooling2D";xt(S_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class N_ extends Xt{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const a=e.layer,r=Ir(a,s);delete e.layer;const i={layer:r};return Object.assign(i,e),new t(i)}}class T_ extends N_{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=ue(t),t.length<3)throw new K(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=ue(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),a=t[1];return[s[0],a].concat(s.slice(1))}call(t,e){return nt(()=>(t=Vt(t),OO((i,l)=>[Vt(this.layer.call(i,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}T_.className="TimeDistributed";xt(T_);function fat(n){rl(_nt,"BidirectionalMergeMode",n)}const pat="concat";class C_ extends N_{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=Ir(s),e.goBackwards=e.goBackwards!==!0;const a={};if(a.className=t.layer.getClassName(),a.config=e,this.backwardLayer=Ir(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?pat:t.mergeMode,fat(this.mergeMode),t.weights)throw new Gt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,a,r;return this.returnState&&(r=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,a=[s]):this.mergeMode==null?a=[s,s.slice()]:a=[s],this.returnState?this.mergeMode==null?a.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):ns(a)}apply(t,e){let s=e==null?null:e.initialState,a=e==null?null:e.constants;e==null&&(e={});const r=DO(t,s,a,this.numConstants);if(t=r.inputs,s=r.initialState,a=r.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&a==null)return super.apply(t,e);const i=[],l=[];if(s!=null){const h=s.length;if(h%2>0)throw new K("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,i.push(...s);const d=s.map(p=>new un({shape:p.shape}));this.forwardLayer.stateSpec=d.slice(0,h/2),this.backwardLayer.stateSpec=d.slice(h/2),l.push(...d)}if(a!=null)throw new Gt("Support for constants in Bidirectional layers is not implemented yet.");const u=i[0]instanceof nr;for(const h of i)if(h instanceof nr!==u)throw new K("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const h=[t].concat(i),d=this.inputSpec.concat(l),p=this.inputSpec;this.inputSpec=d;const m=super.apply(h,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return nt(()=>{const s=e.initialState;let a,r;if(s==null)a=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const u=s.slice(0,s.length/2),h=s.slice(s.length/2);a=this.forwardLayer.call(t,Object.assign(e,{initialState:u})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:h}))}let i;this.returnState&&(Array.isArray(a)&&(i=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Ms(r,1));let l;return this.mergeMode==="concat"?l=yS([a,r]):this.mergeMode==="sum"?l=yt(a,r):this.mergeMode==="ave"?l=H(.5,yt(a,r)):this.mergeMode==="mul"?l=H(a,r):this.mergeMode==null&&(l=[a,r]),this.returnState?this.mergeMode==null?l.concat(i):[l].concat(i):l})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Ro(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Ro(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=Ir(e.layer);if(delete e.layer,e.numConstants!=null)throw new Gt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=e;return a.layer=s,new t(a)}}C_.className="Bidirectional";xt(C_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $_ extends Xt{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return nt(()=>(t=Vt(t),t.dtype!=="float32"&&(t=Xa(t,"float32")),yt(H(t,this.scale),this.offset)))}}$_.className="Rescaling";xt($_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:mat,cropAndResize:gat}=ra;class k_ extends Xt{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,s,a,r,i,l,u){return nt(()=>{let h,d=!1;const p=e/i,m=s/l,y=(a+e)/i,b=(r+s)/l,v=[p,m,y,b],w=[];t.rank===3?(d=!0,h=us([t])):h=t;for(let I=0;I<h.shape[0];I++)w.push(v);const S=la(w,[w.length,4]),T=Vo(0,w.length,1,"int32"),C=gat(h,S,T,[a,r],"nearest");return Xa(d?Vt(Bs(C)):C,u)})}upsize(t,e,s,a){return nt(()=>{const r=mat(t,[e,s]);return Xa(r,a)})}call(t,e){return nt(()=>{const s=Vt(t),a=s.dtype,r=s.shape,i=r[r.length-3],l=r[r.length-2];let u=0;i!==this.height&&(u=Math.floor((i-this.height)/2));let h=0;return l!==this.width&&(h=Math.floor((l-this.width)/2),h===0&&(h=1)),u>=0&&h>=0?this.centerCrop(s,u,h,this.height,this.width,i,l,a):this.upsize(t,this.height,this.width,a)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=ue(t);const e=t.length-3,s=t.length-2;return t[e]=this.height,t[s]=this.width,t}}k_.className="CenterCrop";xt(k_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yat(n,t,e,s){let a=Vt(n);if(a.dtype!=="int32"&&(a=Xa(a,"int32")),t==="int")return a;const r=a.shape;if(a.rank===0&&(a=rn(a,-1)),t==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=rn(a,-1)),a.rank>2)throw new K(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${r} which would result in output rank ${a.rank}.`);const i=["multiHot","oneHot"].includes(t),l=a;let u;if(typeof s<"u"&&t==="count"?u=Am(l,s,e,i):u=Am(l,[],e,i),t!=="tfIdf")return u;if(s)return H(u,s);throw new K("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class I_ extends Xt{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=ue(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return nt(()=>{t=Vt(t),t.dtype!=="int32"&&(t=Xa(t,"int32"));let s;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new K(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);s=Vt(e.countWeights)}const a=zs(t),r=Jl(t),i=hs(this.numTokens,a).bufferSync().get(0),l=Mr(r,0).bufferSync().get(0);if(!(i&&l))throw new K(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return yat(t,this.outputMode,this.numTokens,s)})}}I_.className="CategoryEncoding";xt(I_);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const bat=["bilinear","nearest"],$k=new Set(bat);class E_ extends Xt{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if($k.has(t.interpolation))this.interpolation=t.interpolation;else throw new K(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=ue(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return nt(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return ra.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return ra.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...$k]} are supported`)})}}E_.className="Resizing";xt(E_);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class A_{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}}A_.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class R_ extends Xt{constructor(t){super(t),this.randomGenerator=new A_(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}R_.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const xat=["bilinear","nearest"],kk=new Set(xat);class D_ extends R_{constructor(t){super(t);const{factor:e,interpolation:s="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new K(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new K(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new K(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(kk.has(s))this.interpolation=s;else throw new K(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=ue(t);const e=t[2];return[this.imgHeight,-1,e]}call(t,e){return nt(()=>{const s=Vt(t);this.imgHeight=s.shape[s.shape.length-3];const a=s.shape[s.shape.length-2];this.widthFactor=Vi([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*a;r=Math.round(r);const i=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return ra.resizeBilinear(t,i);case"nearest":return ra.resizeNearestNeighbor(t,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...kk]} are supported`)}})}}D_.className="RandomWidth";xt(D_);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Ik;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Ik||(Ik={}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vat=zy;class pb extends tg{nextDataId(){return pb.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Y1(this,Na())}write(t,e,s){this.firstUse&&(this.firstUse=!1,at().get("IS_NODE")&&Ds(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:s,refCount:1}),a}makeTensorInfo(t,e,s){let a;if(e==="string"&&s!=null&&s.length>0&&Ga(s[0])){const r=s.map(i=>ja(i));a=this.write(r,t,e)}else a=this.write(s,t,e);return{dataId:a,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,a,r){this.data.set(t,{values:e,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const a=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return Dr(a,r)}return Pk(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(a=>Er(a));return Wt(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Wt(t.shape,t.dtype,e)}makeOutput(t,e,s){return Na().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Gn();return t(),{kernelMs:Gn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Rt([t],"where");const e=this.readSync(t.dataId);return vat(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}pb.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lv("cpu",()=>new pb,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O_=ye(Tu,n=>n>=0?n:Math.exp(n)-1),wat={kernelName:Tu,backendName:"cpu",kernelFunc:O_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function __(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{alpha:r}=s;Rt([a],"leakyRelu");const i=ht(a.shape),l=e.data.get(a.dataId).values,u=bn("float32",i);for(let h=0;h<l.length;h++)u[h]=l[h]<0?r*l[h]:l[h];return e.makeTensorInfo(a.shape,"float32",u)}const Sat={kernelName:xd,backendName:"cpu",kernelFunc:__};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nat=Xe((n,t)=>n<0?t*n:n);function F_(n){const{inputs:t,backend:e}=n,{x:s,alpha:a}=t;Rt([s,a],"prelu");const r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,[l,u]=Nat(s.shape,a.shape,r,i,"float32");return e.makeTensorInfo(u,"float32",l)}const Tat={kernelName:Md,backendName:"cpu",kernelFunc:F_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L_=ye(Wu,n=>Math.max(0,n)),Cat={kernelName:Wu,backendName:"cpu",kernelFunc:L_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z_=ye(Gu,n=>Math.min(Math.max(0,n),6)),$at={kernelName:Gu,backendName:"cpu",kernelFunc:z_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ym(n,t,e,s,a){if(e==="linear")return er({inputs:{x:t},backend:n});if(e==="relu")return L_({inputs:{x:t},backend:n});if(e==="elu")return O_({inputs:{x:t},backend:n});if(e==="relu6")return z_({inputs:{x:t},backend:n});if(e==="prelu")return F_({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return __({inputs:{x:t},backend:n,attrs:{alpha:a}});if(e==="sigmoid")return wR({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ie(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{shape:r}=s,i=ht(a.shape),l=Q1(r,i),u=ht(l);D(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(a.dataId);const h=e.data.get(a.dataId);if(h.complexTensorInfos!=null){const d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag;d.shape=l,p.shape=l}return{dataId:a.dataId,shape:l,dtype:a.dtype}}const kat={kernelName:Vd,backendName:"cpu",kernelFunc:Ie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r}=t,{transposeA:i,transposeB:l}=s;Rt([a,r],"matMul");const u=a.shape.length,h=r.shape.length,d=i?a.shape[u-2]:a.shape[u-1],p=l?r.shape[h-1]:r.shape[h-2],m=i?a.shape[u-1]:a.shape[u-2],y=l?r.shape[h-2]:r.shape[h-1],b=a.shape.slice(0,-2),v=r.shape.slice(0,-2),w=ht(b),S=ht(v),$=Pt(a.shape.slice(0,-2),r.shape.slice(0,-2)).concat([m,y]);D(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${a.shape} and ${r.shape} and transposeA=${i} and transposeB=${l} must match.`);const C=i?[w,d,m]:[w,m,d],I=l?[S,y,p]:[S,p,y],R=Ie({inputs:{x:a},backend:e,attrs:{shape:C}}),L=Ie({inputs:{x:r},backend:e,attrs:{shape:I}}),M=i?R.shape[1]:R.shape[2],O=i?R.shape[2]:R.shape[1],_=l?L.shape[1]:L.shape[2],A=Math.max(w,S),G=e.data.get(R.dataId).values,X=e.data.get(L.dataId).values,tt=Lt(R.shape),Q=Lt(L.shape),[U,et,Y]=i?[tt[0],1,tt[1]]:[tt[0],tt[1],1],[rt,B,q]=l?[1,Q[1],Q[0]]:[Q[1],1,Q[0]],lt=O*_,ot=Wt([A,O,_],R.dtype),ut=ot.values,mt=e.blockSize;for(let bt=0;bt<A;bt++){const Tt=bt%w,St=bt%S;for(let Ct=0;Ct<O;Ct+=mt){const It=Math.min(Ct+mt,O);for(let Mt=0;Mt<_;Mt+=mt){const se=Math.min(Mt+mt,_);for(let ae=0;ae<M;ae+=mt){const ve=Math.min(ae+mt,M);for(let de=Ct;de<It;de++)for(let re=Mt;re<se;re++){let we=0;for(let me=ae;me<ve;me++){const Ts=G[Tt*U+de*et+me*Y],Ue=X[me*rt+re*B+St*q];we+=Ts*Ue}ut[bt*lt+(de*_+re)]+=we}}}}}return e.disposeIntermediateTensorInfo(R),e.disposeIntermediateTensorInfo(L),e.makeTensorInfo($,ot.dtype,ot.values)}const Iat={kernelName:sd,backendName:"cpu",kernelFunc:M_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eat(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r,bias:i,preluActivationWeights:l}=t,{transposeA:u,transposeB:h,activation:d,leakyreluAlpha:p}=s;let m,y,b;const v=[];m=M_({inputs:{a,b:r},attrs:{transposeA:u,transposeB:h},backend:e}),i&&(y=ou({inputs:{a:m,b:i},backend:e}),v.push(m),m=y),d&&(b=Ym(e,m,d,l,p),v.push(m),m=b);for(const S of v)e.disposeIntermediateTensorInfo(S);return m}const Aat={kernelName:Dh,backendName:"cpu",kernelFunc:Eat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rat=ye(hu,n=>Math.acos(n)),Dat={kernelName:hu,backendName:"cpu",kernelFunc:Rat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oat=ye(du,n=>Math.acosh(n)),_at={kernelName:du,backendName:"cpu",kernelFunc:Oat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fat(n){const{inputs:t,backend:e}=n,s=t;Rt(t,"addN");const a=s.map(l=>e.data.get(l.dataId).values),r=Wt(s[0].shape,s[0].dtype),i=r.values;for(let l=0;l<s.length;l++){const u=a[l];for(let h=0;h<i.length;h++)i[h]+=u[h]}return e.makeTensorInfo(r.shape,r.dtype,r.values)}const Lat={kernelName:Qh,backendName:"cpu",kernelFunc:Fat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zat(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;Rt(a,"all");const l=Kt(r,a.shape);let u=l;const h=ze(u,a.shape.length);let d=a;h!=null&&(d=cs({inputs:{x:a},backend:e,attrs:{perm:h}}),u=Ke(u.length,a.shape.length)),Dn("all",u,d.shape.length);const[p,m]=wn(d.shape,u),y=ht(m),b=En(ht(p),d.dtype),v=e.data.get(d.dataId).values;for(let S=0;S<b.length;++S){const T=S*y;let $=v[T];for(let C=0;C<y;++C){const I=v[T+C];$=$&&I}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(d);const w=e.makeTensorInfo(p,d.dtype,b);if(i){const S=qe(p,l),T=Ie({inputs:{x:w},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(w),T}return w}const Mat={kernelName:sg,backendName:"cpu",kernelFunc:zat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bat(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;Rt(a,"any");const l=Kt(r,a.shape);let u=l;const h=ze(u,a.shape.length);let d=a;h!=null&&(d=cs({inputs:{x:a},backend:e,attrs:{perm:h}}),u=Ke(u.length,a.shape.length)),Dn("any",u,d.shape.length);const[p,m]=wn(d.shape,u),y=ht(m),b=En(ht(p),d.dtype),v=e.data.get(d.dataId).values;for(let S=0;S<b.length;++S){const T=S*y;let $=v[T];for(let C=0;C<y;++C){const I=v[T+C];$=$||I}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(d);const w=e.makeTensorInfo(p,d.dtype,b);if(i){const S=qe(p,l),T=Ie({inputs:{x:w},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(w),T}return w}const Vat={kernelName:ag,backendName:"cpu",kernelFunc:Bat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pat(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;Rt(a,"argMax");let i=Kt(r,a.shape);const l=ze(i,a.shape.length);let u=a;const h=[];l!=null&&(u=cs({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=Ke(i.length,u.shape.length)),i=[i[0]],Dn("argMax",i,u.shape.length);const[d,p]=wn(u.shape,i),m=ht(d),y=En(m,"int32"),b=ht(p),v=e.data.get(u.dataId).values;for(let w=0;w<y.length;++w){const S=w*b;let T=v[S],$=0;for(let C=0;C<b;++C){const I=v[S+C];I>T&&(T=I,$=C)}y[w]=$}return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(d,"int32",y)}const Uat={kernelName:Jh,backendName:"cpu",kernelFunc:Pat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wat(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;Rt(a,"argMin");let i=Kt(r,a.shape);const l=ze(i,a.shape.length);let u=a;const h=[];l!=null&&(u=cs({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=Ke(i.length,u.shape.length)),i=[i[0]],Dn("argMin",i,u.shape.length);const[d,p]=wn(u.shape,i),m=ht(d),y=En(m,"int32"),b=ht(p),v=e.data.get(u.dataId).values;for(let w=0;w<y.length;++w){const S=w*b;let T=v[S],$=0;for(let C=0;C<b;++C){const I=v[S+C];I<T&&(T=I,$=C)}y[w]=$}return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(d,"int32",y)}const Gat={kernelName:td,backendName:"cpu",kernelFunc:Wat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hat=ye(fu,n=>Math.asin(n)),jat={kernelName:fu,backendName:"cpu",kernelFunc:Hat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qat=ye(pu,n=>Math.asinh(n)),Kat={kernelName:pu,backendName:"cpu",kernelFunc:qat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xat=ye(mu,n=>Math.atan(n)),Yat={kernelName:mu,backendName:"cpu",kernelFunc:Xat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zat=Xe((n,t)=>Math.atan2(n,t)),Qat=dn(yu,Zat),Jat={kernelName:yu,backendName:"cpu",kernelFunc:Qat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const trt=ye(gu,n=>Math.atanh(n)),ert={kernelName:gu,backendName:"cpu",kernelFunc:trt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LS(n,t,e,s,a,r){const i=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterHeight,p=a.effectiveFilterWidth,m=a.padInfo.top,y=a.padInfo.left,b=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Wt(a.outShape,e),w=v.values,S=a.outShape[1]*a.outShape[2]*a.outShape[3],T=a.outShape[2]*a.outShape[3],$=a.outShape[3];for(let C=0;C<a.batchSize;++C){const I=C*S,R=C*s[0];for(let L=0;L<a.inChannels;++L)for(let M=0;M<a.outHeight;++M){const O=M*i-m,_=Math.max(0,O),A=Math.min(a.inHeight,d+O),G=I+M*T;for(let X=0;X<a.outWidth;++X){const tt=X*l-y,Q=Math.max(0,tt),U=Math.min(a.inWidth,p+tt);let et=b,Y=0,rt=0;for(let q=_;q<A;q+=u){const lt=R+q*s[1];for(let ot=Q;ot<U;ot+=h){const ut=lt+ot*s[2],mt=n[ut+L];r==="max"&&mt>et?et=mt:r==="avg"&&(Y+=mt,rt++)}if(isNaN(et))break}const B=G+X*$+L;w[B]=r==="avg"?Y/rt:et}}}return v}function B_(n,t,e,s,a=!1,r=!1){const i=Wt(s.outShape,"int32"),l=s.strideHeight,u=s.strideWidth,h=s.dilationHeight,d=s.dilationWidth,p=s.effectiveFilterHeight,m=s.effectiveFilterWidth,y=s.padInfo.top,b=s.padInfo.left,v=Wt(t,e,n);for(let w=0;w<s.batchSize;++w)for(let S=0;S<s.inChannels;++S)for(let T=0;T<s.outHeight;++T){const $=T*l-y;let C=$;for(;C<0;)C+=h;const I=Math.min(s.inHeight,p+$);for(let R=0;R<s.outWidth;++R){const L=R*u-b;let M=L;for(;M<0;)M+=d;const O=Math.min(s.inWidth,m+L);let _=Number.NEGATIVE_INFINITY,A=-1;for(let G=C;G<I;G+=h){const X=G-$;for(let tt=M;tt<O;tt+=d){const Q=tt-L,U=v.get(w,G,tt,S);U>_&&(_=U,a?A=r?((w*s.inHeight+G)*s.inWidth+tt)*s.inChannels+S:(G*s.inWidth+tt)*s.inChannels+S:A=X*m+Q)}}i.set(A,w,T,R,S)}}return i}function V_(n,t,e,s,a,r){const i=a.strideDepth,l=a.strideHeight,u=a.strideWidth,h=a.dilationDepth,d=a.dilationHeight,p=a.dilationWidth,m=a.effectiveFilterDepth,y=a.effectiveFilterHeight,b=a.effectiveFilterWidth,v=a.padInfo.front,w=a.padInfo.top,S=a.padInfo.left,T=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,$=Wt(a.outShape,e),C=$.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],R=a.outShape[2]*a.outShape[3]*a.outShape[4],L=a.outShape[3]*a.outShape[4],M=a.outShape[4];for(let O=0;O<a.batchSize;++O){const _=O*I,A=O*s[0];for(let G=0;G<a.inChannels;++G)for(let X=0;X<a.outDepth;++X){const tt=X*i-v;let Q=tt;for(;Q<0;)Q+=h;const U=Math.min(a.inDepth,m+tt),et=_+X*R;for(let Y=0;Y<a.outHeight;++Y){const rt=Y*l-w;let B=rt;for(;B<0;)B+=d;const q=Math.min(a.inHeight,y+rt),lt=et+Y*L;for(let ot=0;ot<a.outWidth;++ot){const ut=ot*u-S;let mt=ut;for(;mt<0;)mt+=p;const bt=Math.min(a.inWidth,b+ut),Tt=lt+ot*M;let St=T,Ct=0,It=0;for(let se=Q;se<U;se+=h){const ae=A+se*s[1];for(let ve=B;ve<q;ve+=d){const de=ae+ve*s[2];for(let re=mt;re<bt;re+=p){const we=de+re*s[3],me=n[we+G];if(r==="max"&&me>St?St=me:r==="avg"&&(Ct+=me,It++),isNaN(St))break}if(isNaN(St))break}if(isNaN(St))break}const Mt=Tt+G;C[Mt]=r==="avg"?Ct/Math.max(It,1):St}}}}return $}function nrt(n,t){const e=Wt(t.outShape,"int32"),s=t.strideDepth,a=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;for(let v=0;v<t.batchSize;++v)for(let w=0;w<t.inChannels;++w)for(let S=0;S<t.outDepth;++S){const T=S*s-m;let $=T;for(;$<0;)$+=i;const C=Math.min(t.inDepth,h+T);for(let I=0;I<t.outHeight;++I){const R=I*a-y;let L=R;for(;L<0;)L+=l;const M=Math.min(t.inHeight,d+R);for(let O=0;O<t.outWidth;++O){const _=O*r-b;let A=_;for(;A<0;)A+=u;const G=Math.min(t.inWidth,p+_);let X=Number.NEGATIVE_INFINITY,tt=-1;for(let Q=$;Q<C;Q+=i){const U=Q-T;for(let et=L;et<M;et+=l){const Y=et-R;for(let rt=A;rt<G;rt+=u){const B=rt-_,q=n.get(v,Q,et,rt,w);q>=X&&(X=q,tt=U*d*p+Y*d+B)}}}e.set(tt,v,S,I,O,w)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function srt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;Rt(a,"avgPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;D(Rn(i,h),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const d=ha(a.shape,r,i,h,l,u);let p;if(d.filterWidth===1&&d.filterHeight===1&&Zt(d.inShape,d.outShape))p=er({inputs:{x:a},backend:e});else{const m=e.data.get(a.dataId).values,y=Lt(a.shape),b=LS(m,a.shape,a.dtype,y,d,"avg");p=e.makeTensorInfo(d.outShape,a.dtype,b.values)}return p}const art={kernelName:ed,backendName:"cpu",kernelFunc:srt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rrt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s;Rt(a,"avgPool3d");const d=Lr(a.shape,r,i,1,l,u,h),p=e.data.get(a.dataId).values,m=V_(p,a.shape,a.dtype,Lt(a.shape),d,"avg");return e.makeTensorInfo(m.shape,"float32",m.values)}const irt={kernelName:nd,backendName:"cpu",kernelFunc:rrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ort(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,{filterSize:i,strides:l,pad:u,dimRoundingMode:h}=s;Rt([a,r],"avgPool3DGrad");const d=Lr(r.shape,i,l,1,u,h),p=d.strideDepth,m=d.strideHeight,y=d.strideWidth,b=d.filterDepth,v=d.filterHeight,w=d.filterWidth,S=d.dilationDepth,T=d.dilationHeight,$=d.dilationWidth,C=d.effectiveFilterDepth,I=d.effectiveFilterHeight,R=d.effectiveFilterWidth,L=C-1-d.padInfo.front,M=R-1-d.padInfo.left,O=I-1-d.padInfo.top,_=Wt(r.shape,"float32"),A=1/(b*v*w),G=e.bufferSync(a);for(let X=0;X<d.batchSize;++X)for(let tt=0;tt<d.inChannels;++tt)for(let Q=0;Q<d.inDepth;++Q)for(let U=0;U<d.inHeight;++U)for(let et=0;et<d.inWidth;++et){const Y=Q-L,rt=U-O,B=et-M;let q=0;for(let lt=0;lt<C;lt+=S){const ot=(Y+lt)/p;if(!(ot<0||ot>=d.outDepth||Math.floor(ot)!==ot))for(let ut=0;ut<I;ut+=T){const mt=(rt+ut)/m;if(!(mt<0||mt>=d.outHeight||Math.floor(mt)!==mt))for(let bt=0;bt<R;bt+=$){const Tt=(B+bt)/y;if(Tt<0||Tt>=d.outWidth||Math.floor(Tt)!==Tt)continue;const St=G.get(X,ot,mt,Tt,tt);q+=St}}}_.set(q*A,X,Q,U,et,tt)}return e.makeTensorInfo(_.shape,_.dtype,_.values)}const lrt={kernelName:ig,backendName:"cpu",kernelFunc:ort};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function urt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r;Rt([a,r],"avgPoolGrad");const{filterSize:l,strides:u,pad:h}=s,d=ha(i.shape,l,u,1,h),p=d.strideHeight,m=d.strideWidth,y=d.filterHeight,b=d.filterWidth,v=d.dilationHeight,w=d.dilationWidth,S=d.effectiveFilterHeight,T=d.effectiveFilterWidth,$=T-1-d.padInfo.left,C=S-1-d.padInfo.top,I=Wt(i.shape,"float32"),R=1/(y*b),L=e.data.get(a.dataId).values,M=Wt(a.shape,"float32",L);for(let O=0;O<d.batchSize;++O)for(let _=0;_<d.inChannels;++_)for(let A=0;A<d.inHeight;++A)for(let G=0;G<d.inWidth;++G){const X=A-C,tt=G-$;let Q=0;for(let U=0;U<S;U+=v){const et=(X+U)/p;if(!(et<0||et>=d.outHeight||Math.floor(et)!==et))for(let Y=0;Y<T;Y+=w){const rt=(tt+Y)/m;if(rt<0||rt>=d.outWidth||Math.floor(rt)!==rt)continue;const B=M.get(O,et,rt,_);Q+=B}}I.set(Q*R,O,A,G,_)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const crt={kernelName:rg,backendName:"cpu",kernelFunc:urt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hrt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,scale:r,offset:i,mean:l,variance:u}=t;D(l.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(i==null||l.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(r==null||l.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Rt([a,l,u,r,i],"batchNorm");let{varianceEpsilon:h}=s;h==null&&(h=.001);const d=e.data.get(a.dataId).values,p=e.data.get(l.dataId).values,m=e.data.get(u.dataId).values,y=r?e.data.get(r.dataId).values:new Float32Array([1]),b=i?e.data.get(i.dataId).values:new Float32Array([0]),v=new Float32Array(d.length),w=b.length,S=y.length,T=m.length,$=p.length;let C=0,I=0,R=0,L=0;for(let M=0;M<d.length;++M)v[M]=b[C++]+(d[M]-p[I++])*y[R++]/Math.sqrt(m[L++]+h),C>=w&&(C=0),I>=$&&(I=0),R>=S&&(R=0),L>=T&&(L=0);return e.makeTensorInfo(a.shape,a.dtype,v)}const drt={kernelName:gd,backendName:"cpu",kernelFunc:hrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function frt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,crops:i}=s;Rt([a],"batchToSpaceND");const l=r.reduce((S,T)=>S*T),u=wf(a.shape,r,l),h=Sf(u.length,r.length),d=Nf(a.shape,r,l),p=Lw(i,r.length),m=zw(d,i,r.length),y=Ie({inputs:{x:a},backend:e,attrs:{shape:u}}),b=cs({inputs:{x:y},backend:e,attrs:{perm:h}}),v=Ie({inputs:{x:b},backend:e,attrs:{shape:d}}),w=Go({inputs:{x:v},backend:e,attrs:{begin:p,size:m}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),w}const prt={kernelName:ad,backendName:"cpu",kernelFunc:frt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mrt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i}=s,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,h=aS(l,u,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,h)}const grt={kernelName:og,backendName:"cpu",kernelFunc:mrt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yrt(n){const{inputs:t,backend:e}=n,{s0:s,s1:a}=t,r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,l=Pt(Array.from(r),Array.from(i));return e.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const brt={kernelName:lg,backendName:"cpu",kernelFunc:yrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xrt=ye(vu,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),vrt={kernelName:vu,backendName:"cpu",kernelFunc:xrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wrt=n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(ht(t.shape)),a=e.data.get(t.dataId),r=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,l=e.data.get(r.dataId).values,u=e.data.get(i.dataId).values;for(let h=0;h<l.length;h++){const d=l[h],p=u[h];s[h]=Math.hypot(d,p)}return e.makeOutput(s,t.shape,"float32")},Srt={kernelName:id,backendName:"cpu",kernelFunc:wrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uu(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.data.get(s.dataId).complexTensorInfos.imag,r=e.data.get(a.dataId).values;return e.makeTensorInfo(a.shape,a.dtype,r)}const Nrt={kernelName:Ig,backendName:"cpu",kernelFunc:uu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cu(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s,r=Kt(a,t[0].shape)[0],i=t.map(v=>v.shape);Ow(i,r);let l=Ka(t.map(v=>v.shape),r);if(ht(l)===0)return e.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter(v=>ht(v.shape)>0);if(u.length===1)return er({inputs:{x:u[0]},backend:e});if(u[0].dtype==="complex64"){const v=u.map(C=>Wo({inputs:{input:C},backend:e})),w=u.map(C=>uu({inputs:{input:C},backend:e})),S=cu({inputs:v,backend:e,attrs:{axis:r}}),T=cu({inputs:w,backend:e,attrs:{axis:r}}),$=bs({inputs:{real:S,imag:T},backend:e});return v.forEach(C=>e.disposeIntermediateTensorInfo(C)),w.forEach(C=>e.disposeIntermediateTensorInfo(C)),e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(T),$}const h=u.map(v=>{const S=[-1,ht(v.shape.slice(r))];return Ie({inputs:{x:v},backend:e,attrs:{shape:S}})}),d=h.map(v=>({vals:e.data.get(v.dataId).values,shape:v.shape}));l=Ka(h.map(v=>v.shape),1);const p=h[0].shape[0]===1,m=KA(d,l,t[0].dtype,p),y=Ka(u.map(v=>v.shape),r),b=e.makeTensorInfo(y,t[0].dtype,m);return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),b}const Trt={kernelName:od,backendName:"cpu",kernelFunc:cu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}=s;Rt([a,r],"conv2d");const p=zr(u),m=vn(a.shape,r.shape,i,h,l,d,!1,p),y=m.filterHeight,b=m.filterWidth,v=m.dilationHeight,w=m.dilationWidth,S=m.padInfo.left,T=m.padInfo.top,$=m.dataFormat==="channelsLast",C=new tn(m.outShape,a.dtype),I=Lt(a.shape),R=Lt(r.shape),L=I[0],M=$?I[1]:I[2],O=$?I[2]:1,_=$?1:I[1],A=C.strides[0],G=$?C.strides[1]:C.strides[2],X=$?C.strides[2]:1,tt=$?1:C.strides[1],Q=e.data.get(a.dataId).values,U=e.data.get(r.dataId).values,et=C.values;for(let Y=0;Y<m.batchSize;++Y){const rt=Y*L,B=Y*A;for(let q=0;q<m.outHeight;++q){const lt=B+q*G,ot=q*m.strideHeight-T;for(let ut=0;ut<y;++ut){const mt=ot+ut*v;if(mt<0||mt>=m.inHeight)continue;const bt=ut*R[0],Tt=rt+mt*M;for(let St=0;St<m.outWidth;++St){const Ct=lt+St*X,It=St*m.strideWidth-S;for(let Mt=0;Mt<b;++Mt){const se=It+Mt*w;if(se<0||se>=m.inWidth)continue;const ae=bt+Mt*R[1],ve=Tt+se*O;let de=ae;for(let re=0;re<m.inChannels;++re){const we=Q[ve+re*_];for(let me=0;me<m.outChannels;++me)et[Ct+me*tt]+=we*U[de+me];de+=m.outChannels}}}}}}return e.makeTensorInfo(C.shape,C.dtype,et)}const Crt={kernelName:ld,backendName:"cpu",kernelFunc:P_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $rt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,dataFormat:u,dimRoundingMode:h,filterShape:d}=s;Rt([a,r],"conv2dBackpropFilter");const p=zr(u),m=vn(a.shape,d,i,1,l,h,!1,p),{strideHeight:y,strideWidth:b,filterHeight:v,filterWidth:w}=m,S=m.dataFormat==="channelsLast",T=new tn(m.filterShape,"float32"),$=m.padInfo.left,C=m.padInfo.top,I=e.data.get(a.dataId).values,R=e.data.get(r.dataId).values,L=new tn(a.shape,a.dtype,I),M=new tn(r.shape,r.dtype,R);for(let O=0;O<v;++O){const _=Math.max(0,Math.ceil((C-O)/y)),A=Math.min(m.outHeight,(m.inHeight+C-O)/y);for(let G=0;G<w;++G){const X=Math.max(0,Math.ceil(($-G)/b)),tt=Math.min(m.outWidth,(m.inWidth+$-G)/b);for(let Q=0;Q<m.inChannels;++Q)for(let U=0;U<m.outChannels;++U){let et=0;for(let Y=0;Y<m.batchSize;++Y)for(let rt=_;rt<A;++rt){const B=O+rt*y-C;for(let q=X;q<tt;++q){const lt=G+q*b-$;S?et+=L.get(Y,B,lt,Q)*M.get(Y,rt,q,U):et+=L.get(Y,Q,B,lt)*M.get(Y,U,rt,q)}}T.set(et,O,G,Q,U)}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const krt={kernelName:cg,backendName:"cpu",kernelFunc:$rt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Irt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{inputShape:i,strides:l,pad:u,dataFormat:h,dimRoundingMode:d}=s;Rt([a,r],"conv2dBackpropInput");const p=Lt(r.shape),m=Lt(a.shape);let y=zr(h);const b=vn(i,r.shape,l,1,u,d,!1,y),v=new tn(b.inShape,"float32"),w=v.values,S=e.data.get(a.dataId).values,T=e.data.get(r.dataId).values,[$,C,I]=p,{batchSize:R,filterHeight:L,filterWidth:M,inChannels:O,inHeight:_,inWidth:A,outChannels:G,outHeight:X,outWidth:tt,strideHeight:Q,strideWidth:U}=b;y=b.dataFormat;const et=L-1-b.padInfo.top,Y=M-1-b.padInfo.left,rt=y==="channelsLast",B=v.strides[0],q=rt?v.strides[1]:v.strides[2],lt=rt?v.strides[2]:1,ot=rt?1:v.strides[1],ut=m[0],mt=rt?m[1]:m[2],bt=rt?m[2]:1,Tt=rt?1:m[1];for(let St=0;St<R;++St)for(let Ct=0;Ct<O;++Ct)for(let It=0;It<_;++It){const Mt=It-et,se=Math.max(0,Math.ceil(Mt/Q)),ae=Math.min(X,(L+Mt)/Q);for(let ve=0;ve<A;++ve){const de=ve-Y,re=Math.max(0,Math.ceil(de/U)),we=Math.min(tt,(M+de)/U);let me=0;for(let Ue=se;Ue<ae;++Ue){const Ps=Ue*Q-Mt;for(let Qn=re;Qn<we;++Qn){const rr=Qn*U-de,We=ut*St+mt*Ue+bt*Qn,pa=$*(L-1-Ps)+C*(M-1-rr)+I*Ct;for(let ma=0;ma<G;++ma){const ga=S[We+Tt*ma],Cs=T[pa+ma];me+=ga*Cs}}}const Ts=B*St+q*It+lt*ve+ot*Ct;w[Ts]=me}}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const Ert={kernelName:ud,backendName:"cpu",kernelFunc:Irt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Art(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s;Rt([a,r],"conv3d");const h=zi(a.shape,r.shape,i,u,l),{filterDepth:d,filterHeight:p,filterWidth:m,dilationDepth:y,dilationHeight:b,dilationWidth:v,padInfo:w}=h,S=w.front,T=w.left,$=w.top,C=new tn(h.outShape,a.dtype),I=e.data.get(a.dataId).values,R=e.data.get(r.dataId).values,L=C.values,M=Lt(a.shape),O=Lt(r.shape);for(let _=0;_<h.batchSize;++_){const A=_*M[0],G=_*C.strides[0];for(let X=0;X<h.outDepth;++X){const tt=G+X*C.strides[1],Q=X*h.strideDepth-S;for(let U=0;U<d;++U){const et=Q+U*y;if(et<0||et>=h.inDepth)continue;const Y=U*O[0],rt=A+et*M[1];for(let B=0;B<h.outHeight;++B){const q=tt+B*C.strides[2],lt=B*h.strideHeight-$;for(let ot=0;ot<p;++ot){const ut=lt+ot*b;if(ut<0||ut>=h.inHeight)continue;const mt=Y+ot*O[1],bt=rt+ut*M[2];for(let Tt=0;Tt<h.outWidth;++Tt){const St=q+Tt*h.outChannels,Ct=Tt*h.strideWidth-T;for(let It=0;It<m;++It){const Mt=Ct+It*v;if(Mt<0||Mt>=h.inWidth)continue;const se=mt+It*O[2],ae=bt+Mt*h.inChannels;let ve=se;for(let de=0;de<h.inChannels;++de){const re=I[ae+de];for(let we=0;we<h.outChannels;++we)L[St+we]+=re*R[ve+we];ve+=h.outChannels}}}}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const Rrt={kernelName:cd,backendName:"cpu",kernelFunc:Art};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Drt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,filterShape:u}=s;Rt([a,r],"conv3dBackpropFilterV2");const h=Lt(a.shape),d=Lt(r.shape),p=zi(a.shape,u,i,1,l),m=p.strideDepth,y=p.strideHeight,b=p.strideWidth,v=p.filterDepth,w=p.filterHeight,S=p.filterWidth,T=new tn(p.filterShape,"float32"),$=T.values,[C,I,R,L]=T.strides,M=e.data.get(r.dataId).values,[O,_,A,G]=d,X=e.data.get(a.dataId).values,[tt,Q,U,et]=h,Y=p.padInfo.front,rt=p.padInfo.left,B=p.padInfo.top;for(let q=0;q<v;++q){const lt=Math.max(0,Math.ceil((Y-q)/m)),ot=Math.min(p.outDepth,(p.inDepth+Y-q)/m),ut=q*C;for(let mt=0;mt<w;++mt){const bt=Math.max(0,Math.ceil((B-mt)/y)),Tt=Math.min(p.outHeight,(p.inHeight+B-mt)/y),St=mt*I+ut;for(let Ct=0;Ct<S;++Ct){const It=Math.max(0,Math.ceil((rt-Ct)/b)),Mt=Math.min(p.outWidth,(p.inWidth+rt-Ct)/b),se=Ct*R+St;for(let ae=0;ae<p.inChannels;++ae){const ve=ae*L+se;for(let de=0;de<p.outChannels;++de){let re=0;for(let we=0;we<p.batchSize;++we){const me=we*tt,Ts=we*O;for(let Ue=lt;Ue<ot;++Ue){const Qn=(q+Ue*m-Y)*Q+me,rr=Ue*_+Ts;for(let We=bt;We<Tt;++We){const ma=(mt+We*y-B)*U+Qn,ga=We*A+rr;for(let Cs=It;Cs<Mt;++Cs){const ol=(Ct+Cs*b-rt)*et+ma,Sc=Cs*G+ga;re+=X[ol+ae]*M[Sc+de]}}}}$[ve+de]=re}}}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const Ort={kernelName:hg,backendName:"cpu",kernelFunc:Drt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _rt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{pad:i,strides:l,inputShape:u}=s;Rt([a],"conv3dBackpropInputV2");const h=Lt(a.shape),d=Lt(r.shape),p=zi(u,r.shape,l,1,i),m=new tn(p.inShape,"float32"),y=m.values,[b,v,w,S]=m.strides,T=e.data.get(a.dataId).values,[$,C,I,R]=h,L=e.data.get(r.dataId).values,[M,O,_,A]=d,{batchSize:G,filterDepth:X,filterHeight:tt,filterWidth:Q,inChannels:U,inDepth:et,inHeight:Y,inWidth:rt,outChannels:B,outDepth:q,outHeight:lt,outWidth:ot,strideDepth:ut,strideHeight:mt,strideWidth:bt}=p,Tt=X-1-p.padInfo.front,St=tt-1-p.padInfo.top,Ct=Q-1-p.padInfo.left;for(let It=0;It<G;++It)for(let Mt=0;Mt<U;++Mt)for(let se=0;se<et;++se){const ae=se-Tt,ve=Math.max(0,Math.ceil(ae/ut)),de=Math.min(q,(X+ae)/ut);for(let re=0;re<Y;++re){const we=re-St,me=Math.max(0,Math.ceil(we/mt)),Ts=Math.min(lt,(tt+we)/mt);for(let Ue=0;Ue<rt;++Ue){const Ps=Ue-Ct,Qn=Math.max(0,Math.ceil(Ps/bt)),rr=Math.min(ot,(Q+Ps)/bt);let We=0;for(let pa=ve;pa<de;++pa){const ma=pa*ut-ae;for(let ga=me;ga<Ts;++ga){const Cs=ga*mt-we;for(let Hi=Qn;Hi<rr;++Hi){const ol=Hi*bt-Ps,Sc=$*It+C*pa+I*ga+R*Hi,mb=M*(X-1-ma)+O*(tt-1-Cs)+_*(Q-1-ol)+A*Mt;for(let Fa=0;Fa<B;++Fa){const Jn=T[Sc+Fa],gb=L[mb+Fa];We+=Jn*gb}}}}y[b*It+v*se+w*re+S*Ue+Mt]=We}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const Frt={kernelName:dg,backendName:"cpu",kernelFunc:_rt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lrt=ye(wu,n=>Math.cos(n)),zrt={kernelName:wu,backendName:"cpu",kernelFunc:Lrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mrt=ye(Su,n=>Math.cosh(n)),Brt={kernelName:Su,backendName:"cpu",kernelFunc:Mrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vrt(n){const{inputs:t,backend:e,attrs:s}=n,{image:a,boxes:r,boxInd:i}=t,{cropSize:l,method:u,extrapolationValue:h}=s,[d,p,m,y]=a.shape,b=r.shape[0],[v,w]=l,S=Wt([b,v,w,y],"float32"),T=e.data.get(r.dataId).values,$=e.data.get(i.dataId).values,C=e.data.get(a.dataId).values,I=Lt(a.shape),R=Lt(S.shape);for(let L=0;L<b;L++){const M=L*4,O=T[M],_=T[M+1],A=T[M+2],G=T[M+3],X=$[L];if(X>=d)continue;const tt=v>1?(A-O)*(p-1)/(v-1):0,Q=w>1?(G-_)*(m-1)/(w-1):0;for(let U=0;U<v;U++){const et=v>1?O*(p-1)+U*tt:.5*(O+A)*(p-1);if(et<0||et>p-1){for(let Y=0;Y<w;Y++)for(let rt=0;rt<y;rt++){const B=rt+Y*R[2]+U*R[1]+L*R[0];S.values[B]=h}continue}if(u==="bilinear"){const Y=Math.floor(et),rt=Math.ceil(et),B=et-Y;for(let q=0;q<w;q++){const lt=w>1?_*(m-1)+q*Q:.5*(_+G)*(m-1);if(lt<0||lt>m-1){for(let bt=0;bt<y;bt++){const Tt=bt+q*R[2]+U*R[1]+L*R[0];S.values[Tt]=h}continue}const ot=Math.floor(lt),ut=Math.ceil(lt),mt=lt-ot;for(let bt=0;bt<y;bt++){let Tt=bt+ot*I[2]+Y*I[1]+X*I[0];const St=C[Tt];Tt=bt+ut*I[2]+Y*I[1]+X*I[0];const Ct=C[Tt];Tt=bt+ot*I[2]+rt*I[1]+X*I[0];const It=C[Tt];Tt=bt+ut*I[2]+rt*I[1]+X*I[0];const Mt=C[Tt],se=St+(Ct-St)*mt,ae=It+(Mt-It)*mt;Tt=bt+q*R[2]+U*R[1]+L*R[0],S.values[Tt]=se+(ae-se)*B}}}else for(let Y=0;Y<w;++Y){const rt=w>1?_*(m-1)+Y*Q:.5*(_+G)*(m-1);if(rt<0||rt>m-1){for(let lt=0;lt<y;lt++){const ot=lt+Y*R[2]+U*R[1]+L*R[0];S.values[ot]=h}continue}const B=Math.round(rt),q=Math.round(et);for(let lt=0;lt<y;lt++){const ot=lt+B*I[2]+q*I[1]+X*I[0],ut=lt+Y*R[2]+U*R[1]+L*R[0];S.values[ut]=C[ot]}}}}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const Prt={kernelName:pg,backendName:"cpu",kernelFunc:Vrt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Urt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;Rt(a,"cumprod");const u=ze([r],a.shape.length);let h=a;u!=null&&(h=cs({inputs:{x:a},backend:e,attrs:{perm:u}}));const d=Ke(1,a.shape.length)[0];if(d!==h.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${h.shape.length-1} but got axis=${d}`);const p=rs(h.dtype,"int32"),m=ng(ht(h.shape),p),y=e.data.get(h.dataId).values,b=h.shape[h.shape.length-1],v=l?(S,T)=>S+b-T-1:(S,T)=>S+T;for(let S=0;S<y.length;S+=b)for(let T=0;T<b;T++){const $=v(S,T);if(T===0)m[$]=i?1:y[$];else{const C=v(S,T-1);m[$]=i?y[C]*m[C]:y[$]*m[C]}}const w=e.makeTensorInfo(h.shape,p,m);if(u!=null){const S=Mi(u),T=cs({inputs:{x:w},backend:e,attrs:{perm:S}});return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(h),T}return w}const Wrt={kernelName:fg,backendName:"cpu",kernelFunc:Urt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Grt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;Rt(a,"cumsum");const u=ze([r],a.shape.length);let h=a;u!=null&&(h=cs({inputs:{x:a},backend:e,attrs:{perm:u}}));const d=Ke(1,a.shape.length)[0];if(d!==h.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${h.shape.length-1} but got axis=${d}`);const p=rs(h.dtype,"int32"),m=En(ht(h.shape),p),y=e.data.get(h.dataId).values,b=h.shape[h.shape.length-1],v=l?(S,T)=>S+b-T-1:(S,T)=>S+T;for(let S=0;S<y.length;S+=b)for(let T=0;T<b;T++){const $=v(S,T);if(T===0)m[$]=i?0:y[$];else{const C=v(S,T-1);m[$]=i?y[C]+m[C]:y[$]+m[C]}}const w=e.makeTensorInfo(h.shape,p,m);if(u!=null){const S=Mi(u),T=cs({inputs:{x:w},backend:e,attrs:{perm:S}});return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(h),T}return w}const Hrt={kernelName:hd,backendName:"cpu",kernelFunc:Grt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jrt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i,binaryOutput:l}=s;if(a.shape.length===1){const u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,d=aS(u,h,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,d)}else if(a.shape.length===2){const u=e.bufferSync(a),h=e.bufferSync(r),d=HA(u,h,i,l);return e.makeTensorInfo(d.shape,r.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const qrt={kernelName:mg,backendName:"cpu",kernelFunc:jrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Krt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockSize:r,dataFormat:i}=s;D(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const l=a.shape[0],u=a.shape[1],h=a.shape[2],d=a.shape[3],p=u*r,m=h*r,y=d/(r*r),b=e.data.get(a.dataId).values,v=new Float32Array(l*p*m*y);let w=0;for(let S=0;S<l;++S)for(let T=0;T<p;++T){const $=Math.floor(T/r),C=T%r;for(let I=0;I<m;++I){const R=Math.floor(I/r),L=I%r,M=(C*r+L)*y;for(let O=0;O<y;++O){const A=O+M+d*(R+h*($+u*S));v[w++]=b[A]}}}return e.makeTensorInfo([l,p,m,y],a.dtype,v)}const Xrt={kernelName:gg,backendName:"cpu",kernelFunc:Krt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u,dimRoundingMode:h}=s;Rt([a,r],"depthwiseConv2DNative");const d=Lt(a.shape),p=Lt(r.shape);let m=u;m==null&&(m=[1,1]),D(Rn(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);const y=vn(a.shape,r.shape,i,m,l,h,!0),{filterHeight:b,filterWidth:v,dilationHeight:w,dilationWidth:S,padInfo:T}=y,$=T.left,C=T.top,I=y.outChannels/y.inChannels,R=new tn(y.outShape,a.dtype),L=e.data.get(a.dataId).values,M=e.data.get(r.dataId).values,O=R.values;for(let _=0;_<y.batchSize;++_){const A=_*d[0],G=_*R.strides[0];for(let X=0;X<y.outHeight;++X){const tt=G+X*R.strides[1],Q=X*y.strideHeight-C;for(let U=0;U<b;++U){const et=Q+U*w;if(et<0||et>=y.inHeight)continue;const Y=U*p[0],rt=A+et*d[1];for(let B=0;B<y.outWidth;++B){const q=tt+B*R.strides[2],lt=B*y.strideWidth-$;for(let ot=0;ot<v;++ot){const ut=lt+ot*S;if(ut<0||ut>=y.inWidth)continue;const mt=Y+ot*p[1],bt=rt+ut*y.inChannels;let Tt=q,St=mt;for(let Ct=0;Ct<y.inChannels;++Ct){const It=L[bt+Ct];for(let Mt=0;Mt<I;++Mt)O[Tt+Mt]+=It*M[St+Mt];Tt+=I,St+=I}}}}}}return e.makeTensorInfo(R.shape,R.dtype,R.values)}const Yrt={kernelName:dd,backendName:"cpu",kernelFunc:U_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zrt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,filterShape:d}=s;Rt([a,r],"depthwiseConv2dNativeBackpropFilter");const p=vn(a.shape,d,i,l,u,h,!0),{strideHeight:m,strideWidth:y,filterHeight:b,filterWidth:v}=p,w=new tn(p.filterShape,"float32"),S=p.padInfo.left,T=p.padInfo.top,$=p.outChannels/p.inChannels,C=e.data.get(a.dataId).values,I=new tn(a.shape,a.dtype,C),R=e.data.get(r.dataId).values,L=new tn(r.shape,r.dtype,R);for(let M=0;M<b;++M){const O=Math.max(0,Math.ceil((T-M)/m)),_=Math.min(p.outHeight,(p.inHeight+T-M)/m);for(let A=0;A<v;++A){const G=Math.max(0,Math.ceil((S-A)/y)),X=Math.min(p.outWidth,(p.inWidth+S-A)/y);for(let tt=0;tt<p.outChannels;++tt){const Q=Math.trunc(tt/$),U=tt%$;let et=0;for(let Y=0;Y<p.batchSize;++Y)for(let rt=O;rt<_;++rt){const B=M+rt*m-T;for(let q=G;q<X;++q){const lt=A+q*y-S;et+=I.get(Y,B,lt,Q)*L.get(Y,rt,q,tt)}}w.set(et,M,A,Q,U)}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const Qrt={kernelName:yg,backendName:"cpu",kernelFunc:Zrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jrt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,inputShape:d}=s;Rt([a,r],"depthwiseConv2DNativeBackpropInput");const p=Lt(a.shape),m=Lt(r.shape),y=vn(d,r.shape,i,l,u,h,!0),b=new tn(y.inShape,"float32"),v=b.values,[w,S,T]=b.strides,$=e.data.get(a.dataId).values,[C,I,R]=p,L=e.data.get(r.dataId).values,[M,O,_]=m,{batchSize:A,filterHeight:G,filterWidth:X,inChannels:tt,inHeight:Q,inWidth:U,outChannels:et,outHeight:Y,outWidth:rt,strideHeight:B,strideWidth:q}=y,lt=G-1-y.padInfo.top,ot=X-1-y.padInfo.left,ut=et/tt;for(let mt=0;mt<A;++mt)for(let bt=0;bt<tt;++bt)for(let Tt=0;Tt<Q;++Tt){const St=Tt-lt,Ct=Math.max(0,Math.ceil(St/B)),It=Math.min(Y,(G+St)/B);for(let Mt=0;Mt<U;++Mt){const se=Mt-ot,ae=Math.max(0,Math.ceil(se/q)),ve=Math.min(rt,(X+se)/q);let de=0;for(let re=Ct;re<It;++re){const we=re*B-St;for(let me=ae;me<ve;++me){const Ts=me*q-se,Ue=C*mt+I*re+R*me,Ps=M*(G-1-we)+O*(X-1-Ts)+_*bt;for(let Qn=0;Qn<ut;++Qn){const rr=bt*ut+Qn,We=$[Ue+rr],pa=L[Ps+Qn];de+=We*pa}}}v[w*mt+S*Tt+T*Mt+bt]=de}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const tit={kernelName:bg,backendName:"cpu",kernelFunc:Jrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eit(n){const{inputs:t,backend:e}=n,{x:s}=t,a=ht(s.shape),r=e.data.get(s.dataId).values,i=Wt([a,a],s.dtype),l=i.values;for(let h=0;h<r.length;h++)l[h*a+h]=r[h];const u=[...s.shape,...s.shape];return e.makeTensorInfo(u,i.dtype,i.values)}const nit={kernelName:xg,backendName:"cpu",kernelFunc:eit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sit={kernelName:fd,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a}=n,{strides:r,pad:i,dilations:l}=e,u=t,h=u.data.get(s.dataId).values,d=s.shape.length,p=u.data.get(a.dataId).values,m=a.shape.length,{batchSize:y,inHeight:b,inWidth:v,inChannels:w,outHeight:S,outWidth:T,padInfo:$,strideHeight:C,strideWidth:I,filterHeight:R,filterWidth:L,dilationHeight:M,dilationWidth:O,outShape:_}=nf(s.shape,a.shape,r,i,"NHWC",l),A=ht(_),G=_.length,X=Ve(s.dtype,A);for(let Q=0;Q<y;++Q)for(let U=0;U<S;++U){const et=U*C-$.top;for(let Y=0;Y<T;++Y){const rt=Y*I-$.left;for(let B=0;B<w;++B){let q=Number.MIN_SAFE_INTEGER;for(let ot=0;ot<R;++ot){const ut=et+ot*M;if(ut>=0&&ut<b)for(let mt=0;mt<L;++mt){const bt=rt+mt*O;if(bt>=0&&bt<v){const Tt=$a([Q,ut,bt,B],d,Lt(s.shape)),St=$a([ot,mt,B],m,Lt(a.shape)),Ct=h[Tt]+p[St];Ct>q&&(q=Ct)}}}const lt=$a([Q,U,Y,B],G,Lt(_));X[lt]=q}}}return{dataId:u.write(Fi(X,s.dtype),_,s.dtype),shape:_,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ait={kernelName:km,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a,dy:r}=n,{strides:i,pad:l,dilations:u}=e,h=t,d=Ls(s.shape,h.data.get(s.dataId).values),p=Ls(a.shape,h.data.get(a.dataId).values),{batchSize:m,inHeight:y,inWidth:b,inChannels:v,outHeight:w,outWidth:S,padInfo:T,strideHeight:$,strideWidth:C,filterHeight:I,filterWidth:R,dilationHeight:L,dilationWidth:M,outShape:O}=nf(s.shape,a.shape,i,l,"NHWC",u);D(r.rank===O.length,()=>`Error in ${km}, dy must have the same rank as output ${O.length}, but got ${r.rank}`);const _=Ls(O,h.data.get(r.dataId).values),A=tv(a.shape,a.dtype);for(let X=0;X<m;++X)for(let tt=0;tt<w;++tt){const Q=tt*$-T.top;for(let U=0;U<S;++U){const et=U*C-T.left;for(let Y=0;Y<v;++Y){let rt=Number.MIN_SAFE_INTEGER,B=0,q=0;for(let lt=0;lt<I;++lt){const ot=Q+lt*L;if(ot>=0&&ot<y)for(let ut=0;ut<R;++ut){const mt=et+ut*M;if(mt>=0&&mt<b){const bt=d[X][ot][mt][Y]+p[lt][ut][Y];bt>rt&&(rt=bt,B=lt,q=ut)}}}A[B][q][Y]+=_[X][tt][U][Y]}}}return{dataId:h.write(Fi(A,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rit={kernelName:$m,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a,dy:r}=n,{strides:i,pad:l,dilations:u}=e,h=t,d=Ls(s.shape,h.data.get(s.dataId).values),p=Ls(a.shape,h.data.get(a.dataId).values),{batchSize:m,inHeight:y,inWidth:b,inChannels:v,outHeight:w,outWidth:S,padInfo:T,strideHeight:$,strideWidth:C,filterHeight:I,filterWidth:R,dilationHeight:L,dilationWidth:M,outShape:O}=nf(s.shape,a.shape,i,l,"NHWC",u);D(r.rank===O.length,()=>`Error in ${$m}, dy must have the same rank as output ${O.length}, but got ${r.rank}`);const _=Ls(O,h.data.get(r.dataId).values),A=tv(s.shape,s.dtype);for(let X=0;X<m;++X)for(let tt=0;tt<w;++tt){const Q=tt*$-T.top;for(let U=0;U<S;++U){const et=U*C-T.left;for(let Y=0;Y<v;++Y){let rt=Number.MIN_SAFE_INTEGER,B=Q<0?0:Q,q=et<0?0:et;for(let lt=0;lt<I;++lt){const ot=Q+lt*L;if(ot>=0&&ot<y)for(let ut=0;ut<R;++ut){const mt=et+ut*M;if(mt>=0&&mt<b){const bt=d[X][ot][mt][Y]+p[lt][ut][Y];bt>rt&&(rt=bt,B=ot,q=mt)}}}A[X][B][q][Y]+=_[X][tt][U][Y]}}}return{dataId:h.write(Fi(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iit(n){const{inputs:t,backend:e,attrs:s}=n,{image:a}=t,{canvas:r,options:i}=s,{contextOptions:l,imageOptions:u}=i||{},h=(u==null?void 0:u.alpha)||1,d=(l==null?void 0:l.contextType)||"2d";if(d!=="2d")throw new Error(`Context type ${l.contextType} is not supported by the CPU backend.`);const p=r.getContext(d,(l==null?void 0:l.contextAttributes)||{});if(p==null)throw new Error(`Could not get the context with ${d} type.`);const[m,y]=a.shape.slice(0,2),b=a.shape.length===2?1:a.shape[2],v=e.data.get(a.dataId).values,w=a.dtype==="float32"?255:1,S=new Uint8ClampedArray(y*m*4);for(let $=0;$<m*y;++$){const C=[0,0,0,255*h];for(let R=0;R<b;R++){const L=v[$*b+R];if(a.dtype==="float32"){if(L<0||L>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${L}.`)}else if(a.dtype==="int32"&&(L<0||L>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${L}.`);b===1?(C[0]=L*w,C[1]=L*w,C[2]=L*w):C[R]=L*w}const I=$*4;S[I+0]=Math.round(C[0]),S[I+1]=Math.round(C[1]),S[I+2]=Math.round(C[2]),S[I+3]=Math.round(C[3])}r.width=y,r.height=m;const T=new ImageData(S,y,m);return p.putImageData(T,0,0),a}const oit={kernelName:vg,backendName:"cpu",kernelFunc:iit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mf(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;Rt(a,"sum");let l;a.dtype==="bool"?l=Ai({inputs:{x:a},backend:e,attrs:{dtype:"int32"}}):l=er({inputs:{x:a},backend:e});const u=l.shape.length,h=Kt(r,l.shape),d=ze(h,u);let p=h,m=l;d!=null&&(m=cs({inputs:{x:l},backend:e,attrs:{perm:d}}),p=Ke(p.length,u)),Dn("sum",p,m.shape.length);const[y,b]=wn(m.shape,p),v=rs(m.dtype,"int32");let w=Lm(e,y,v);const S=ht(b),T=e.data.get(w.dataId).values,$=e.data.get(m.dataId).values;for(let C=0;C<T.length;++C){const I=C*S;let R=0;for(let L=0;L<S;++L)R+=$[I+L];T[C]=R}if(i){const C=qe(w.shape,h),I=w;w=Ie({inputs:{x:w},backend:e,attrs:{shape:C}}),e.disposeIntermediateTensorInfo(I)}return e.disposeIntermediateTensorInfo(l),d!=null&&e.disposeIntermediateTensorInfo(m),w}const lit={kernelName:jd,backendName:"cpu",kernelFunc:Mf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uit(n){const{inputs:t,backend:e,attrs:s}=n,{equation:a}=s,r=t,{allDims:i,summedDims:l,idDims:u}=Hw(a,r.length);qw(i.length,u,r);const{path:h,steps:d}=Kw(l,u),p=d.length;let m=null,y=i.length;const b=[];for(let v=0;v<p;++v){for(const w of d[v]){const{permutationIndices:S,expandDims:T}=jw(y,u[w]);let $;Xw(S)?$=r[w]:($=cs({inputs:{x:r[w]},backend:e,attrs:{perm:S}}),b.push($));const C=$.shape.slice();for(let I=0;I<T.length;++I)C.splice(T[I],0,1);Zt($.shape,C)||($=Ie({inputs:{x:$},backend:e,attrs:{shape:C}}),b.push($)),m===null?m=$:(m=Jy({inputs:{a:$,b:m},backend:e}),b.push(m))}v<p-1&&(h[v]>=0&&(m=Mf({inputs:{x:m},backend:e,attrs:{axis:h[v]-(i.length-y),keepDims:!1}}),b.push(m)),y--)}for(const v of b)v!==m&&e.disposeIntermediateTensorInfo(v);return m}const cit={kernelName:wg,backendName:"cpu",kernelFunc:uit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hit(n){const{inputs:t,backend:e}=n,{dy:s,y:a}=t;Rt([s,a],"eluGrad");const r=new Float32Array(ht(a.shape)),i=e.data.get(a.dataId).values,l=e.data.get(s.dataId).values;for(let u=0;u<i.length;++u){const h=i[u];h>=0?r[u]=l[u]:r[u]=l[u]*(h+1)}return e.makeTensorInfo(a.shape,"float32",r)}const dit={kernelName:Sg,backendName:"cpu",kernelFunc:hit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fit=Mw,pit=Bw,mit=Vw,git=Pw,yit=Uw,bit=Ww,xit=ye(Cu,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+fit*e);return t*(1-((((bit*s+yit)*s+git)*s+mit)*s+pit)*s*Math.exp(-e*e))}),vit={kernelName:Cu,backendName:"cpu",kernelFunc:xit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zm(n){const{inputs:t,backend:e,attrs:s}=n,{input:a}=t,{dim:r}=s,i=a.shape.length,l=a.shape.slice();let u=r;return r<0&&(D(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),l.splice(u,0,1),Ie({inputs:{x:a},backend:e,attrs:{shape:l}})}const wit={kernelName:md,backendName:"cpu",kernelFunc:Zm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sit=Xe((n,t)=>n/t),zS=dn(Nu,Sit),K1={kernelName:Nu,backendName:"cpu",kernelFunc:zS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(n,t,e){const s=n.shape,a=s[0],r=s[1],i=e.data.get(n.dataId),l=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,h=[a,r],d=ht(h),p=bn("float32",d),m=bn("float32",d);for(let w=0;w<a;w++){const S=Go({inputs:{x:l},backend:e,attrs:{begin:[w,0],size:[1,r]}}),T=Go({inputs:{x:u},backend:e,attrs:{begin:[w,0],size:[1,r]}}),$=bs({inputs:{real:S,imag:T},backend:e}),{real:C,imag:I}=Nit($,t,e),R=Dr(C,I);for(let L=0;L<r;L++){const M=Gw(R,L);p[w*r+L]=M.real,m[w*r+L]=M.imag}e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo($)}const y=e.makeTensorInfo(h,"float32",p),b=e.makeTensorInfo(h,"float32",m),v=bs({inputs:{real:y,imag:b},backend:e});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),v}function Nit(n,t,e){const s=ht(n.shape),a=e.data.get(n.dataId),r=e.data.get(a.complexTensorInfos.real.dataId).values,i=e.data.get(a.complexTensorInfos.imag.dataId).values;if(Tit(s)){const l=X1(r,i,s,t,e),u=[n.shape[0],n.shape[1]];if(t){const h=e.makeTensorInfo(u,"float32",l.real),d=e.makeTensorInfo(u,"float32",l.imag),p=e.makeTensorInfo([],"float32",Fr(s,"float32")),m=er({inputs:{x:p},backend:e}),y=K1.kernelFunc({inputs:{a:h,b:p},backend:e}),b=K1.kernelFunc({inputs:{a:d,b:m},backend:e}),v=e.data.get(y.dataId).values,w=e.data.get(b.dataId).values;return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),{real:v,imag:w}}return l}else{const l=Dr(r,i),u=Cit(l,s,t);return qE(u)}}function Tit(n){return(n&n-1)===0}function X1(n,t,e,s,a){if(e===1)return{real:n,imag:t};const r=Dr(n,t),i=e/2,l=KE(r),u=l.real,h=l.imag,d=[u.length],p=a.makeTensorInfo(d,"float32",u),m=a.makeTensorInfo(d,"float32",h),y=bs({inputs:{real:p,imag:m},backend:a}),b=XE(r),v=b.real,w=b.imag,S=[v.length],T=a.makeTensorInfo(S,"float32",v),$=a.makeTensorInfo(S,"float32",w),C=bs({inputs:{real:T,imag:$},backend:a}),I=X1(u,h,i,s,a),R=I.real,L=I.imag,M=[R.length],O=a.makeTensorInfo(M,"float32",R),_=a.makeTensorInfo(M,"float32",L),A=bs({inputs:{real:O,imag:_},backend:a}),G=X1(v,w,i,s,a),X=G.real,tt=G.imag,Q=[X.length],U=a.makeTensorInfo(Q,"float32",X),et=a.makeTensorInfo(Q,"float32",tt),Y=bs({inputs:{real:U,imag:et},backend:a}),rt=ZE(e,s),B=[rt.real.length],q=a.makeTensorInfo(B,"float32",rt.real),lt=a.makeTensorInfo(B,"float32",rt.imag),ot=bs({inputs:{real:q,imag:lt},backend:a}),ut=Jy({inputs:{a:ot,b:Y},backend:a}),mt=ou({inputs:{a:A,b:ut},backend:a}),bt=lS({inputs:{a:A,b:ut},backend:a}),Tt=Wo({inputs:{input:mt},backend:a}),St=Wo({inputs:{input:bt},backend:a}),Ct=uu({inputs:{input:mt},backend:a}),It=uu({inputs:{input:bt},backend:a}),Mt=cu({inputs:[Tt,St],backend:a,attrs:{axis:0}}),se=cu({inputs:[Ct,It],backend:a,attrs:{axis:0}}),ae=a.data.get(Mt.dataId).values,ve=a.data.get(se.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(et),a.disposeIntermediateTensorInfo(Y),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(lt),a.disposeIntermediateTensorInfo(ot),a.disposeIntermediateTensorInfo(ut),a.disposeIntermediateTensorInfo(mt),a.disposeIntermediateTensorInfo(bt),a.disposeIntermediateTensorInfo(Tt),a.disposeIntermediateTensorInfo(Ct),a.disposeIntermediateTensorInfo(St),a.disposeIntermediateTensorInfo(It),a.disposeIntermediateTensorInfo(Mt),a.disposeIntermediateTensorInfo(se),{real:ae,imag:ve}}function Cit(n,t,e){const s=new Float32Array(t*2);for(let a=0;a<t;a++){let r=0,i=0;for(let l=0;l<t;l++){const u=QE(a*l,t,e),h=Gw(n,l);r+=h.real*u.real-h.imag*u.imag,i+=h.real*u.imag+h.imag*u.real}e&&(r/=t,i/=t),YE(s,r,i,a)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $it(n){const{inputs:t,backend:e}=n,{input:s}=t,a=ht(s.shape),r=s.shape[s.shape.length-1],i=a/r,l=Ie({inputs:{x:s},backend:e,attrs:{shape:[i,r]}}),u=W_(l,!1,e),h=Ie({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(u),h}const kit={kernelName:Ng,backendName:"cpu",kernelFunc:$it};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MS(n){const{backend:t,attrs:e}=n,{shape:s,value:a,dtype:r}=e,i=r||Ko(a),l=Ve(i,ht(s));return Eit(l,a,i),t.makeTensorInfo(s,i,l)}const Iit={kernelName:Tg,backendName:"cpu",kernelFunc:MS};function Eit(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ait={kernelName:Cg,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,a=e,r=bn(s.dtype,ht(s.shape)),[i,l,u,h]=s.shape,d=a.data.get(s.dataId).values;for(let m=0;m<i;m++){const y=m*u*l*h;for(let b=0;b<l;b++){const v=b*(u*h);for(let w=0;w<u;w++){const S=w*h;for(let T=0;T<h;T++){const $=Math.round(u-w-1),C=y+v+S+T;let I=d[C];if($>=0&&$<u){const R=$*h,L=y+v+R+T;I=d[L]}r[C]=I}}}}return{dataId:a.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:d,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s;let v=P_({inputs:{x:a,filter:r},backend:e,attrs:{strides:u,pad:h,dataFormat:d,dilations:p,dimRoundingMode:m}});if(i){const w=v;if(d==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const S=Ie({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});v=ou({inputs:{a:v,b:S},backend:e}),e.disposeIntermediateTensorInfo(S)}else v=ou({inputs:{a:v,b:i},backend:e});e.disposeIntermediateTensorInfo(w)}if(y){const w=v;if(d==="NCHW"&&y==="prelu"&&l.shape.length===1&&l.shape[0]!==1){const S=Ie({inputs:{x:l},backend:e,attrs:{shape:[l.shape[0],1,1]}});v=Ym(e,v,y,S,b),e.disposeIntermediateTensorInfo(S)}else v=Ym(e,v,y,l,b);e.disposeIntermediateTensorInfo(w)}return v}const Dit={kernelName:Oh,backendName:"cpu",kernelFunc:Rit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:d,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s;let v=U_({inputs:{x:a,filter:r},backend:e,attrs:{strides:u,pad:h,dataFormat:d,dilations:p,dimRoundingMode:m}});if(i){const w=v;v=ou({inputs:{a:v,b:i},backend:e}),e.disposeIntermediateTensorInfo(w)}if(y){const w=v;v=Ym(e,v,y,l,b),e.disposeIntermediateTensorInfo(w)}return v}const _it={kernelName:_h,backendName:"cpu",kernelFunc:Oit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fit(n){const{inputs:t,backend:e}=n,{params:s,indices:a}=t,r=ht(s.shape),i=a.shape,l=i[i.length-1],[u,h,d,p]=qy(s,a);if(h===0)return e.makeTensorInfo(u,s.dtype,[]);const m=e.data.get(a.dataId).values,y=e.bufferSync(s),b=nR(m,y,s.dtype,h,l,d,p,s.shape,r);return e.makeTensorInfo(u,s.dtype,b.values)}const Lit={kernelName:$g,backendName:"cpu",kernelFunc:Fit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,indices:r}=t,{axis:i,batchDims:l}=s;Rt([a,r],"gatherV2");const u=Kt(i,a.shape)[0],h=e.data.get(r.dataId).values,d=a.shape[u];for(let C=0;C<h.length;++C){const I=h[C];D(I<=d-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${d-1}]`)}let p=l;l==null&&(p=0);const m=ht(r.shape),y=Zw(a,r,u,p),b=Ie({inputs:{x:a},backend:e,attrs:{shape:[y.batchSize,y.outerSize,y.dimSize,y.sliceSize]}}),v=Ie({inputs:{x:r},backend:e,attrs:{shape:[y.batchSize,m/y.batchSize]}}),w=[y.batchSize,y.outerSize,m/y.batchSize,y.sliceSize],S=e.bufferSync(v),T=e.bufferSync(b),$=sR(T,S,w);return e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),e.makeTensorInfo(y.outputShape,$.dtype,$.values)}const Mit={kernelName:yd,backendName:"cpu",kernelFunc:zit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bit(n){const{inputs:t,backend:e}=n,{input:s}=t,a=ht(s.shape),r=s.shape[s.shape.length-1],i=a/r,l=Ie({inputs:{x:s},backend:e,attrs:{shape:[i,r]}}),u=W_(l,!0,e),h=Ie({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(u),h}const Vit={kernelName:kg,backendName:"cpu",kernelFunc:Bit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pit=ye(Du,n=>Number.isFinite(n)?1:0,"bool"),Uit={kernelName:Du,backendName:"cpu",kernelFunc:Pit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wit=ye(Ou,n=>Math.abs(n)===1/0?1:0,"bool"),Git={kernelName:Ou,backendName:"cpu",kernelFunc:Wit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hit=ye(_u,n=>Number.isNaN(n)?1:0,"bool"),jit={kernelName:_u,backendName:"cpu",kernelFunc:Hit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qit(n){const{backend:t,attrs:e}=n,{start:s,stop:a,num:r}=e,i=lR(s,a,r);return t.makeTensorInfo([i.length],"float32",i)}const Kit={kernelName:Eg,backendName:"cpu",kernelFunc:qit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xit=ye(Lu,n=>Math.log1p(n)),Yit={kernelName:Lu,backendName:"cpu",kernelFunc:Xit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zit=Xe((n,t)=>n&&t),Qit=dn(Sd,Zit,null,"bool"),Jit={kernelName:Sd,backendName:"cpu",kernelFunc:Qit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tot=ye(Nd,n=>n?0:1,"bool"),eot={kernelName:Nd,backendName:"cpu",kernelFunc:tot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const not=Xe((n,t)=>n||t),sot=dn(Td,not,null,"bool"),aot={kernelName:Td,backendName:"cpu",kernelFunc:sot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rot(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{depthRadius:r,bias:i,alpha:l,beta:u}=s;Rt(a,"LRN");const h=a.shape[3],d=h-1,p=e.data.get(a.dataId).values,m=ht(a.shape),y=new Float32Array(m);function b(v){const w=v%h;let S=v-w+Math.max(0,w-r);const T=v-w+Math.min(w+r,d);let $=0;for(;S<=T;S++){const C=p[S];$+=C*C}return $}for(let v=0;v<m;v++){const w=b(v),S=p[v]*Math.pow(i+l*w,-u);y[v]=S}return e.makeTensorInfo(a.shape,a.dtype,y)}const iot={kernelName:Cd,backendName:"cpu",kernelFunc:rot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oot(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,y:r,dy:i}=t,{depthRadius:l,bias:u,alpha:h,beta:d}=s;Rt(i,"LRNGrad");const p=ht(i.shape),m=i.shape[3],y=e.data.get(i.dataId).values,b=e.data.get(a.dataId).values,v=e.data.get(r.dataId).values,w=new Float32Array(p),S=p;for(let T=0;T<S;T++){const $=T%m,C=T-$+Math.max(0,$-l),I=T-$+Math.min(m,$+l+1);let R=0;for(let L=C;L<I;L++)R+=Math.pow(b[L],2);R=h*R+u;for(let L=C;L<I;L++){let M=-2*h*d*b[L]*v[T]/R;T===L&&(M+=Math.pow(R,-d)),M*=y[T],w[L]+=M}}return e.makeTensorInfo(i.shape,a.dtype,w)}const lot={kernelName:Ag,backendName:"cpu",kernelFunc:oot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G_(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reductionIndices:r,keepDims:i}=s,l=e;let u=a.shape;const h=u.length,d=Kt(r,u);let p=d;const m=ze(p,h);let y=l.data.get(a.dataId).values;if(m!=null){const C=new Array(h);for(let I=0;I<C.length;I++)C[I]=u[m[I]];y=iS(y,u,a.dtype,m,C),p=Ke(p.length,h),u=C}Rt(a,"max"),Dn("max",p,h);const[b,v]=wn(u,p),w=ht(v),S=cR(y,w,b,a.dtype),T=l.write(S,b,a.dtype);let $=b;return i&&($=qe(b,d)),{dataId:T,shape:$,dtype:a.dtype}}const uot={kernelName:$d,backendName:"cpu",kernelFunc:G_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cot(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;Rt(a,"maxPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;D(Rn(i,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const d=ha(a.shape,r,i,h,l,u);let p;if(d.filterWidth===1&&d.filterHeight===1&&Zt(d.inShape,d.outShape))p=er({inputs:{x:a},backend:e});else{const m=e.data.get(a.dataId).values,y=Lt(a.shape),b=LS(m,a.shape,a.dtype,y,d,"max");p=e.makeTensorInfo(d.outShape,a.dtype,b.values)}return p}const hot={kernelName:kd,backendName:"cpu",kernelFunc:cot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dot(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s;Rt(a,"maxPool3d");const d=Lr(a.shape,r,i,1,l,u,h),p=e.data.get(a.dataId).values,m=V_(p,a.shape,a.dtype,Lt(a.shape),d,"max");return e.makeTensorInfo(m.shape,"float32",m.values)}const fot={kernelName:Id,backendName:"cpu",kernelFunc:dot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pot(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,{filterSize:i,strides:l,pad:u,dimRoundingMode:h}=s;Rt([a,r],"maxPool3DGrad");const d=Lr(r.shape,i,l,1,u,h),p=e.bufferSync(r),m=nrt(p,d),y=d.strideDepth,b=d.strideHeight,v=d.strideWidth,w=d.dilationDepth,S=d.dilationHeight,T=d.dilationWidth,$=d.effectiveFilterDepth,C=d.effectiveFilterHeight,I=d.effectiveFilterWidth,R=$-1-d.padInfo.front,L=I-1-d.padInfo.left,M=C-1-d.padInfo.top,O=Wt(r.shape,"float32"),_=e.bufferSync(a);for(let A=0;A<d.batchSize;++A)for(let G=0;G<d.inChannels;++G)for(let X=0;X<d.inDepth;++X)for(let tt=0;tt<d.inHeight;++tt)for(let Q=0;Q<d.inWidth;++Q){const U=X-R,et=tt-M,Y=Q-L;let rt=0;for(let B=0;B<$;B+=w){const q=(U+B)/y;if(!(q<0||q>=d.outDepth||Math.floor(q)!==q))for(let lt=0;lt<C;lt+=S){const ot=(et+lt)/b;if(!(ot<0||ot>=d.outHeight||Math.floor(ot)!==ot))for(let ut=0;ut<I;ut+=T){const mt=(Y+ut)/v;if(mt<0||mt>=d.outWidth||Math.floor(mt)!==mt)continue;const bt=$*C*I-1-m.get(A,q,ot,mt,G),Tt=B*C*I+lt*I+ut,St=bt===Tt?1:0;if(St===0)continue;const Ct=_.get(A,q,ot,mt,G);rt+=Ct*St}}}O.set(rt,A,X,tt,Q,G)}return e.makeTensorInfo(O.shape,O.dtype,O.values)}const mot={kernelName:Dg,backendName:"cpu",kernelFunc:pot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function got(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r,output:i}=t,l=r;Rt([r,i],"maxPoolGrad");const{filterSize:u,strides:h,pad:d,dimRoundingMode:p}=s,m=ha(l.shape,u,h,1,d,p),y=e.data.get(l.dataId).values,b=Wt(m.outShape,l.dtype,B_(y,l.shape,l.dtype,m).values),v=m.strideHeight,w=m.strideWidth,S=m.dilationHeight,T=m.dilationWidth,$=m.effectiveFilterHeight,C=m.effectiveFilterWidth,I=C-1-m.padInfo.left,R=$-1-m.padInfo.top,L=Wt(l.shape,"float32"),M=e.data.get(a.dataId).values,O=Wt(a.shape,"float32",M);for(let _=0;_<m.batchSize;++_)for(let A=0;A<m.inChannels;++A)for(let G=0;G<m.inHeight;++G)for(let X=0;X<m.inWidth;++X){const tt=G-R,Q=X-I;let U=0;for(let et=0;et<$;et+=S){const Y=(tt+et)/v;if(!(Y<0||Y>=m.outHeight||Math.floor(Y)!==Y))for(let rt=0;rt<C;rt+=T){const B=(Q+rt)/w;if(B<0||B>=m.outWidth||Math.floor(B)!==B)continue;const q=$*C-1-b.get(_,Y,B,A),lt=et*C+rt,ot=q===lt?1:0;if(ot===0)continue;const ut=O.get(_,Y,B,A);U+=ut*ot}}L.set(U,_,G,X,A)}return e.makeTensorInfo(L.shape,L.dtype,L.values)}const yot={kernelName:Rg,backendName:"cpu",kernelFunc:got};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bot(n,t,e,s,a){const r=Lt(t),i=LS(n,t,e,r,a,"max"),l=B_(n,t,e,a,!0,s);return[i.values,l.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xot={kernelName:Og,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:a,strides:r,pad:i,includeBatchInIndex:l}=t,u=e;Rt(s,"MaxPoolWithArgmax");const h=u.data.get(s.dataId).values,d=ha(s.shape,a,r,[1,1],i),[p,m]=bot(h,s.shape,s.dtype,l,d),y=u.write(p,d.outShape,s.dtype),b=u.write(m,d.outShape,s.dtype);return[{dataId:y,shape:d.outShape,dtype:s.dtype},{dataId:b,shape:d.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vot(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=Kt(r,a.shape),h=wn(a.shape,l)[1],d=ht(h),p=[],m=e.makeTensorInfo([],"float32",new Float32Array([d]));p.push(m);const y=Ai({inputs:{x:a},backend:e,attrs:{dtype:"float32"}});p.push(y);const b=zS({inputs:{a:y,b:m},backend:e});p.push(b);const v=Mf({inputs:{x:b},backend:e,attrs:{axis:r,keepDims:i}});return p.forEach(w=>e.disposeIntermediateTensorInfo(w)),v}const wot={kernelName:Ed,backendName:"cpu",kernelFunc:vot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sot(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;Rt(a,"min");const l=Kt(r,a.shape);let u=l;const h=ze(u,a.shape.length);let d=a;h!=null&&(d=cs({inputs:{x:a},backend:e,attrs:{perm:h}}),u=Ke(u.length,a.shape.length)),Dn("min",u,d.shape.length);const[p,m]=wn(d.shape,u),y=ht(m),b=En(ht(p),d.dtype),v=e.data.get(d.dataId).values;for(let S=0;S<b.length;++S){const T=S*y;let $=v[T];for(let C=0;C<y;++C){const I=v[T+C];(Number.isNaN(I)||I<$)&&($=I)}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(d);const w=e.makeTensorInfo(p,d.dtype,b);if(i){const S=qe(p,l),T=Ie({inputs:{x:w},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(w),T}return w}const Not={kernelName:Ad,backendName:"cpu",kernelFunc:Sot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tot(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,mode:i}=s;Rt(a,"mirrorPad");const l=r.map(($,C)=>$[0]+a.shape[C]+$[1]),u=r.map($=>$[0]),h=r.map(($,C)=>$[0]+a.shape[C]),d=i==="reflect"?0:1,p=e.data.get(a.dataId).values,m=a.shape.length,y=Lt(a.shape),b=ht(l),v=l.length,w=Lt(l),S=bn(a.dtype,b);for(let $=0;$<b;$++){let C=Xo($,v,w);for(let R=0;R<v;R++)C[R]<u[R]?C[R]=u[R]*2-C[R]-d:C[R]>=h[R]&&(C[R]=(h[R]-1)*2-C[R]+d);C=C.map((R,L)=>R-u[L]);const I=$a(C,m,y);S[$]=p[I]}return{dataId:e.write(S,l,a.dtype),shape:l,dtype:a.dtype}}const Cot={kernelName:Rd,backendName:"cpu",kernelFunc:Tot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ot=Xe((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),kot=dn(Bu,$ot),Iot={kernelName:Bu,backendName:"cpu",kernelFunc:kot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{dim:r}=s,i=a.shape.length;let l=r;if(l===-1&&(l=i-1),l!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${l}`);const u=Kt([l],a.shape),h=G_({inputs:{x:a},backend:e,attrs:{reductionIndices:u,keepDims:!1}}),d=qe(h.shape,u),p=Ie({inputs:{x:h},backend:e,attrs:{shape:d}}),m=lS({inputs:{a,b:p},backend:e}),y=QA({inputs:{x:m},backend:e}),b=Mf({inputs:{x:y},backend:e,attrs:{axis:u,keepDims:!1}}),v=Ie({inputs:{x:b},backend:e,attrs:{shape:d}}),w=zS({inputs:{a:y,b:v},backend:e});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),w}const Eot={kernelName:Xd,backendName:"cpu",kernelFunc:H_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aot(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{numSamples:r,seed:i,normalized:l}=s;Rt(a,"multinomial");const u=l?a:H_({inputs:{logits:a},backend:e,attrs:{dim:-1}}),h=u.shape[0],d=u.shape[1],p=e.data.get(u.dataId).values,m=[h,r],y=En(ht(m),"int32");for(let b=0;b<h;++b){const v=b*d,w=new Float32Array(d-1);w[0]=p[v];for(let $=1;$<w.length;++$)w[$]=w[$-1]+p[v+$];const S=Sy.alea(i.toString()),T=b*r;for(let $=0;$<r;++$){const C=S();y[T+$]=w.length;for(let I=0;I<w.length;I++)if(C<w[I]){y[T+$]=I;break}}}return l||e.disposeIntermediateTensorInfo(u),e.makeTensorInfo(m,"int32",y)}const Rot={kernelName:_g,backendName:"cpu",kernelFunc:Aot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dot=Wy;function Oot(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=s;Rt(a,"NonMaxSuppression");const h=e.data.get(a.dataId).values,d=e.data.get(r.dataId).values,{selectedIndices:p}=Dot(h,d,i,l,u);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}const _ot={kernelName:Fg,backendName:"cpu",kernelFunc:Oot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fot=Gy;function Lot(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:h}=s;Rt(a,"NonMaxSuppressionPadded");const d=e.data.get(a.dataId).values,p=e.data.get(r.dataId).values,{selectedIndices:m,validOutputs:y}=Fot(d,p,i,l,u,h);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([y]))]}const zot={kernelName:Lg,backendName:"cpu",kernelFunc:Lot};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mot=Hy;function Bot(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:h}=s;Rt(a,"NonMaxSuppressionWithScore");const d=e.data.get(a.dataId).values,p=e.data.get(r.dataId).values,m=i,y=l,b=u,v=h,{selectedIndices:w,selectedScores:S}=Mot(d,p,m,y,b,v);return[e.makeTensorInfo([w.length],"int32",new Int32Array(w)),e.makeTensorInfo([S.length],"float32",new Float32Array(S))]}const Vot={kernelName:zg,backendName:"cpu",kernelFunc:Bot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pot(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a}=t,{dtype:r,depth:i,onValue:l,offValue:u}=s;Rt(a,"oneHot");const h=ht(a.shape),d=new Float32Array(h*i);d.fill(u);const p=e.data.get(a.dataId).values;for(let m=0;m<h;++m)p[m]>=0&&p[m]<i&&(d[m*i+p[m]]=l);return e.makeTensorInfo([...a.shape,i],r,d)}const Uot={kernelName:Fd,backendName:"cpu",kernelFunc:Pot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qm(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const a=Wo({inputs:{input:s},backend:e}),r=Qm({inputs:{x:a},backend:e}),i=uu({inputs:{input:s},backend:e}),l=Qm({inputs:{x:i},backend:e}),u=bs({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return MS({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const Wot={kernelName:Jd,backendName:"cpu",kernelFunc:Qm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const a=Wo({inputs:{input:s},backend:e}),r=j_({inputs:{x:a},backend:e}),i=uu({inputs:{input:s},backend:e}),l=Qm({inputs:{x:i},backend:e}),u=bs({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return MS({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const Got={kernelName:_d,backendName:"cpu",kernelFunc:j_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s;if(t.length===1)return Zm({inputs:{input:t[0]},backend:e,attrs:{dim:a}});const r=t[0].shape,i=t[0].dtype;t.forEach(d=>{An(r,d.shape,"All tensors passed to stack must have matching shapes"),D(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=t.map(d=>{const p=Zm({inputs:{input:d},backend:e,attrs:{dim:a}});return l.push(p),p}),h=cu({inputs:u,backend:e,attrs:{axis:a}});return l.forEach(d=>e.disposeIntermediateTensorInfo(d)),h}const Hot={kernelName:Ld,backendName:"cpu",kernelFunc:q_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jot(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,constantValue:i}=s;Rt(a,"pad");const l=r.map((T,$)=>T[0]+a.shape[$]+T[1]),u=r.map(T=>T[0]),h=e.data.get(a.dataId).values,d=ht(a.shape),p=a.shape.length,m=Lt(a.shape),y=ht(l),b=l.length,v=Lt(l),w=bn(a.dtype,y);i!==0&&w.fill(i);for(let T=0;T<d;T++){const C=Xo(T,p,m).map((R,L)=>R+u[L]),I=$a(C,b,v);w[I]=h[T]}return{dataId:e.write(w,l,a.dtype),shape:l,dtype:a.dtype}}const K_={kernelName:zd,backendName:"cpu",kernelFunc:jot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qot=Xe((n,t)=>Math.pow(n,t)),Kot=dn(Pu,qot),Xot={kernelName:Pu,backendName:"cpu",kernelFunc:Kot};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yot(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=t,{outputRaggedRank:l}=s,u=a.map(S=>e.data.get(S.dataId).values),h=a.map(S=>S.shape),d=e.data.get(r.dataId).values,p=e.data.get(i.dataId).values,[m,y,b]=gR(u,h,d,r.shape,r.dtype,p,i.shape),v=m.map(S=>e.makeTensorInfo([S.length],"int32",S)),w=e.makeTensorInfo(b,r.dtype,y);return v.concat([w])}const Zot={kernelName:Mg,backendName:"cpu",kernelFunc:Yot};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qot(n){const{inputs:t,backend:e}=n,{starts:s,limits:a,deltas:r}=t,i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,d]=yR(i,s.shape,s.dtype,l,a.shape,u,r.shape),p=e.makeTensorInfo([h.length],"int32",h),m=e.makeTensorInfo([d.length],s.dtype,d);return[p,m]}const Jot={kernelName:Bg,backendName:"cpu",kernelFunc:Qot};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tlt(n){const{inputs:t,backend:e,attrs:s}=n,{shape:a,values:r,defaultValue:i,rowPartitionTensors:l}=t,{rowPartitionTypes:u}=s,h=e.data.get(a.dataId).values,d=e.data.get(r.dataId).values,p=e.data.get(i.dataId).values,m=l.map(w=>e.data.get(w.dataId).values),y=l.map(w=>w.shape),[b,v]=bR(h,a.shape,d,r.shape,r.dtype,p,i.shape,m,y,u);return e.makeTensorInfo(b,r.dtype,v)}const elt={kernelName:Vg,backendName:"cpu",kernelFunc:tlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nlt(n){const{backend:t,attrs:e}=n,{start:s,stop:a,dtype:r,step:i}=e,l=xR(s,a,i,r);return t.makeTensorInfo([l.length],r,l)}const slt={kernelName:Pg,backendName:"cpu",kernelFunc:nlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const alt=ye(Uu,n=>1/n),rlt={kernelName:Uu,backendName:"cpu",kernelFunc:alt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ilt(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s;Rt(a,"resizeBilinear");const u=Lt(a.shape),[h,d]=l,[p,m,y,b]=a.shape,v=e.data.get(a.dataId).values,w=new Float32Array(ht([p,h,d,b])),S=[r&&h>1?m-1:m,r&&d>1?y-1:y],T=[r&&h>1?h-1:h,r&&d>1?d-1:d];let $=0;const C=S[0]/T[0],I=S[1]/T[1];for(let R=0;R<p;R++)for(let L=0;L<h;L++){let M;i?M=C*(L+.5)-.5:M=C*L;const O=Math.max(0,Math.floor(M)),_=M-O,A=Math.min(m-1,Math.ceil(M)),G=R*u[0]+O*u[1],X=R*u[0]+A*u[1];for(let tt=0;tt<d;tt++){let Q;i?Q=I*(tt+.5)-.5:Q=I*tt;const U=Math.max(0,Math.floor(Q)),et=Q-U,Y=Math.min(y-1,Math.ceil(Q)),rt=G+U*u[2],B=X+U*u[2],q=G+Y*u[2],lt=X+Y*u[2];for(let ot=0;ot<b;ot++){const ut=v[rt+ot],mt=v[B+ot],bt=v[q+ot],Tt=v[lt+ot],St=ut+(bt-ut)*et,Ct=mt+(Tt-mt)*et,It=St+(Ct-St)*_;w[$++]=It}}}return e.makeTensorInfo([p,h,d,b],"float32",w)}const olt={kernelName:Ud,backendName:"cpu",kernelFunc:ilt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function llt(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s;Rt([r,a],"resizeBilinearGrad");const l=Lt(a.shape),[u,h,d,p]=a.shape,[,m,y]=r.shape,b=new Float32Array(u*h*d*p),v=[i&&m>1?h-1:h,i&&y>1?d-1:d],w=[i&&m>1?m-1:m,i&&y>1?y-1:y],S=v[0]/w[0],T=v[1]/w[1],$=e.data.get(r.dataId).values;let C=0;for(let I=0;I<u;I++){const R=I*l[0];for(let L=0;L<m;L++){const M=L*S,O=Math.floor(M),_=Math.min(Math.ceil(M),h-1),A=R+O*l[1],G=R+_*l[1],X=M-O,tt=1-X;for(let Q=0;Q<y;Q++){const U=Q*T,et=Math.floor(U),Y=Math.min(Math.ceil(U),d-1),rt=U-et,B=1-rt,q=A+et*l[2],lt=A+Y*l[2],ot=G+et*l[2],ut=G+Y*l[2],mt=tt*B,bt=tt*rt,Tt=X*B,St=X*rt;for(let Ct=0;Ct<p;Ct++){const It=$[C++];b[q+Ct]+=It*mt,b[lt+Ct]+=It*bt,b[ot+Ct]+=It*Tt,b[ut+Ct]+=It*St}}}}return e.makeTensorInfo([u,d,h,p],"float32",b)}const ult={kernelName:Gg,backendName:"cpu",kernelFunc:llt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clt(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s;Rt(a,"resizeNearestNeighbor");const u=Lt(a.shape),[h,d]=l,[p,m,y,b]=a.shape,v=e.data.get(a.dataId).values,w=new Float32Array(p*h*d*b),S=[r&&h>1?m-1:m,r&&d>1?y-1:y],T=[r&&h>1?h-1:h,r&&d>1?d-1:d],$=S[0]/T[0],C=S[1]/T[1];let I=0;for(let R=0;R<p;R++){const L=R*u[0];for(let M=0;M<h;M++){const O=i?$*(M+.5):$*M;let _=Math.min(m-1,r?Math.round(O):Math.floor(O));i&&(_=Math.max(0,_));const A=L+_*u[1];for(let G=0;G<d;G++){const X=i?C*(G+.5):C*G;let tt=Math.min(y-1,r?Math.round(X):Math.floor(X));i&&(tt=Math.max(0,tt));const Q=A+tt*u[2];for(let U=0;U<b;U++){const et=v[Q+U];w[I++]=et}}}}return e.makeTensorInfo([p,h,d,b],a.dtype,w)}const hlt={kernelName:Pd,backendName:"cpu",kernelFunc:clt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dlt(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s;Rt([r,a],"resizeNearestNeighborGrad");const l=Lt(a.shape),u=Lt(r.shape),[h,d,p,m]=a.shape,[,y,b]=r.shape,v=new Float32Array(h*d*p*m),w=e.data.get(r.dataId).values,S=[i&&y>1?d-1:d,i&&b>1?p-1:p],T=[i&&y>1?y-1:y,i&&b>1?b-1:b],$=S[0]/T[0],C=S[1]/T[1],I=1/$,R=1/C,L=Math.ceil(I)*2+2,M=Math.ceil(R)*2+2;for(let O=0;O<h;O++){const _=O*l[0];for(let A=0;A<d;A++){const G=_+A*l[1],X=Math.floor(A*I),tt=Math.floor(X-L/2);for(let Q=0;Q<p;Q++){const U=G+Q*l[2],et=Math.floor(Q*R),Y=Math.floor(et-M/2);for(let rt=0;rt<m;rt++){let B=0;for(let q=0;q<L;q++){const lt=q+tt;if(lt<0||lt>=y)continue;const ot=_+lt*u[1],ut=lt*$,mt=Math.min(d-1,i?Math.round(ut):Math.floor(ut));if(A===mt)for(let bt=0;bt<M;bt++){const Tt=bt+Y;if(Tt<0||Tt>=b)continue;const St=ot+Tt*u[2],Ct=Tt*C,It=Math.min(p-1,i?Math.round(Ct):Math.floor(Ct));Q===It&&(B+=w[St+rt])}}v[U+rt]=B}}}}return e.makeTensorInfo(a.shape,a.dtype,v)}const flt={kernelName:Wg,backendName:"cpu",kernelFunc:dlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function plt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dims:r}=s;Rt(a,"reverse");const i=a.shape.length,l=Kt(r,a.shape);if(i===0)return er({inputs:{x:a},backend:e});const u=new tn(a.shape,a.dtype),h=e.bufferSync(a);for(let d=0;d<u.size;d++){const p=u.indexToLoc(d),m=p.slice();l.forEach(y=>m[y]=a.shape[y]-1-m[y]),u.set(h.get(...m),...p)}return e.makeTensorInfo(u.shape,u.dtype,u.values)}const mlt={kernelName:Wd,backendName:"cpu",kernelFunc:plt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const glt={kernelName:oy,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:a,fillValue:r,center:i}=t,l=e,u=bn(s.dtype,ht(s.shape)),[h,d,p,m]=s.shape,[y,b]=Fw(i,d,p),v=255,w=Math.sin(a),S=Math.cos(a),T=l.data.get(s.dataId).values;for(let C=0;C<h;C++){const I=C*p*d*m;for(let R=0;R<d;R++){const L=R*(p*m);for(let M=0;M<p;M++){const O=M*m;for(let _=0;_<m;_++){const A=[h,R,M,_],G=A[2],X=A[1];let tt=(G-y)*S-(X-b)*w,Q=(G-y)*w+(X-b)*S;tt=Math.round(tt+y),Q=Math.round(Q+b);let U=r;if(typeof r!="number"&&(_===3?U=v:U=r[_]),tt>=0&&tt<p&&Q>=0&&Q<d){const Y=Q*(p*m),rt=tt*m,B=I+Y+rt+_;U=T[B]}const et=I+L+O+_;u[et]=U}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ylt=ye(Hu,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),blt={kernelName:Hu,backendName:"cpu",kernelFunc:ylt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xlt(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a,updates:r}=t,{shape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=Pi(r,a,i),m=!0,y=e.bufferSync(a),b=e.bufferSync(r),v=$o(y,b,i,p,h,u,l,d,0,m);return e.makeTensorInfo(i,v.dtype,v.values)}const vlt={kernelName:Hg,backendName:"cpu",kernelFunc:xlt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wlt(n,t){let e=0,s=n.length,a=0;for(;e<s;)a=Math.floor((e+s)/2),n[a]<t?e=a+1:s=a;return s}function Slt(n,t){let e=0,s=n.length,a=0;for(;e<s;)a=Math.floor((e+s)/2),n[a]<=t?e=a+1:s=a;return s}function Nlt(n,t,e,s,a,r){const i=Ve("int32",e*a);for(let l=0;l<e;++l){const u=n.slice(l*s,(l+1)*s),h=l*a;for(let d=0;d<a;++d)i[h+d]=r==="left"?wlt(u,t[d+h]):Slt(u,t[d+h])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tlt(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:a,values:r}=t,{side:i}=s,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,h=Nlt(l,u,a.shape[0],a.shape[1],r.shape[1],i);return e.makeTensorInfo(r.shape,"int32",h)}const Clt={kernelName:qg,backendName:"cpu",kernelFunc:Tlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $lt(n){const{inputs:t,backend:e}=n,{condition:s,t:a,e:r}=t;Rt([s,a,r],"select");const i=s.shape.length,l=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,d=rs(a.dtype,r.dtype),p=En(ht(a.shape),d);let m=0;const y=i===0||i>1||a.shape.length===1?1:ht(a.shape.slice(1));for(let b=0;b<l.length;b++)for(let v=0;v<y;v++)l[b]===1?p[m++]=u[b]:p[m++]=h[b];return e.makeTensorInfo(a.shape,d,p)}const klt={kernelName:Gd,backendName:"cpu",kernelFunc:$lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ilt=Yy,Elt=Zy,Alt=ye(qu,n=>n>=0?Elt*n:Ilt*(Math.exp(n)-1)),Rlt={kernelName:qu,backendName:"cpu",kernelFunc:Alt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dlt=ye(Yu,n=>n<0?-1:n>0?1:0),Olt={kernelName:Yu,backendName:"cpu",kernelFunc:Dlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _lt=ye(Ku,n=>Math.sin(n)),Flt={kernelName:Ku,backendName:"cpu",kernelFunc:_lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Llt=ye(Xu,n=>Math.sinh(n)),zlt={kernelName:Xu,backendName:"cpu",kernelFunc:Llt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mlt=11920928955078125e-23,Ek=Math.log(Mlt)+2,Blt=ye(Qu,n=>{const t=n>-Ek,e=n<Ek,s=Math.exp(n);let a;return e?a=s:t?a=n:a=Math.log(1+s),a}),Vlt={kernelName:Qu,backendName:"cpu",kernelFunc:Blt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Plt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,paddings:i}=s;Rt([a],"spaceToBatchND");const l=ht(r),u=[[0,0]];u.push(...i);for(let R=1+r.length;R<a.shape.length;++R)u.push([0,0]);const h=K_.kernelFunc({inputs:{x:a},backend:e,attrs:{paddings:u,constantValue:0}}),d=wf(h.shape,r,l,!1),p=Sf(d.length,r.length,!1),m=Nf(h.shape,r,l,!1),v=Ie({inputs:{x:h},backend:e,attrs:{shape:d}}),T=cs({inputs:{x:v},backend:e,attrs:{perm:p}}),I=Ie({inputs:{x:T},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(T),I}const Ult={kernelName:qd,backendName:"cpu",kernelFunc:Plt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wlt(n){const{inputs:t,backend:e}=n,{indices:s,values:a,denseShape:r,defaultValue:i}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,d=e.data.get(i.dataId).values[0],[p,m,y,b,v]=NR(l,s.shape,s.dtype,u,a.dtype,h,d);return[e.makeTensorInfo(m,s.dtype,p),e.makeTensorInfo([m[0]],a.dtype,y),e.makeTensorInfo([b.length],"bool",new Uint8Array(b.map(w=>Number(w)))),e.makeTensorInfo([v.length],s.dtype,new Int32Array(v))]}const Glt={kernelName:Kg,backendName:"cpu",kernelFunc:Wlt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hlt(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:a,newShape:r}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(e.data.get(a.dataId).values),l=e.data.get(s.dataId).values,u=Array.from(e.data.get(r.dataId).values),[h,d,p]=TR(l,s.shape,s.dtype,i,u);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([p.length],r.dtype,new Int32Array(p))]}const jlt={kernelName:Xg,backendName:"cpu",kernelFunc:Hlt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qlt(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,d]=oS(i,s.shape,s.dtype,l,u,!0);return e.makeTensorInfo(d,s.dtype,h)}const Klt={kernelName:Yg,backendName:"cpu",kernelFunc:qlt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xlt(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,d]=oS(i,s.shape,s.dtype,l,u);return e.makeTensorInfo(d,s.dtype,h)}const Ylt={kernelName:Zg,backendName:"cpu",kernelFunc:Xlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zlt(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:a,sparseValues:r,defaultValue:i}=t,{outputShape:l}=s,{sliceRank:u,numUpdates:h,sliceSize:d,strides:p,outputSize:m}=Pi(r,a,l),y=!1,b=e.bufferSync(a);let v;switch(r.dtype){case"bool":{const w=e.bufferSync(r),S=!!e.data.get(i.dataId).values[0];v=$o(b,w,l,m,d,h,u,p,S,y);break}case"float32":{const w=e.bufferSync(r),S=e.data.get(i.dataId).values[0];v=$o(b,w,l,m,d,h,u,p,S,y);break}case"int32":{const w=e.bufferSync(r),S=e.data.get(i.dataId).values[0];v=$o(b,w,l,m,d,h,u,p,S,y);break}case"string":{const w=e.bufferSync(r),S=Er(e.data.get(i.dataId).values[0]);v=$o(b,w,l,m,d,h,u,p,S,y);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return e.makeTensorInfo(l,v.dtype,v.values)}const Qlt={kernelName:Qg,backendName:"cpu",kernelFunc:Zlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jlt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{numOrSizeSplits:r,axis:i}=s,l=Kt(i,a.shape)[0],u=Yw(a,r,l),h=new Array(a.shape.length).fill(0),d=a.shape.slice();return u.map(p=>{const m=[...d];m[l]=p;const y=Go({inputs:{x:a},backend:e,attrs:{begin:h,size:m}});return h[l]+=p,y})}const tut={kernelName:Kd,backendName:"cpu",kernelFunc:Jlt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eut={kernelName:Jg,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;Rt(e,"square");const a=s.data.get(e.dataId).values,r=new Float32Array(a.length);for(let l=0;l<a.length;++l){const u=a[l];r[l]=u*u}return{dataId:s.write(r,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nut=ye(rc,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),sut={kernelName:rc,backendName:"cpu",kernelFunc:nut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aut(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,end:i,strides:l,beginMask:u,endMask:h,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:m}=s;Rt(a,"stridedSlice");const{finalShapeSparse:y,finalShape:b,isIdentity:v,sliceDim0:w,isSimpleSlice:S,begin:T,end:$,strides:C}=Rw(a.shape,r,i,l,u,h,d,p,m);let I;if(v)I=Ie({inputs:{x:a},backend:e,attrs:{shape:b}});else if(w||S){D(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const R=Iw(T,$,C),L=Go({inputs:{x:a},backend:e,attrs:{begin:T,size:R}});I=Ie({inputs:{x:L},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(L)}else{const R=e.bufferSync(a),L=kR(y,R,C,T);I=e.makeTensorInfo(b,L.dtype,L.values)}return I}const rut={kernelName:ty,backendName:"cpu",kernelFunc:aut};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iut(n){const{inputs:t,backend:e,attrs:s}=n,{separator:a,nGramWidths:r,leftPad:i,rightPad:l,padWidth:u,preserveShortSequences:h}=s,{data:d,dataSplits:p}=t,m=e.data.get(d.dataId).values,y=e.data.get(p.dataId).values,[b,v]=IR(m,y,a,r,i,l,u,h);return[e.makeTensorInfo([b.length],"string",b),e.makeTensorInfo(p.shape,"int32",v)]}const out={kernelName:ey,backendName:"cpu",kernelFunc:iut};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lut(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:a}=s,{input:r,delimiter:i}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=e.data.get(r.dataId).values,u=e.data.get(i.dataId).values[0],[h,d,p]=ER(l,u,a),m=d.length;return[e.makeTensorInfo([m,2],"int32",h),e.makeTensorInfo([m],"string",d),e.makeTensorInfo([2],"int32",new Int32Array(p))]}const uut={kernelName:ny,backendName:"cpu",kernelFunc:lut};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cut(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:a}=s,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=e.data.get(r.dataId).values,l=AR(i,a);return e.makeTensorInfo(r.shape,"int32",l)}const hut={kernelName:sy,backendName:"cpu",kernelFunc:cut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dut=ye(nc,n=>Math.tan(n)),fut={kernelName:nc,backendName:"cpu",kernelFunc:dut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const put=ye(sc,n=>Math.tanh(n)),mut={kernelName:sc,backendName:"cpu",kernelFunc:put};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gut(n){const{inputs:t,backend:e}=n,{tensor:s,indices:a,updates:r}=t,{sliceRank:i,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Pi(r,a,s.shape),p=!1,m=e.bufferSync(a),y=e.bufferSync(r),b=e.bufferSync(s),v=$o(m,y,s.shape,d,u,l,i,h,b,p);return e.makeTensorInfo(s.shape,v.dtype,v.values)}const yut={kernelName:jg,backendName:"cpu",kernelFunc:gut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function but(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reps:r}=s;Rt(a,"tile");const i=DR(e.bufferSync(a),r);return e.makeTensorInfo(i.shape,i.dtype,i.values)}const xut={kernelName:ac,backendName:"cpu",kernelFunc:but};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vut(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{k:r,sorted:i}=s;Rt(a,"topk");const l=e.data.get(a.dataId).values,[u,h]=_R(l,a.shape,a.dtype,r,i);return[e.makeTensorInfo(u.shape,u.dtype,u.values),e.makeTensorInfo(h.shape,h.dtype,h.values)]}const wut={kernelName:ay,backendName:"cpu",kernelFunc:vut};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sut(n){const{inputs:t,attrs:e,backend:s}=n,{image:a,transforms:r}=t,{interpolation:i,fillMode:l,fillValue:u,outputShape:h}=e,[d,p,m,y]=a.shape,[b,v]=h??[p,m],w=[d,b,v,y],S=Lt(a.shape),T=S[0],$=S[1],C=S[2],I=Lt(w),R=I[0],L=I[1],M=I[2],O=bn(a.dtype,ht(w));O.fill(u);const _=s.data.get(a.dataId).values,A=s.data.get(r.dataId).values;for(let X=0;X<d;++X){const tt=r.shape[0]===1?A:A.subarray(X*8,X*8+8);for(let Q=0;Q<b;++Q)for(let U=0;U<v;++U)for(let et=0;et<y;++et){let Y;const rt=tt[6]*U+tt[7]*Q+1;if(rt===0)continue;const B=(tt[0]*U+tt[1]*Q+tt[2])/rt,q=(tt[3]*U+tt[4]*Q+tt[5])/rt,lt=Ak(B,m,l),ot=Ak(q,p,l);switch(i){case"nearest":Y=Iut(_,p,m,T,$,C,X,ot,lt,et,u);break;case"bilinear":Y=Eut(_,p,m,T,$,C,X,ot,lt,et,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const ut=X*R+Q*L+U*M+et;O[ut]=Y}return s.makeTensorInfo(w,a.dtype,O)}return{dataId:s.write(O,w,a.dtype),shape:a.shape,dtype:a.dtype}}const Nut={kernelName:ry,backendName:"cpu",kernelFunc:Sut};function Ak(n,t,e){switch(e){case"reflect":return Tut(n,t);case"wrap":return Cut(n,t);case"nearest":return kut(n,t);case"constant":default:return $ut(n)}}function Tut(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return Si(0,e,t-1)}function Cut(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return Si(0,e,t-1)}function $ut(n,t){return n}function kut(n,t){return Si(0,n,t-1)}function Eh(n,t,e,s,a,r,i,l,u,h,d){const p=i*s+l*a+u*r+h;return 0<=l&&l<t&&0<=u&&u<e?n[p]:d}function Iut(n,t,e,s,a,r,i,l,u,h,d){const p=Math.round(l),m=Math.round(u);return Eh(n,t,e,s,a,r,i,p,m,h,d)}function Eut(n,t,e,s,a,r,i,l,u,h,d){const p=Math.floor(l),m=Math.floor(u),y=p+1,b=m+1,v=(b-u)*Eh(n,t,e,s,a,r,i,p,m,h,d)+(u-m)*Eh(n,t,e,s,a,r,i,p,b,h,d),w=(b-u)*Eh(n,t,e,s,a,r,i,y,m,h,d)+(u-m)*Eh(n,t,e,s,a,r,i,y,b,h,d);return(y-l)*v+(l-p)*w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aut(n){const{inputs:t,attrs:e,backend:s}=n,{axis:a}=e,{x:r}=t;Rt(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:l,outputShape:u,indices:h}=FR(i,a,r.shape,r.dtype);return[s.makeTensorInfo(u,r.dtype,l),s.makeTensorInfo([h.length],"int32",h)]}const Rut={kernelName:iy,backendName:"cpu",kernelFunc:Aut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dut(n){const{inputs:t,backend:e,attrs:s}=n,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a.shape.length,l=a.shape[r],u=new Array(i-1);let h=0;for(let y=0;y<i;y++)y!==r&&(u[h++]=a.shape[y]);const d=new Array(i).fill(0),p=a.shape.slice();p[r]=1;const m=new Array(l);for(let y=0;y<m.length;y++){d[r]=y;const b=Go({inputs:{x:a},backend:e,attrs:{begin:d,size:p}});m[y]=Ie({inputs:{x:b},backend:e,attrs:{shape:u}}),e.disposeIntermediateTensorInfo(b)}return m}const Out={kernelName:Zd,backendName:"cpu",kernelFunc:Dut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ut(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,segmentIds:r}=t,{numSegments:i}=s;Rt(a,"unsortedSegmentSum");const l=a.shape.length,u=r.shape.length,h=[],d=[],p=l-u;let m=r;for(let b=0;b<p;++b){const v=Zm({inputs:{input:m},backend:e,attrs:{dim:b+1}});m=v,d.push(v)}for(let b=0;b<i;++b){const v=Fr(b,"int32"),w=e.makeTensorInfo([],"int32",v),S=YA({inputs:{a:w,b:m},backend:e}),T=Ai({inputs:{x:S},backend:e,attrs:{dtype:"float32"}}),$=Jy({inputs:{a:T,b:a},backend:e}),C=Mf({inputs:{x:$},backend:e,attrs:{axis:0,keepDims:!1}});h.push(C),d.push(w),d.push(S),d.push(T),d.push($),d.push(C)}const y=q_({inputs:h,backend:e,attrs:{axis:0}});return d.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const Fut={kernelName:Qd,backendName:"cpu",kernelFunc:_ut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lut=[Aat,iq,Dat,_at,dq,Lat,Mat,Vat,Uat,Gat,jat,Kat,Yat,Jat,ert,art,irt,lrt,crt,Iat,drt,prt,grt,pq,brt,cq,gq,vrt,oq,Srt,Trt,Crt,krt,Ert,Rrt,Ort,Frt,zrt,Brt,Prt,Wrt,Hrt,qrt,Xrt,Yrt,Qrt,tit,nit,sit,ait,rit,oit,cit,wat,dit,yq,vit,bq,wit,vq,kit,Iit,Ait,Sq,Tq,Dit,_it,Lit,Mit,$q,Iq,lq,Vit,Nrt,Uit,Git,jit,Sat,Aq,Dq,Kit,_q,Yit,Jit,eot,aot,iot,lot,uot,Lq,hot,fot,mot,yot,xot,wot,Not,Mq,Cot,Iot,Rot,Vq,Uq,_ot,zot,Vot,Gq,Uot,Got,Hot,K_,Xot,Tat,qq,Zot,Jot,elt,slt,uq,K1,rlt,Cat,$at,kat,olt,ult,hlt,flt,mlt,glt,blt,e5,vlt,Clt,klt,Rlt,s5,Olt,Flt,zlt,a5,Eot,Vlt,Ult,Glt,jlt,Klt,Ylt,Qlt,tut,o5,eut,u5,h5,sut,rut,out,uut,hut,m5,lit,fut,mut,yut,xut,wut,Nut,Hq,Rut,Out,Fut,Wot];for(const n of Lut)ly(n);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X_="aqua",zut=2;function Rk({y:n,x:t}){return[n,t]}function Mut(n,t,e,s,a){n.beginPath(),n.arc(e,t,s,0,2*Math.PI),n.fillStyle=a,n.fill()}function But([n,t],[e,s],a,r,i){i.beginPath(),i.moveTo(t*r,n*r),i.lineTo(s*r,e*r),i.lineWidth=zut,i.strokeStyle=a,i.stroke()}function Y_(n,t,e,s=1){e6(n,t).forEach(r=>{But(Rk(r[0].position),Rk(r[1].position),X_,s,e)})}function Z_(n,t,e,s=1){for(let a=0;a<n.length;a++){const r=n[a];if(r.score<t)continue;const{y:i,x:l}=r.position;Mut(e,i*s,l*s,3,X_)}}function Q_(n,t){switch(t){case"Squat":return Vut(n);case"RDL":return{message:"RDL feedback not implemented",color:"orange"};default:return{message:"No feedback available",color:"gray"}}}function Vut(n){const e=["leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"];for(const l of e){const u=n.find(h=>h.part===l);if(!u||u.score<.6)return{message:`Unable to see ${l}`,color:"yellow"}}const s=n.find(l=>l.part==="leftHip").position,a=n.find(l=>l.part==="rightHip").position;if(s.y<a.y)return{message:"You're doing it wrong, left hip higher than right",color:"red"};const r=Dk(n,"leftHip","rightHip"),i=Dk(n,"leftKnee","rightKnee");return r.y<i.y?{message:"You're not squatting deep enough",color:"red"}:{message:"Correct Form!!",color:"green"}}function Dk(n,t,e){const s=n.find(r=>r.part===t).position,a=n.find(r=>r.part===e).position;return{x:(s.x+a.x)/2,y:(s.y+a.y)/2}}function Put({exercise:n}){const t=aa.useRef(null),e=aa.useRef(null),[s,a]=aa.useState({message:"",color:""});aa.useEffect(()=>{let i;return(async()=>{const u=await AA({inputResolution:{width:640,height:480},scale:.5});i=setInterval(async()=>{if(t.current&&t.current.video&&t.current.video.readyState===4&&t.current.video.videoWidth>0&&t.current.video.videoHeight>0){const h=t.current.video,d=await u.estimateSinglePose(h);console.log("Pose:",d);const p=Q_(d.keypoints,n);a(p),r(d,h)}},100)})(),()=>clearInterval(i)},[n]);const r=(i,l)=>{const u=e.current.getContext("2d");e.current.width=l.videoWidth,e.current.height=l.videoHeight,u.clearRect(0,0,e.current.width,e.current.height),Z_(i.keypoints,.6,u),Y_(i.keypoints,.6,u)};return ce.jsxs("div",{style:{position:"relative",width:640,height:480,margin:"auto"},children:[ce.jsx(xtt,{ref:t,width:640,height:480,style:{position:"absolute",zIndex:9}}),ce.jsx("canvas",{ref:e,width:640,height:480,style:{position:"absolute",zIndex:10}}),ce.jsx("div",{style:{position:"absolute",top:10,left:10,backgroundColor:s.color,color:"black",padding:"5px 10px",borderRadius:"5px",fontWeight:"bold",zIndex:20},children:s.message})]})}function Uut({exercise:n}){const t=aa.useRef(null),e=aa.useRef(null),[s,a]=aa.useState(null),[r,i]=aa.useState({message:"",color:""}),l=h=>{const d=h.target.files[0];a(URL.createObjectURL(d))};aa.useEffect(()=>{if(!s)return;let h;return(async()=>{const p=await AA({inputResolution:{width:640,height:480},scale:.5}),m=t.current,y=()=>{h=setInterval(async()=>{if(m.readyState===4&&m.videoWidth>0&&m.videoHeight>0){const b=await p.estimateSinglePose(m);console.log("Pose:",b);const v=Q_(b.keypoints,n);i(v),u(b,m)}},100)};m.readyState>=3?(m.play(),y()):m.addEventListener("loadeddata",()=>{m.play(),y()})})(),()=>clearInterval(h)},[s,n]);const u=(h,d)=>{const p=e.current,m=p.getContext("2d");p.width=d.videoWidth,p.height=d.videoHeight,m.clearRect(0,0,p.width,p.height),Z_(h.keypoints,.6,m),Y_(h.keypoints,.6,m)};return ce.jsxs("div",{style:{position:"relative",width:640,height:480,margin:"0 auto"},children:[!s&&ce.jsx("input",{type:"file",accept:"video/*",onChange:l}),s&&ce.jsxs(ce.Fragment,{children:[ce.jsx("video",{ref:t,src:s,width:640,height:480,controls:!0,autoPlay:!0,muted:!0,loop:!0,style:{position:"absolute",zIndex:9}}),ce.jsx("canvas",{ref:e,width:640,height:480,style:{position:"absolute",top:0,left:0,zIndex:10}}),ce.jsx("div",{style:{position:"absolute",top:10,left:10,backgroundColor:r.color,color:"black",padding:"5px 10px",borderRadius:"5px",fontWeight:"bold",zIndex:20},children:r.message})]})]})}function Wut(){const[n,t]=aa.useState(null),[e,s]=aa.useState("Squat");return ce.jsxs(ce.Fragment,{children:[ce.jsx($L,{}),!n&&ce.jsxs("div",{className:"mode-selection",children:[ce.jsx("button",{className:"mode-button live-button",onClick:()=>t("live"),children:"Live Webcam Analysis"}),ce.jsx("button",{className:"mode-button upload-button",onClick:()=>t("upload"),children:"Upload a Video"})]}),n&&ce.jsxs("div",{className:"exercise-selector",children:[ce.jsx("label",{htmlFor:"exercise-select",children:"Choose your exercise:"}),ce.jsxs("select",{id:"exercise-select",value:e,onChange:a=>s(a.target.value),children:[ce.jsx("option",{value:"Squat",children:"Squat"}),ce.jsx("option",{value:"RDL",children:"RDL (Romanian Deadlift)"}),ce.jsx("option",{value:"Push-up",children:"Push-up"}),ce.jsx("option",{value:"Lunge",children:"Lunge"}),ce.jsx("option",{value:"Deadlift",children:"Deadlift"}),ce.jsx("option",{value:"Plank",children:"Plank"})]})]}),n==="live"&&ce.jsx(Put,{exercise:e}),n==="upload"&&ce.jsx(Uut,{exercise:e})]})}CL.createRoot(document.getElementById("root")).render(ce.jsx(aa.StrictMode,{children:ce.jsx(Wut,{})}));
